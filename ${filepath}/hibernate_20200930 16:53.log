[DEBUG] 2020-09-30 16:53:01.854 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-09-30 16:53:02.050 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-09-30 16:53:02.154 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-09-30 16:53:04.935 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-09-30 16:53:05.049 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-09-30 16:53:14.229 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-09-30 16:53:14.237 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-09-30 16:53:14.347 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-09-30 16:53:23.795 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-09-30 16:53:24.252 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-09-30 16:53:24.265 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-09-30 16:53:24.486 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-09-30 16:53:24.728 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5f462e3b
[DEBUG] 2020-09-30 16:53:24.729 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5f462e3b
[DEBUG] 2020-09-30 16:53:24.729 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f462e3b
[DEBUG] 2020-09-30 16:53:24.731 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@585c13de
[DEBUG] 2020-09-30 16:53:24.733 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@522b2631
[DEBUG] 2020-09-30 16:53:24.734 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@77128dab
[DEBUG] 2020-09-30 16:53:24.736 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@61533ae
[DEBUG] 2020-09-30 16:53:24.738 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@61533ae
[DEBUG] 2020-09-30 16:53:24.739 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61533ae
[DEBUG] 2020-09-30 16:53:24.745 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5395ea39
[DEBUG] 2020-09-30 16:53:24.747 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5395ea39
[DEBUG] 2020-09-30 16:53:24.747 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5395ea39
[DEBUG] 2020-09-30 16:53:24.762 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@15723761
[DEBUG] 2020-09-30 16:53:24.763 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@15723761
[DEBUG] 2020-09-30 16:53:24.763 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15723761
[DEBUG] 2020-09-30 16:53:24.765 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@710d7aff
[DEBUG] 2020-09-30 16:53:24.765 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@710d7aff
[DEBUG] 2020-09-30 16:53:24.766 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@710d7aff
[DEBUG] 2020-09-30 16:53:24.769 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@36bc415e
[DEBUG] 2020-09-30 16:53:24.772 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@36bc415e
[DEBUG] 2020-09-30 16:53:24.776 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@36bc415e
[DEBUG] 2020-09-30 16:53:24.779 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4ebadd3d
[DEBUG] 2020-09-30 16:53:24.780 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4ebadd3d
[DEBUG] 2020-09-30 16:53:24.780 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4ebadd3d
[DEBUG] 2020-09-30 16:53:24.786 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4a699efa
[DEBUG] 2020-09-30 16:53:24.793 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4a699efa
[DEBUG] 2020-09-30 16:53:24.794 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a699efa
[DEBUG] 2020-09-30 16:53:24.795 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@66434cc8
[DEBUG] 2020-09-30 16:53:24.796 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@66434cc8
[DEBUG] 2020-09-30 16:53:24.797 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d467c87
[DEBUG] 2020-09-30 16:53:24.798 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d467c87
[DEBUG] 2020-09-30 16:53:24.799 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@511d5d04
[DEBUG] 2020-09-30 16:53:24.800 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@511d5d04
[DEBUG] 2020-09-30 16:53:24.833 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5328a9c1
[DEBUG] 2020-09-30 16:53:24.852 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@715fb77
[DEBUG] 2020-09-30 16:53:24.880 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1eea9d2d
[DEBUG] 2020-09-30 16:53:24.883 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1eea9d2d
[DEBUG] 2020-09-30 16:53:24.891 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6d91790b
[DEBUG] 2020-09-30 16:53:24.892 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6d91790b
[DEBUG] 2020-09-30 16:53:24.906 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c28c1
[DEBUG] 2020-09-30 16:53:24.914 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c28c1
[DEBUG] 2020-09-30 16:53:24.931 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5b3f3ba0
[DEBUG] 2020-09-30 16:53:24.931 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5b3f3ba0
[DEBUG] 2020-09-30 16:53:24.932 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5eeedb60
[DEBUG] 2020-09-30 16:53:24.933 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5eeedb60
[DEBUG] 2020-09-30 16:53:24.962 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2b9b7f1f
[DEBUG] 2020-09-30 16:53:24.963 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2b9b7f1f
[DEBUG] 2020-09-30 16:53:24.965 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55ea2d70
[DEBUG] 2020-09-30 16:53:24.965 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@55ea2d70
[DEBUG] 2020-09-30 16:53:24.985 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@67a056f1
[DEBUG] 2020-09-30 16:53:24.999 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@67a056f1
[DEBUG] 2020-09-30 16:53:25.011 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7fedfe27
[DEBUG] 2020-09-30 16:53:25.014 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7fedfe27
[DEBUG] 2020-09-30 16:53:25.034 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@59712875
[DEBUG] 2020-09-30 16:53:25.034 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59712875
[DEBUG] 2020-09-30 16:53:25.041 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@25b865b5
[DEBUG] 2020-09-30 16:53:25.044 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@25b865b5
[DEBUG] 2020-09-30 16:53:25.048 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5d58c727
[DEBUG] 2020-09-30 16:53:25.049 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5d58c727
[DEBUG] 2020-09-30 16:53:25.049 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5d58c727
[DEBUG] 2020-09-30 16:53:25.064 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@54da32dc
[DEBUG] 2020-09-30 16:53:25.098 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@66bfd864
[DEBUG] 2020-09-30 16:53:25.102 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@66bfd864
[DEBUG] 2020-09-30 16:53:25.102 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@66bfd864
[DEBUG] 2020-09-30 16:53:25.134 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30cecdca
[DEBUG] 2020-09-30 16:53:25.145 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1ddd3478
[DEBUG] 2020-09-30 16:53:25.146 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1ddd3478
[DEBUG] 2020-09-30 16:53:25.155 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@68809cc7
[DEBUG] 2020-09-30 16:53:25.156 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@68809cc7
[DEBUG] 2020-09-30 16:53:25.162 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@13cd7ea5
[DEBUG] 2020-09-30 16:53:25.163 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@13cd7ea5
[DEBUG] 2020-09-30 16:53:25.165 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@ff6077
[DEBUG] 2020-09-30 16:53:25.165 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@ff6077
[DEBUG] 2020-09-30 16:53:25.168 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29be7749
[DEBUG] 2020-09-30 16:53:25.168 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29be7749
[DEBUG] 2020-09-30 16:53:25.173 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a4d7f76
[DEBUG] 2020-09-30 16:53:25.189 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1e63d216
[DEBUG] 2020-09-30 16:53:25.190 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1e63d216
[DEBUG] 2020-09-30 16:53:25.190 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1e63d216
[DEBUG] 2020-09-30 16:53:25.193 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e38d975
[DEBUG] 2020-09-30 16:53:25.194 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e38d975
[DEBUG] 2020-09-30 16:53:25.197 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e38d975
[DEBUG] 2020-09-30 16:53:25.200 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1280851e
[DEBUG] 2020-09-30 16:53:25.201 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4fcc0416
[DEBUG] 2020-09-30 16:53:25.204 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6ef81f31
[DEBUG] 2020-09-30 16:53:25.204 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6ef81f31
[DEBUG] 2020-09-30 16:53:25.205 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6ef81f31
[DEBUG] 2020-09-30 16:53:25.208 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3028e50e
[DEBUG] 2020-09-30 16:53:25.215 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3028e50e
[DEBUG] 2020-09-30 16:53:25.215 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3028e50e
[DEBUG] 2020-09-30 16:53:25.216 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@777c350f
[DEBUG] 2020-09-30 16:53:25.231 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4bdc8b5d
[DEBUG] 2020-09-30 16:53:25.278 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@40ab8a8
[DEBUG] 2020-09-30 16:53:25.298 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@40ab8a8
[DEBUG] 2020-09-30 16:53:25.316 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@21719a0
[DEBUG] 2020-09-30 16:53:25.329 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@37095ded
[DEBUG] 2020-09-30 16:53:25.330 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@37095ded
[DEBUG] 2020-09-30 16:53:25.356 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@11a7ba62
[DEBUG] 2020-09-30 16:53:25.357 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@11a7ba62
[DEBUG] 2020-09-30 16:53:25.363 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4c0884e8
[DEBUG] 2020-09-30 16:53:25.366 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7b208b45
[DEBUG] 2020-09-30 16:53:25.374 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4443ef6f
[DEBUG] 2020-09-30 16:53:25.406 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@42c2f48c
[DEBUG] 2020-09-30 16:53:25.414 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@42c2f48c
[DEBUG] 2020-09-30 16:53:25.416 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4cbd03e7
[DEBUG] 2020-09-30 16:53:25.416 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@52fc5eb1
[DEBUG] 2020-09-30 16:53:25.416 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a639ec5
[DEBUG] 2020-09-30 16:53:25.417 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@14151bc5
[DEBUG] 2020-09-30 16:53:25.417 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3013909b
[DEBUG] 2020-09-30 16:53:25.417 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a49fe
[DEBUG] 2020-09-30 16:53:25.418 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@66596a88
[DEBUG] 2020-09-30 16:53:25.418 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5aae8eb5
[DEBUG] 2020-09-30 16:53:25.846 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-09-30 16:53:25.848 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-09-30 16:53:25.849 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-09-30 16:53:25.850 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-09-30 16:53:25.860 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-09-30 16:53:25.869 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-09-30 16:53:25.871 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-09-30 16:53:25.875 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-09-30 16:53:25.876 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-09-30 16:53:25.877 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-09-30 16:53:25.878 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-09-30 16:53:25.879 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-09-30 16:53:25.880 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-09-30 16:53:25.882 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-09-30 16:53:25.911 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test?serverTimezone=UTC
[INFO ] 2020-09-30 16:53:25.911 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-09-30 16:53:25.912 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-09-30 16:53:28.002 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-09-30 16:53:35.253 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-09-30 16:53:35.257 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-09-30 16:53:35.469 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-09-30 16:53:36.118 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-09-30 16:53:36.427 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-09-30 16:53:36.764 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-09-30 16:53:38.178 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-09-30 16:53:38.209 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1abfe081] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2a685eba]
[DEBUG] 2020-09-30 16:53:39.075 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-09-30 16:53:39.407 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-09-30 16:53:39.439 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-09-30 16:53:39.474 [main] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2020-09-30 16:53:39.654 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-09-30 16:53:39.706 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-09-30 16:53:39.819 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-09-30 16:53:39.852 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-09-30 16:53:39.870 [main] PropertyBinder - Building property userId
[DEBUG] 2020-09-30 16:53:39.917 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-09-30 16:53:39.920 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-09-30 16:53:39.924 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-09-30 16:53:39.930 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2020-09-30 16:53:39.946 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-09-30 16:53:39.947 [main] PropertyBinder - Building property email
[DEBUG] 2020-09-30 16:53:39.952 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-09-30 16:53:39.954 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-09-30 16:53:39.954 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2020-09-30 16:53:39.954 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-09-30 16:53:39.955 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-09-30 16:53:39.956 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-09-30 16:53:39.957 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-09-30 16:53:39.958 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2020-09-30 16:53:39.958 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-09-30 16:53:39.959 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-09-30 16:53:39.966 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-09-30 16:53:39.978 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-09-30 16:53:39.979 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2020-09-30 16:53:39.984 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-09-30 16:53:39.984 [main] PropertyBinder - Building property password
[DEBUG] 2020-09-30 16:53:40.012 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-09-30 16:53:40.014 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-09-30 16:53:40.015 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-09-30 16:53:40.015 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-09-30 16:53:40.015 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-09-30 16:53:40.020 [main] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-09-30 16:53:40.402 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-09-30 16:53:40.410 [main] Settings - SessionFactory name : null
[DEBUG] 2020-09-30 16:53:40.411 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-09-30 16:53:40.412 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-09-30 16:53:40.423 [main] Settings - Statistics: disabled
[DEBUG] 2020-09-30 16:53:40.425 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-09-30 16:53:40.432 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-09-30 16:53:40.432 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-09-30 16:53:40.434 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-09-30 16:53:40.434 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-09-30 16:53:40.434 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-09-30 16:53:40.434 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-09-30 16:53:40.434 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-09-30 16:53:40.434 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-09-30 16:53:40.434 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-09-30 16:53:40.434 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-09-30 16:53:40.435 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-09-30 16:53:40.435 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-09-30 16:53:40.436 [main] Settings - Named query checking : enabled
[DEBUG] 2020-09-30 16:53:40.436 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-09-30 16:53:40.437 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-09-30 16:53:40.437 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-09-30 16:53:40.437 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-09-30 16:53:40.437 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-09-30 16:53:40.437 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-09-30 16:53:40.437 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-09-30 16:53:40.437 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-09-30 16:53:40.437 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-09-30 16:53:40.437 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-09-30 16:53:40.442 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-09-30 16:53:40.444 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-09-30 16:53:40.450 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-09-30 16:53:40.451 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-09-30 16:53:40.451 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-09-30 16:53:40.454 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-09-30 16:53:40.456 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-09-30 16:53:40.470 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-09-30 16:53:40.484 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-09-30 16:53:40.484 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-09-30 16:53:41.134 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-09-30 16:53:41.337 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-09-30 16:53:41.343 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/IdeaProjects/customCrafts/target/test-classes:/home/student/IdeaProjects/customCrafts/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 edu.matc.persistence.UserDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-48-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.8, user.dir=/home/student/IdeaProjects/customCrafts, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7f6874f2, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2020-09-30 16:53:41.445 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-09-30 16:53:41.448 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-09-30 16:53:41.450 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-09-30 16:53:41.453 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1abfe081] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7e7f3cfd]
[DEBUG] 2020-09-30 16:53:41.819 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-09-30 16:53:41.830 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-09-30 16:53:42.593 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-09-30 16:53:42.600 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-09-30 16:53:45.187 [main] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.User
[DEBUG] 2020-09-30 16:53:45.194 [main] AbstractEntityPersister -  Version select: select user_id from user where user_id =?
[DEBUG] 2020-09-30 16:53:45.194 [main] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.email as email2_0_, user_.first_name as first_na3_0_, user_.last_name as last_nam4_0_, user_.password as password5_0_ from user user_ where user_.user_id=?
[DEBUG] 2020-09-30 16:53:45.194 [main] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-09-30 16:53:45.194 [main] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=? where user_id=?
[DEBUG] 2020-09-30 16:53:45.194 [main] AbstractEntityPersister -  Delete 0: delete from user where user_id=?
[DEBUG] 2020-09-30 16:53:45.195 [main] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password) values (?, ?, ?, ?)
[DEBUG] 2020-09-30 16:53:45.307 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25be445f]
[DEBUG] 2020-09-30 16:53:45.312 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-09-30 16:53:45.313 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-09-30 16:53:45.313 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-09-30 16:53:45.320 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-09-30 16:53:45.321 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-09-30 16:53:45.368 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-09-30 16:53:45.385 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

[DEBUG] 2020-09-30 16:53:45.395 [main] EntityLoader - Static select for entity edu.matc.entity.User [NONE]: select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:53:45.400 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40709f9]
[DEBUG] 2020-09-30 16:53:45.401 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-09-30 16:53:45.402 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-09-30 16:53:45.402 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-09-30 16:53:45.402 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-09-30 16:53:45.402 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-09-30 16:53:45.402 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-09-30 16:53:45.403 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

[DEBUG] 2020-09-30 16:53:45.403 [main] EntityLoader - Static select for entity edu.matc.entity.User [READ]: select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:53:45.484 [main] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.User: select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:53:45.495 [main] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.User: select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:53:45.713 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-09-30 16:53:45.721 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-09-30 16:53:45.726 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-09-30 16:53:45.786 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-09-30 16:53:45.787 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-09-30 16:53:45.812 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-09-30 16:53:45.825 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-09-30 16:53:45.859 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6002e944
[DEBUG] 2020-09-30 16:53:45.875 [main] SessionFactoryRegistry - Registering SessionFactory: 2e6433b2-5107-444e-818a-cf984d8d44d2 (<unnamed>)
[DEBUG] 2020-09-30 16:53:45.876 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-09-30 16:53:46.718 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-09-30 16:53:46.856 [main] SQL - select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:53:46.969 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-09-30 16:53:46.970 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-09-30 16:53:47.028 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:53:47.051 [main] TwoPhaseLoad - Processing attribute `email` : value = kk@gmail.com
[DEBUG] 2020-09-30 16:53:47.060 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:47.060 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kyle
[DEBUG] 2020-09-30 16:53:47.068 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:47.069 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelley
[DEBUG] 2020-09-30 16:53:47.069 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:47.069 [main] TwoPhaseLoad - Processing attribute `password` : value = anotherpassword
[DEBUG] 2020-09-30 16:53:47.069 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:47.071 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:53:47.072 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 16:53:47.072 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#2
[DEBUG] 2020-09-30 16:53:47.072 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:53:47.139 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-09-30 16:53:47.142 [main] TransactionImpl - begin
[DEBUG] 2020-09-30 16:53:47.204 [main] TransactionImpl - committing
[DEBUG] 2020-09-30 16:53:47.205 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-09-30 16:53:47.209 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-09-30 16:53:47.223 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-09-30 16:53:47.223 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-09-30 16:53:47.235 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-09-30 16:53:47.235 [main] EntityPrinter - edu.matc.entity.User{firstName=Kyle, lastName=Kelley, password=anotherpassword, userId=2, email=kk@gmail.com}
[DEBUG] 2020-09-30 16:53:47.687 [main] SQL - delete from user where user_id=?
[DEBUG] 2020-09-30 16:53:47.752 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:53:47.790 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:53:47.790 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-09-30 16:53:47.791 [main] SQL - select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:53:47.821 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 16:53:47.822 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#2
[DEBUG] 2020-09-30 16:53:47.822 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:53:48.441 [main] SQL - select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:53:48.451 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-09-30 16:53:48.455 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-09-30 16:53:48.456 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:53:48.457 [main] TwoPhaseLoad - Processing attribute `email` : value = es@gmail.com
[DEBUG] 2020-09-30 16:53:48.457 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:48.463 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Elizabeth
[DEBUG] 2020-09-30 16:53:48.473 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:48.473 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sajdak
[DEBUG] 2020-09-30 16:53:48.473 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:48.473 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:53:48.473 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:48.474 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:53:48.474 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 16:53:48.474 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#1
[DEBUG] 2020-09-30 16:53:48.474 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:53:49.241 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-09-30 16:53:49.435 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@55846997
[DEBUG] 2020-09-30 16:53:49.665 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0
[DEBUG] 2020-09-30 16:53:49.680 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:53:49.752 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'matc'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-09-30 16:53:49.843 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-09-30 16:53:49.870 [main] FromElement - FromClause{level=1} : edu.matc.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-09-30 16:53:49.876 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-09-30 16:53:49.900 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-09-30 16:53:49.901 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-09-30 16:53:49.931 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-09-30 16:53:49.932 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-09-30 16:53:49.933 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.matc.entity.User}}

[DEBUG] 2020-09-30 16:53:49.933 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:53:49.940 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0
[DEBUG] 2020-09-30 16:53:49.940 [main] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_0_, user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_ from user user0_
[DEBUG] 2020-09-30 16:53:49.941 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:53:49.964 [main] SQL - select user0_.user_id as user_id1_0_, user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_ from user user0_
[DEBUG] 2020-09-30 16:53:49.979 [main] Loader - Result set row: 0
[DEBUG] 2020-09-30 16:53:49.998 [main] Loader - Result row: EntityKey[edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:53:50.000 [main] Loader - Result set row: 1
[DEBUG] 2020-09-30 16:53:50.000 [main] Loader - Result row: EntityKey[edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:53:50.008 [main] Loader - Result set row: 2
[DEBUG] 2020-09-30 16:53:50.013 [main] Loader - Result row: EntityKey[edu.matc.entity.User#3]
[DEBUG] 2020-09-30 16:53:50.015 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:53:50.017 [main] TwoPhaseLoad - Processing attribute `email` : value = es@gmail.com
[DEBUG] 2020-09-30 16:53:50.017 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.017 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Elizabeth
[DEBUG] 2020-09-30 16:53:50.017 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.022 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sajdak
[DEBUG] 2020-09-30 16:53:50.022 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.024 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:53:50.025 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.031 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:53:50.035 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:53:50.036 [main] TwoPhaseLoad - Processing attribute `email` : value = kk@gmail.com
[DEBUG] 2020-09-30 16:53:50.036 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.036 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kyle
[DEBUG] 2020-09-30 16:53:50.036 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.036 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelley
[DEBUG] 2020-09-30 16:53:50.036 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.036 [main] TwoPhaseLoad - Processing attribute `password` : value = anotherpassword
[DEBUG] 2020-09-30 16:53:50.036 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.037 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:53:50.037 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#3]
[DEBUG] 2020-09-30 16:53:50.037 [main] TwoPhaseLoad - Processing attribute `email` : value = eg@gmail.com
[DEBUG] 2020-09-30 16:53:50.037 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.037 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Emily
[DEBUG] 2020-09-30 16:53:50.037 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.037 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Gorman
[DEBUG] 2020-09-30 16:53:50.037 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.037 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:53:50.037 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.037 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#3]
[DEBUG] 2020-09-30 16:53:50.063 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:53:50.529 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2020-09-30 16:53:50.532 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2020-09-30 16:53:50.612 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:53:50.626 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'matc'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-09-30 16:53:50.637 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-09-30 16:53:50.640 [main] FromElement - FromClause{level=1} : edu.matc.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-09-30 16:53:50.650 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-09-30 16:53:50.664 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-09-30 16:53:50.685 [main] DotNode - getDataType() : lastName -> org.hibernate.type.StringType@511d5d04
[DEBUG] 2020-09-30 16:53:50.688 [main] FromReferenceNode - Resolved : generatedAlias0.lastName -> user0_.last_name
[DEBUG] 2020-09-30 16:53:50.691 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-09-30 16:53:50.693 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.last_name user0_.user_id lastName ) ? ) ) )
[DEBUG] 2020-09-30 16:53:50.694 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-09-30 16:53:50.694 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-09-30 16:53:50.707 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.matc.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=user0_,className=edu.matc.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@511d5d04}

[DEBUG] 2020-09-30 16:53:50.707 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:53:50.714 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2020-09-30 16:53:50.714 [main] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_0_, user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_ from user user0_ where user0_.last_name=?
[DEBUG] 2020-09-30 16:53:50.714 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:53:50.807 [main] SQL - select user0_.user_id as user_id1_0_, user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_ from user user0_ where user0_.last_name=?
[DEBUG] 2020-09-30 16:53:50.901 [main] Loader - Result set row: 0
[DEBUG] 2020-09-30 16:53:50.902 [main] Loader - Result row: EntityKey[edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:53:50.905 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:53:50.906 [main] TwoPhaseLoad - Processing attribute `email` : value = kk@gmail.com
[DEBUG] 2020-09-30 16:53:50.906 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.906 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kyle
[DEBUG] 2020-09-30 16:53:50.906 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.906 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelley
[DEBUG] 2020-09-30 16:53:50.906 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.906 [main] TwoPhaseLoad - Processing attribute `password` : value = anotherpassword
[DEBUG] 2020-09-30 16:53:50.906 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:50.906 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:53:50.907 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:53:51.493 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2020-09-30 16:53:51.503 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2020-09-30 16:53:51.521 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:53:51.537 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'matc'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-09-30 16:53:51.538 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-09-30 16:53:51.565 [main] FromElement - FromClause{level=1} : edu.matc.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-09-30 16:53:51.566 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-09-30 16:53:51.575 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-09-30 16:53:51.576 [main] DotNode - getDataType() : lastName -> org.hibernate.type.StringType@511d5d04
[DEBUG] 2020-09-30 16:53:51.576 [main] FromReferenceNode - Resolved : generatedAlias0.lastName -> user0_.last_name
[DEBUG] 2020-09-30 16:53:51.664 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-09-30 16:53:51.673 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.last_name user0_.user_id lastName ) ? ) ) )
[DEBUG] 2020-09-30 16:53:51.678 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-09-30 16:53:51.690 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-09-30 16:53:51.690 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.matc.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=user0_,className=edu.matc.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@511d5d04}

[DEBUG] 2020-09-30 16:53:51.690 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:53:51.691 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2020-09-30 16:53:51.691 [main] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_0_, user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_ from user user0_ where user0_.last_name like ?
[DEBUG] 2020-09-30 16:53:51.691 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:53:51.693 [main] SQL - select user0_.user_id as user_id1_0_, user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_ from user user0_ where user0_.last_name like ?
[DEBUG] 2020-09-30 16:53:51.726 [main] Loader - Result set row: 0
[DEBUG] 2020-09-30 16:53:51.726 [main] Loader - Result row: EntityKey[edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:53:51.726 [main] Loader - Result set row: 1
[DEBUG] 2020-09-30 16:53:51.726 [main] Loader - Result row: EntityKey[edu.matc.entity.User#3]
[DEBUG] 2020-09-30 16:53:51.737 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:53:51.740 [main] TwoPhaseLoad - Processing attribute `email` : value = es@gmail.com
[DEBUG] 2020-09-30 16:53:51.741 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:51.741 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Elizabeth
[DEBUG] 2020-09-30 16:53:51.742 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:51.756 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sajdak
[DEBUG] 2020-09-30 16:53:51.765 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:51.785 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:53:51.786 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:51.787 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:53:51.788 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#3]
[DEBUG] 2020-09-30 16:53:51.788 [main] TwoPhaseLoad - Processing attribute `email` : value = eg@gmail.com
[DEBUG] 2020-09-30 16:53:51.788 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:51.788 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Emily
[DEBUG] 2020-09-30 16:53:51.789 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:51.789 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Gorman
[DEBUG] 2020-09-30 16:53:51.901 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:52.005 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:53:52.006 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:52.007 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#3]
[DEBUG] 2020-09-30 16:53:52.008 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:53:52.861 [main] SQL - select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:53:53.088 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-09-30 16:53:53.148 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-09-30 16:53:53.163 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:53:53.164 [main] TwoPhaseLoad - Processing attribute `email` : value = es@gmail.com
[DEBUG] 2020-09-30 16:53:53.191 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:53.191 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Elizabeth
[DEBUG] 2020-09-30 16:53:53.191 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:53.191 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sajdak
[DEBUG] 2020-09-30 16:53:53.191 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:53.191 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:53:53.191 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:53.192 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:53:53.194 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 16:53:53.200 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#1
[DEBUG] 2020-09-30 16:53:53.201 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:53:53.238 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-09-30 16:53:53.239 [main] TransactionImpl - begin
[DEBUG] 2020-09-30 16:53:53.324 [main] TransactionImpl - committing
[DEBUG] 2020-09-30 16:53:53.325 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-09-30 16:53:53.325 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-09-30 16:53:53.327 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-09-30 16:53:53.327 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-09-30 16:53:53.327 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-09-30 16:53:53.327 [main] EntityPrinter - edu.matc.entity.User{firstName=Elizabeth, lastName=Hewitt, password=password, userId=1, email=es@gmail.com}
[DEBUG] 2020-09-30 16:53:53.328 [main] SQL - update user set email=?, first_name=?, last_name=?, password=? where user_id=?
[DEBUG] 2020-09-30 16:53:53.377 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:53:53.458 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:53:53.459 [main] SQL - select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:53:53.524 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-09-30 16:53:53.584 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-09-30 16:53:53.587 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:53:53.624 [main] TwoPhaseLoad - Processing attribute `email` : value = es@gmail.com
[DEBUG] 2020-09-30 16:53:53.707 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:53.708 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Elizabeth
[DEBUG] 2020-09-30 16:53:53.717 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:53.717 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Hewitt
[DEBUG] 2020-09-30 16:53:53.717 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:53.717 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:53:53.717 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:53.718 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:53:53.718 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 16:53:53.719 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#1
[DEBUG] 2020-09-30 16:53:53.719 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:53:54.444 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-09-30 16:53:54.455 [main] TransactionImpl - begin
[DEBUG] 2020-09-30 16:53:54.499 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-09-30 16:53:54.526 [main] SQL - insert into user (email, first_name, last_name, password) values (?, ?, ?, ?)
[DEBUG] 2020-09-30 16:53:54.588 [main] IdentifierGeneratorHelper - Natively generated identity: 18
[DEBUG] 2020-09-30 16:53:54.588 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 16:53:54.594 [main] TransactionImpl - committing
[DEBUG] 2020-09-30 16:53:54.599 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-09-30 16:53:54.599 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-09-30 16:53:54.608 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-09-30 16:53:54.610 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-09-30 16:53:54.611 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-09-30 16:53:54.611 [main] EntityPrinter - edu.matc.entity.User{firstName=John, lastName=Doe, password=password, userId=18, email=jdd@yahoo.com}
[DEBUG] 2020-09-30 16:53:54.678 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:53:54.703 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:53:54.708 [main] SQL - select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:53:54.788 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-09-30 16:53:54.789 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-09-30 16:53:54.789 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#18]
[DEBUG] 2020-09-30 16:53:54.790 [main] TwoPhaseLoad - Processing attribute `email` : value = jdd@yahoo.com
[DEBUG] 2020-09-30 16:53:54.790 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:54.790 [main] TwoPhaseLoad - Processing attribute `firstName` : value = John
[DEBUG] 2020-09-30 16:53:54.790 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:54.790 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-09-30 16:53:54.790 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:54.790 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:53:54.790 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:53:54.790 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#18]
[DEBUG] 2020-09-30 16:53:54.791 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 16:53:54.791 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#18
[DEBUG] 2020-09-30 16:53:54.791 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
