[DEBUG] 2020-09-30 16:58:19.956 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-09-30 16:58:20.014 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-09-30 16:58:20.050 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-09-30 16:58:22.033 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-09-30 16:58:22.043 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-09-30 16:58:26.791 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-09-30 16:58:26.828 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-09-30 16:58:27.151 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-09-30 16:58:33.398 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-09-30 16:58:33.620 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-09-30 16:58:33.651 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-09-30 16:58:33.860 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-09-30 16:58:34.886 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@45f24169
[DEBUG] 2020-09-30 16:58:34.890 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@45f24169
[DEBUG] 2020-09-30 16:58:34.891 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@45f24169
[DEBUG] 2020-09-30 16:58:34.893 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5395ea39
[DEBUG] 2020-09-30 16:58:34.917 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f6962ba
[DEBUG] 2020-09-30 16:58:34.927 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@312afbc7
[DEBUG] 2020-09-30 16:58:34.943 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@65327f5
[DEBUG] 2020-09-30 16:58:34.944 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@65327f5
[DEBUG] 2020-09-30 16:58:34.945 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65327f5
[DEBUG] 2020-09-30 16:58:35.091 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@349d0836
[DEBUG] 2020-09-30 16:58:35.157 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@349d0836
[DEBUG] 2020-09-30 16:58:35.262 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@349d0836
[DEBUG] 2020-09-30 16:58:35.295 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4917d36b
[DEBUG] 2020-09-30 16:58:35.295 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4917d36b
[DEBUG] 2020-09-30 16:58:35.298 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4917d36b
[DEBUG] 2020-09-30 16:58:35.315 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4905c46b
[DEBUG] 2020-09-30 16:58:35.317 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4905c46b
[DEBUG] 2020-09-30 16:58:35.330 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4905c46b
[DEBUG] 2020-09-30 16:58:35.333 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@693e4d19
[DEBUG] 2020-09-30 16:58:35.334 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@693e4d19
[DEBUG] 2020-09-30 16:58:35.335 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@693e4d19
[DEBUG] 2020-09-30 16:58:35.343 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@57bd802b
[DEBUG] 2020-09-30 16:58:35.378 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@57bd802b
[DEBUG] 2020-09-30 16:58:35.399 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@57bd802b
[DEBUG] 2020-09-30 16:58:35.448 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@27068a50
[DEBUG] 2020-09-30 16:58:35.452 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@27068a50
[DEBUG] 2020-09-30 16:58:35.453 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@27068a50
[DEBUG] 2020-09-30 16:58:35.478 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b9c1b51
[DEBUG] 2020-09-30 16:58:35.482 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b9c1b51
[DEBUG] 2020-09-30 16:58:35.516 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@60921b21
[DEBUG] 2020-09-30 16:58:35.552 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@60921b21
[DEBUG] 2020-09-30 16:58:35.640 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6e6fce47
[DEBUG] 2020-09-30 16:58:35.670 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6e6fce47
[DEBUG] 2020-09-30 16:58:35.671 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1a5b8489
[DEBUG] 2020-09-30 16:58:35.699 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34b9fc7d
[DEBUG] 2020-09-30 16:58:35.705 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@588ffeb
[DEBUG] 2020-09-30 16:58:35.706 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@588ffeb
[DEBUG] 2020-09-30 16:58:35.715 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@34cf5a97
[DEBUG] 2020-09-30 16:58:35.724 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@34cf5a97
[DEBUG] 2020-09-30 16:58:35.806 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@847f3e7
[DEBUG] 2020-09-30 16:58:35.809 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@847f3e7
[DEBUG] 2020-09-30 16:58:35.841 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@175acfb2
[DEBUG] 2020-09-30 16:58:35.841 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@175acfb2
[DEBUG] 2020-09-30 16:58:35.858 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@247667dd
[DEBUG] 2020-09-30 16:58:35.867 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@247667dd
[DEBUG] 2020-09-30 16:58:35.872 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1d4664d7
[DEBUG] 2020-09-30 16:58:35.872 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1d4664d7
[DEBUG] 2020-09-30 16:58:35.875 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72ed9aad
[DEBUG] 2020-09-30 16:58:35.875 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72ed9aad
[DEBUG] 2020-09-30 16:58:35.891 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18a645fd
[DEBUG] 2020-09-30 16:58:35.892 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18a645fd
[DEBUG] 2020-09-30 16:58:36.000 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@bdecc21
[DEBUG] 2020-09-30 16:58:36.033 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@bdecc21
[DEBUG] 2020-09-30 16:58:36.051 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@27b22f74
[DEBUG] 2020-09-30 16:58:36.052 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@27b22f74
[DEBUG] 2020-09-30 16:58:36.075 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6079cf5
[DEBUG] 2020-09-30 16:58:36.076 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6079cf5
[DEBUG] 2020-09-30 16:58:36.100 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@783ec989
[DEBUG] 2020-09-30 16:58:36.101 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@783ec989
[DEBUG] 2020-09-30 16:58:36.103 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@783ec989
[DEBUG] 2020-09-30 16:58:36.107 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@43cf6ea3
[DEBUG] 2020-09-30 16:58:36.157 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5ecba515
[DEBUG] 2020-09-30 16:58:36.174 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5ecba515
[DEBUG] 2020-09-30 16:58:36.225 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5ecba515
[DEBUG] 2020-09-30 16:58:36.229 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b97cc1f
[DEBUG] 2020-09-30 16:58:36.264 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@44afefd5
[DEBUG] 2020-09-30 16:58:36.275 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@44afefd5
[DEBUG] 2020-09-30 16:58:36.298 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4650a407
[DEBUG] 2020-09-30 16:58:36.389 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4650a407
[DEBUG] 2020-09-30 16:58:36.408 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@aced190
[DEBUG] 2020-09-30 16:58:36.415 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@aced190
[DEBUG] 2020-09-30 16:58:36.424 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2d6aca33
[DEBUG] 2020-09-30 16:58:36.426 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2d6aca33
[DEBUG] 2020-09-30 16:58:36.440 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@63e5e5b4
[DEBUG] 2020-09-30 16:58:36.441 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@63e5e5b4
[DEBUG] 2020-09-30 16:58:36.443 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e840abf
[DEBUG] 2020-09-30 16:58:36.446 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ca1f591
[DEBUG] 2020-09-30 16:58:36.446 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ca1f591
[DEBUG] 2020-09-30 16:58:36.446 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ca1f591
[DEBUG] 2020-09-30 16:58:36.448 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6a969fb8
[DEBUG] 2020-09-30 16:58:36.449 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6a969fb8
[DEBUG] 2020-09-30 16:58:36.454 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6a969fb8
[DEBUG] 2020-09-30 16:58:36.472 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@27aae97b
[DEBUG] 2020-09-30 16:58:36.474 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3bcd426c
[DEBUG] 2020-09-30 16:58:36.476 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@160396db
[DEBUG] 2020-09-30 16:58:36.476 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@160396db
[DEBUG] 2020-09-30 16:58:36.477 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@160396db
[DEBUG] 2020-09-30 16:58:36.479 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76b224cd
[DEBUG] 2020-09-30 16:58:36.490 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76b224cd
[DEBUG] 2020-09-30 16:58:36.491 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76b224cd
[DEBUG] 2020-09-30 16:58:36.508 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@304a3655
[DEBUG] 2020-09-30 16:58:36.546 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6b3871d6
[DEBUG] 2020-09-30 16:58:36.582 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@23ee75c5
[DEBUG] 2020-09-30 16:58:36.582 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@23ee75c5
[DEBUG] 2020-09-30 16:58:36.584 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6050462a
[DEBUG] 2020-09-30 16:58:36.616 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@783efb48
[DEBUG] 2020-09-30 16:58:36.623 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@783efb48
[DEBUG] 2020-09-30 16:58:36.656 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@38548b19
[DEBUG] 2020-09-30 16:58:36.672 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@38548b19
[DEBUG] 2020-09-30 16:58:36.678 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1bcb79c2
[DEBUG] 2020-09-30 16:58:36.680 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@71391b3f
[DEBUG] 2020-09-30 16:58:36.684 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@198ef2ce
[DEBUG] 2020-09-30 16:58:36.748 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@417d6615
[DEBUG] 2020-09-30 16:58:36.749 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@417d6615
[DEBUG] 2020-09-30 16:58:36.753 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6272c96f
[DEBUG] 2020-09-30 16:58:36.761 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6de30571
[DEBUG] 2020-09-30 16:58:36.777 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5ee34b1b
[DEBUG] 2020-09-30 16:58:36.778 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c89bb12
[DEBUG] 2020-09-30 16:58:36.785 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@48c4245d
[DEBUG] 2020-09-30 16:58:36.787 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3df978b9
[DEBUG] 2020-09-30 16:58:36.787 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7906578e
[DEBUG] 2020-09-30 16:58:36.794 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@8a62297
[DEBUG] 2020-09-30 16:58:37.203 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-09-30 16:58:37.207 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-09-30 16:58:37.208 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-09-30 16:58:37.219 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-09-30 16:58:37.272 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-09-30 16:58:37.297 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-09-30 16:58:37.304 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-09-30 16:58:37.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-09-30 16:58:37.373 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-09-30 16:58:37.452 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-09-30 16:58:37.457 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-09-30 16:58:37.458 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-09-30 16:58:37.459 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-09-30 16:58:37.461 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-09-30 16:58:38.563 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test?serverTimezone=UTC
[INFO ] 2020-09-30 16:58:38.564 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-09-30 16:58:38.564 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-09-30 16:58:42.899 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-09-30 16:58:57.550 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-09-30 16:58:57.564 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-09-30 16:58:57.564 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-09-30 16:58:58.122 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-09-30 16:58:58.233 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-09-30 16:58:58.559 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-09-30 16:58:59.026 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-09-30 16:58:59.045 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a904f32] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2b59501e]
[DEBUG] 2020-09-30 16:58:59.470 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-09-30 16:58:59.655 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-09-30 16:58:59.737 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-09-30 16:58:59.758 [main] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2020-09-30 16:59:00.240 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-09-30 16:59:00.312 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-09-30 16:59:00.379 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-09-30 16:59:00.403 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-09-30 16:59:00.438 [main] PropertyBinder - Building property userId
[DEBUG] 2020-09-30 16:59:00.471 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-09-30 16:59:00.479 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-09-30 16:59:00.487 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-09-30 16:59:00.487 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2020-09-30 16:59:00.488 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-09-30 16:59:00.493 [main] PropertyBinder - Building property email
[DEBUG] 2020-09-30 16:59:00.494 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-09-30 16:59:00.495 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-09-30 16:59:00.495 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2020-09-30 16:59:00.495 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-09-30 16:59:00.497 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-09-30 16:59:00.499 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-09-30 16:59:00.513 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-09-30 16:59:00.515 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2020-09-30 16:59:00.517 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-09-30 16:59:00.518 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-09-30 16:59:00.518 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-09-30 16:59:00.521 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-09-30 16:59:00.521 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2020-09-30 16:59:00.522 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-09-30 16:59:00.522 [main] PropertyBinder - Building property password
[DEBUG] 2020-09-30 16:59:00.549 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-09-30 16:59:00.549 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-09-30 16:59:00.549 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-09-30 16:59:00.549 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-09-30 16:59:00.549 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-09-30 16:59:00.552 [main] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-09-30 16:59:00.935 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-09-30 16:59:00.948 [main] Settings - SessionFactory name : null
[DEBUG] 2020-09-30 16:59:00.948 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-09-30 16:59:00.948 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-09-30 16:59:00.948 [main] Settings - Statistics: disabled
[DEBUG] 2020-09-30 16:59:00.948 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-09-30 16:59:00.950 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-09-30 16:59:00.950 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-09-30 16:59:00.951 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-09-30 16:59:00.951 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-09-30 16:59:00.951 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-09-30 16:59:00.951 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-09-30 16:59:00.951 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-09-30 16:59:00.951 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-09-30 16:59:00.951 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-09-30 16:59:00.951 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-09-30 16:59:00.951 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-09-30 16:59:00.952 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-09-30 16:59:00.952 [main] Settings - Named query checking : enabled
[DEBUG] 2020-09-30 16:59:00.962 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-09-30 16:59:00.963 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-09-30 16:59:00.963 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-09-30 16:59:00.963 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-09-30 16:59:00.963 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-09-30 16:59:00.963 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-09-30 16:59:00.963 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-09-30 16:59:00.963 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-09-30 16:59:00.963 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-09-30 16:59:00.963 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-09-30 16:59:00.963 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-09-30 16:59:00.964 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-09-30 16:59:00.964 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-09-30 16:59:00.964 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-09-30 16:59:00.964 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-09-30 16:59:00.964 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-09-30 16:59:00.964 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-09-30 16:59:00.964 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-09-30 16:59:00.964 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-09-30 16:59:00.965 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-09-30 16:59:01.462 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-09-30 16:59:01.600 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-09-30 16:59:01.600 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/IdeaProjects/customCrafts/target/test-classes:/home/student/IdeaProjects/customCrafts/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 edu.matc.persistence.UserDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-48-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.8, user.dir=/home/student/IdeaProjects/customCrafts, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3f50b680, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2020-09-30 16:59:01.832 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-09-30 16:59:01.843 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-09-30 16:59:01.863 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-09-30 16:59:01.864 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a904f32] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6fc6deb7]
[DEBUG] 2020-09-30 16:59:02.442 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-09-30 16:59:02.445 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-09-30 16:59:02.590 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-09-30 16:59:02.592 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-09-30 16:59:03.817 [main] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.User
[DEBUG] 2020-09-30 16:59:03.821 [main] AbstractEntityPersister -  Version select: select user_id from user where user_id =?
[DEBUG] 2020-09-30 16:59:03.821 [main] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.email as email2_0_, user_.first_name as first_na3_0_, user_.last_name as last_nam4_0_, user_.password as password5_0_ from user user_ where user_.user_id=?
[DEBUG] 2020-09-30 16:59:03.822 [main] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-09-30 16:59:03.822 [main] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=? where user_id=?
[DEBUG] 2020-09-30 16:59:03.822 [main] AbstractEntityPersister -  Delete 0: delete from user where user_id=?
[DEBUG] 2020-09-30 16:59:03.822 [main] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password) values (?, ?, ?, ?)
[DEBUG] 2020-09-30 16:59:03.917 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2349f14d]
[DEBUG] 2020-09-30 16:59:03.923 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-09-30 16:59:03.924 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-09-30 16:59:03.924 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-09-30 16:59:03.924 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-09-30 16:59:03.924 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-09-30 16:59:03.973 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-09-30 16:59:04.005 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

[DEBUG] 2020-09-30 16:59:04.024 [main] EntityLoader - Static select for entity edu.matc.entity.User [NONE]: select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:59:04.033 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a479fda]
[DEBUG] 2020-09-30 16:59:04.034 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-09-30 16:59:04.035 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-09-30 16:59:04.035 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-09-30 16:59:04.035 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-09-30 16:59:04.035 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-09-30 16:59:04.037 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-09-30 16:59:04.037 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

[DEBUG] 2020-09-30 16:59:04.038 [main] EntityLoader - Static select for entity edu.matc.entity.User [READ]: select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:59:04.127 [main] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.User: select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:59:04.135 [main] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.User: select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:59:04.342 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-09-30 16:59:04.343 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-09-30 16:59:04.350 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-09-30 16:59:04.401 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-09-30 16:59:04.401 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-09-30 16:59:04.416 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-09-30 16:59:04.419 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-09-30 16:59:04.428 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@18d11527
[DEBUG] 2020-09-30 16:59:04.439 [main] SessionFactoryRegistry - Registering SessionFactory: 3cd62a81-79d2-43d7-a331-3c71caca136c (<unnamed>)
[DEBUG] 2020-09-30 16:59:04.440 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-09-30 16:59:05.252 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-09-30 16:59:05.307 [main] SQL - select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:59:05.430 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-09-30 16:59:05.431 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-09-30 16:59:05.506 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:59:05.511 [main] TwoPhaseLoad - Processing attribute `email` : value = kk@gmail.com
[DEBUG] 2020-09-30 16:59:05.514 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:05.514 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kyle
[DEBUG] 2020-09-30 16:59:05.515 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:05.515 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelley
[DEBUG] 2020-09-30 16:59:05.515 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:05.515 [main] TwoPhaseLoad - Processing attribute `password` : value = anotherpassword
[DEBUG] 2020-09-30 16:59:05.515 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:05.521 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:59:05.530 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 16:59:05.533 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#2
[DEBUG] 2020-09-30 16:59:05.534 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:59:05.566 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-09-30 16:59:05.567 [main] TransactionImpl - begin
[DEBUG] 2020-09-30 16:59:05.648 [main] TransactionImpl - committing
[DEBUG] 2020-09-30 16:59:05.649 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-09-30 16:59:05.650 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-09-30 16:59:05.661 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-09-30 16:59:05.662 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-09-30 16:59:05.664 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-09-30 16:59:05.664 [main] EntityPrinter - edu.matc.entity.User{firstName=Kyle, lastName=Kelley, password=anotherpassword, userId=2, email=kk@gmail.com}
[DEBUG] 2020-09-30 16:59:05.720 [main] SQL - delete from user where user_id=?
[DEBUG] 2020-09-30 16:59:05.754 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:59:05.774 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:59:05.780 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-09-30 16:59:05.781 [main] SQL - select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:59:05.844 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 16:59:05.847 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#2
[DEBUG] 2020-09-30 16:59:05.847 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:59:06.301 [main] SQL - select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:59:06.332 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-09-30 16:59:06.335 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-09-30 16:59:06.338 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:59:06.338 [main] TwoPhaseLoad - Processing attribute `email` : value = es@gmail.com
[DEBUG] 2020-09-30 16:59:06.338 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:06.339 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Elizabeth
[DEBUG] 2020-09-30 16:59:06.339 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:06.339 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sajdak
[DEBUG] 2020-09-30 16:59:06.339 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:06.339 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:59:06.339 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:06.342 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:59:06.344 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 16:59:06.344 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#1
[DEBUG] 2020-09-30 16:59:06.352 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:59:07.237 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-09-30 16:59:07.432 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@be164d8
[DEBUG] 2020-09-30 16:59:08.000 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0
[DEBUG] 2020-09-30 16:59:08.087 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:59:08.278 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'matc'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-09-30 16:59:08.498 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-09-30 16:59:08.683 [main] FromElement - FromClause{level=1} : edu.matc.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-09-30 16:59:08.721 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-09-30 16:59:08.762 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-09-30 16:59:08.766 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-09-30 16:59:08.975 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-09-30 16:59:08.981 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-09-30 16:59:08.987 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.matc.entity.User}}

[DEBUG] 2020-09-30 16:59:08.987 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:59:09.051 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0
[DEBUG] 2020-09-30 16:59:09.051 [main] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_0_, user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_ from user user0_
[DEBUG] 2020-09-30 16:59:09.052 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:59:09.153 [main] SQL - select user0_.user_id as user_id1_0_, user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_ from user user0_
[DEBUG] 2020-09-30 16:59:09.195 [main] Loader - Result set row: 0
[DEBUG] 2020-09-30 16:59:09.201 [main] Loader - Result row: EntityKey[edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:59:09.202 [main] Loader - Result set row: 1
[DEBUG] 2020-09-30 16:59:09.202 [main] Loader - Result row: EntityKey[edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:59:09.203 [main] Loader - Result set row: 2
[DEBUG] 2020-09-30 16:59:09.203 [main] Loader - Result row: EntityKey[edu.matc.entity.User#3]
[DEBUG] 2020-09-30 16:59:09.203 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:59:09.204 [main] TwoPhaseLoad - Processing attribute `email` : value = es@gmail.com
[DEBUG] 2020-09-30 16:59:09.204 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.204 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Elizabeth
[DEBUG] 2020-09-30 16:59:09.204 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.204 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sajdak
[DEBUG] 2020-09-30 16:59:09.204 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.204 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:59:09.205 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.206 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:59:09.206 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:59:09.206 [main] TwoPhaseLoad - Processing attribute `email` : value = kk@gmail.com
[DEBUG] 2020-09-30 16:59:09.206 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.206 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kyle
[DEBUG] 2020-09-30 16:59:09.206 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.206 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelley
[DEBUG] 2020-09-30 16:59:09.207 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.207 [main] TwoPhaseLoad - Processing attribute `password` : value = anotherpassword
[DEBUG] 2020-09-30 16:59:09.207 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.207 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:59:09.208 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#3]
[DEBUG] 2020-09-30 16:59:09.208 [main] TwoPhaseLoad - Processing attribute `email` : value = eg@gmail.com
[DEBUG] 2020-09-30 16:59:09.217 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.217 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Emily
[DEBUG] 2020-09-30 16:59:09.217 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.217 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Gorman
[DEBUG] 2020-09-30 16:59:09.218 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.218 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:59:09.218 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.218 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#3]
[DEBUG] 2020-09-30 16:59:09.239 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:59:09.804 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2020-09-30 16:59:09.809 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2020-09-30 16:59:09.823 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:59:09.847 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'matc'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-09-30 16:59:09.847 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-09-30 16:59:09.848 [main] FromElement - FromClause{level=1} : edu.matc.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-09-30 16:59:09.848 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-09-30 16:59:09.875 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-09-30 16:59:09.878 [main] DotNode - getDataType() : lastName -> org.hibernate.type.StringType@6e6fce47
[DEBUG] 2020-09-30 16:59:09.880 [main] FromReferenceNode - Resolved : generatedAlias0.lastName -> user0_.last_name
[DEBUG] 2020-09-30 16:59:09.883 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-09-30 16:59:09.883 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.last_name user0_.user_id lastName ) ? ) ) )
[DEBUG] 2020-09-30 16:59:09.884 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-09-30 16:59:09.885 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-09-30 16:59:09.919 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.matc.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=user0_,className=edu.matc.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6e6fce47}

[DEBUG] 2020-09-30 16:59:09.919 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:59:09.919 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2020-09-30 16:59:09.919 [main] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_0_, user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_ from user user0_ where user0_.last_name=?
[DEBUG] 2020-09-30 16:59:09.920 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:59:09.950 [main] SQL - select user0_.user_id as user_id1_0_, user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_ from user user0_ where user0_.last_name=?
[DEBUG] 2020-09-30 16:59:09.960 [main] Loader - Result set row: 0
[DEBUG] 2020-09-30 16:59:09.961 [main] Loader - Result row: EntityKey[edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:59:09.962 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:59:09.965 [main] TwoPhaseLoad - Processing attribute `email` : value = kk@gmail.com
[DEBUG] 2020-09-30 16:59:09.965 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.965 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Kyle
[DEBUG] 2020-09-30 16:59:09.965 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.966 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kelley
[DEBUG] 2020-09-30 16:59:09.966 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.966 [main] TwoPhaseLoad - Processing attribute `password` : value = anotherpassword
[DEBUG] 2020-09-30 16:59:09.966 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:09.966 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#2]
[DEBUG] 2020-09-30 16:59:09.966 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:59:10.449 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2020-09-30 16:59:10.510 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2020-09-30 16:59:10.565 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:59:10.640 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'matc'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-09-30 16:59:10.640 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-09-30 16:59:10.641 [main] FromElement - FromClause{level=1} : edu.matc.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-09-30 16:59:10.643 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-09-30 16:59:10.660 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2020-09-30 16:59:10.674 [main] DotNode - getDataType() : lastName -> org.hibernate.type.StringType@6e6fce47
[DEBUG] 2020-09-30 16:59:10.674 [main] FromReferenceNode - Resolved : generatedAlias0.lastName -> user0_.last_name
[DEBUG] 2020-09-30 16:59:10.679 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-09-30 16:59:10.679 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.last_name user0_.user_id lastName ) ? ) ) )
[DEBUG] 2020-09-30 16:59:10.680 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-09-30 16:59:10.680 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-09-30 16:59:10.690 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.matc.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=user0_,className=edu.matc.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6e6fce47}

[DEBUG] 2020-09-30 16:59:10.690 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:59:10.690 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2020-09-30 16:59:10.691 [main] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_0_, user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_ from user user0_ where user0_.last_name like ?
[DEBUG] 2020-09-30 16:59:10.691 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-09-30 16:59:10.751 [main] SQL - select user0_.user_id as user_id1_0_, user0_.email as email2_0_, user0_.first_name as first_na3_0_, user0_.last_name as last_nam4_0_, user0_.password as password5_0_ from user user0_ where user0_.last_name like ?
[DEBUG] 2020-09-30 16:59:10.869 [main] Loader - Result set row: 0
[DEBUG] 2020-09-30 16:59:10.882 [main] Loader - Result row: EntityKey[edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:59:10.882 [main] Loader - Result set row: 1
[DEBUG] 2020-09-30 16:59:10.882 [main] Loader - Result row: EntityKey[edu.matc.entity.User#3]
[DEBUG] 2020-09-30 16:59:10.883 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:59:10.883 [main] TwoPhaseLoad - Processing attribute `email` : value = es@gmail.com
[DEBUG] 2020-09-30 16:59:10.883 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:10.883 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Elizabeth
[DEBUG] 2020-09-30 16:59:10.883 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:10.886 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sajdak
[DEBUG] 2020-09-30 16:59:10.893 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:10.895 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:59:10.948 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:10.949 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:59:10.949 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#3]
[DEBUG] 2020-09-30 16:59:10.950 [main] TwoPhaseLoad - Processing attribute `email` : value = eg@gmail.com
[DEBUG] 2020-09-30 16:59:10.950 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:10.950 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Emily
[DEBUG] 2020-09-30 16:59:10.950 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:10.950 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Gorman
[DEBUG] 2020-09-30 16:59:10.950 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:10.950 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:59:10.950 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:10.950 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#3]
[DEBUG] 2020-09-30 16:59:10.951 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:59:11.524 [main] SQL - select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:59:11.636 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-09-30 16:59:11.637 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-09-30 16:59:11.645 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:59:11.716 [main] TwoPhaseLoad - Processing attribute `email` : value = es@gmail.com
[DEBUG] 2020-09-30 16:59:11.716 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:11.717 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Elizabeth
[DEBUG] 2020-09-30 16:59:11.717 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:11.717 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Sajdak
[DEBUG] 2020-09-30 16:59:11.717 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:11.717 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:59:11.717 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:11.720 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:59:11.720 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 16:59:11.720 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#1
[DEBUG] 2020-09-30 16:59:11.721 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:59:11.726 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-09-30 16:59:11.726 [main] TransactionImpl - begin
[DEBUG] 2020-09-30 16:59:11.741 [main] TransactionImpl - committing
[DEBUG] 2020-09-30 16:59:11.741 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-09-30 16:59:11.743 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-09-30 16:59:11.763 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-09-30 16:59:11.764 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-09-30 16:59:11.765 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-09-30 16:59:11.769 [main] EntityPrinter - edu.matc.entity.User{firstName=Elizabeth, lastName=Hewitt, password=password, userId=1, email=es@gmail.com}
[DEBUG] 2020-09-30 16:59:11.770 [main] SQL - update user set email=?, first_name=?, last_name=?, password=? where user_id=?
[DEBUG] 2020-09-30 16:59:11.822 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:59:11.854 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:59:11.855 [main] SQL - select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:59:11.909 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-09-30 16:59:11.947 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-09-30 16:59:11.954 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:59:11.955 [main] TwoPhaseLoad - Processing attribute `email` : value = es@gmail.com
[DEBUG] 2020-09-30 16:59:11.955 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:11.955 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Elizabeth
[DEBUG] 2020-09-30 16:59:11.959 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:11.962 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Hewitt
[DEBUG] 2020-09-30 16:59:11.963 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:11.963 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:59:11.963 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:11.964 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-09-30 16:59:11.967 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 16:59:11.981 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#1
[DEBUG] 2020-09-30 16:59:11.982 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:59:12.609 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-09-30 16:59:12.610 [main] TransactionImpl - begin
[DEBUG] 2020-09-30 16:59:12.668 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-09-30 16:59:12.674 [main] SQL - insert into user (email, first_name, last_name, password) values (?, ?, ?, ?)
[DEBUG] 2020-09-30 16:59:12.760 [main] IdentifierGeneratorHelper - Natively generated identity: 19
[DEBUG] 2020-09-30 16:59:12.761 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 16:59:12.763 [main] TransactionImpl - committing
[DEBUG] 2020-09-30 16:59:12.763 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-09-30 16:59:12.771 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-09-30 16:59:12.772 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-09-30 16:59:12.774 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-09-30 16:59:12.774 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-09-30 16:59:12.774 [main] EntityPrinter - edu.matc.entity.User{firstName=John, lastName=Doe, password=password, userId=19, email=jdd@yahoo.com}
[DEBUG] 2020-09-30 16:59:12.780 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:59:12.788 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-09-30 16:59:12.794 [main] SQL - select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_ from user user0_ where user0_.user_id=?
[DEBUG] 2020-09-30 16:59:12.809 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-09-30 16:59:12.813 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-09-30 16:59:12.849 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#19]
[DEBUG] 2020-09-30 16:59:12.894 [main] TwoPhaseLoad - Processing attribute `email` : value = jdd@yahoo.com
[DEBUG] 2020-09-30 16:59:12.894 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:12.894 [main] TwoPhaseLoad - Processing attribute `firstName` : value = John
[DEBUG] 2020-09-30 16:59:12.894 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:12.894 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Doe
[DEBUG] 2020-09-30 16:59:12.894 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:12.894 [main] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-09-30 16:59:12.894 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-09-30 16:59:12.894 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#19]
[DEBUG] 2020-09-30 16:59:12.895 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-09-30 16:59:12.895 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#19
[DEBUG] 2020-09-30 16:59:12.895 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
