[DEBUG] 2020-10-04 14:12:39.926 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-10-04 14:12:39.947 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-10-04 14:12:39.956 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-10-04 14:12:40.226 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-10-04 14:12:40.236 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-10-04 14:12:40.900 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-10-04 14:12:40.903 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-10-04 14:12:40.935 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-10-04 14:12:41.954 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-10-04 14:12:42.037 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-10-04 14:12:42.133 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-10-04 14:12:42.164 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-10-04 14:12:42.239 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@45f24169
[DEBUG] 2020-10-04 14:12:42.242 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@45f24169
[DEBUG] 2020-10-04 14:12:42.242 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@45f24169
[DEBUG] 2020-10-04 14:12:42.243 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5395ea39
[DEBUG] 2020-10-04 14:12:42.246 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f6962ba
[DEBUG] 2020-10-04 14:12:42.251 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@312afbc7
[DEBUG] 2020-10-04 14:12:42.252 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@65327f5
[DEBUG] 2020-10-04 14:12:42.252 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@65327f5
[DEBUG] 2020-10-04 14:12:42.252 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65327f5
[DEBUG] 2020-10-04 14:12:42.253 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@349d0836
[DEBUG] 2020-10-04 14:12:42.254 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@349d0836
[DEBUG] 2020-10-04 14:12:42.254 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@349d0836
[DEBUG] 2020-10-04 14:12:42.255 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4917d36b
[DEBUG] 2020-10-04 14:12:42.261 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4917d36b
[DEBUG] 2020-10-04 14:12:42.261 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4917d36b
[DEBUG] 2020-10-04 14:12:42.263 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4905c46b
[DEBUG] 2020-10-04 14:12:42.263 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4905c46b
[DEBUG] 2020-10-04 14:12:42.263 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4905c46b
[DEBUG] 2020-10-04 14:12:42.264 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@693e4d19
[DEBUG] 2020-10-04 14:12:42.264 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@693e4d19
[DEBUG] 2020-10-04 14:12:42.265 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@693e4d19
[DEBUG] 2020-10-04 14:12:42.267 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@57bd802b
[DEBUG] 2020-10-04 14:12:42.267 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@57bd802b
[DEBUG] 2020-10-04 14:12:42.268 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@57bd802b
[DEBUG] 2020-10-04 14:12:42.268 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@27068a50
[DEBUG] 2020-10-04 14:12:42.268 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@27068a50
[DEBUG] 2020-10-04 14:12:42.271 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@27068a50
[DEBUG] 2020-10-04 14:12:42.272 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b9c1b51
[DEBUG] 2020-10-04 14:12:42.274 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b9c1b51
[DEBUG] 2020-10-04 14:12:42.275 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@60921b21
[DEBUG] 2020-10-04 14:12:42.275 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@60921b21
[DEBUG] 2020-10-04 14:12:42.275 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6e6fce47
[DEBUG] 2020-10-04 14:12:42.276 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6e6fce47
[DEBUG] 2020-10-04 14:12:42.276 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1a5b8489
[DEBUG] 2020-10-04 14:12:42.282 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34b9fc7d
[DEBUG] 2020-10-04 14:12:42.283 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@588ffeb
[DEBUG] 2020-10-04 14:12:42.283 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@588ffeb
[DEBUG] 2020-10-04 14:12:42.284 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@34cf5a97
[DEBUG] 2020-10-04 14:12:42.284 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@34cf5a97
[DEBUG] 2020-10-04 14:12:42.292 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@847f3e7
[DEBUG] 2020-10-04 14:12:42.295 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@847f3e7
[DEBUG] 2020-10-04 14:12:42.299 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@175acfb2
[DEBUG] 2020-10-04 14:12:42.299 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@175acfb2
[DEBUG] 2020-10-04 14:12:42.300 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@247667dd
[DEBUG] 2020-10-04 14:12:42.300 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@247667dd
[DEBUG] 2020-10-04 14:12:42.307 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1d4664d7
[DEBUG] 2020-10-04 14:12:42.307 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1d4664d7
[DEBUG] 2020-10-04 14:12:42.309 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72ed9aad
[DEBUG] 2020-10-04 14:12:42.309 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72ed9aad
[DEBUG] 2020-10-04 14:12:42.310 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18a645fd
[DEBUG] 2020-10-04 14:12:42.310 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18a645fd
[DEBUG] 2020-10-04 14:12:42.323 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@bdecc21
[DEBUG] 2020-10-04 14:12:42.327 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@bdecc21
[DEBUG] 2020-10-04 14:12:42.328 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@27b22f74
[DEBUG] 2020-10-04 14:12:42.329 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@27b22f74
[DEBUG] 2020-10-04 14:12:42.330 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6079cf5
[DEBUG] 2020-10-04 14:12:42.338 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6079cf5
[DEBUG] 2020-10-04 14:12:42.343 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@783ec989
[DEBUG] 2020-10-04 14:12:42.395 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@783ec989
[DEBUG] 2020-10-04 14:12:42.396 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@783ec989
[DEBUG] 2020-10-04 14:12:42.402 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@43cf6ea3
[DEBUG] 2020-10-04 14:12:42.403 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5ecba515
[DEBUG] 2020-10-04 14:12:42.403 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5ecba515
[DEBUG] 2020-10-04 14:12:42.403 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5ecba515
[DEBUG] 2020-10-04 14:12:42.409 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b97cc1f
[DEBUG] 2020-10-04 14:12:42.410 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@44afefd5
[DEBUG] 2020-10-04 14:12:42.410 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@44afefd5
[DEBUG] 2020-10-04 14:12:42.575 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4650a407
[DEBUG] 2020-10-04 14:12:42.579 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4650a407
[DEBUG] 2020-10-04 14:12:42.580 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@aced190
[DEBUG] 2020-10-04 14:12:42.581 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@aced190
[DEBUG] 2020-10-04 14:12:42.581 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2d6aca33
[DEBUG] 2020-10-04 14:12:42.582 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2d6aca33
[DEBUG] 2020-10-04 14:12:42.593 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@63e5e5b4
[DEBUG] 2020-10-04 14:12:42.600 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@63e5e5b4
[DEBUG] 2020-10-04 14:12:42.601 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e840abf
[DEBUG] 2020-10-04 14:12:42.621 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ca1f591
[DEBUG] 2020-10-04 14:12:42.622 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ca1f591
[DEBUG] 2020-10-04 14:12:42.622 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ca1f591
[DEBUG] 2020-10-04 14:12:42.624 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6a969fb8
[DEBUG] 2020-10-04 14:12:42.624 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6a969fb8
[DEBUG] 2020-10-04 14:12:42.637 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6a969fb8
[DEBUG] 2020-10-04 14:12:42.646 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@27aae97b
[DEBUG] 2020-10-04 14:12:42.655 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3bcd426c
[DEBUG] 2020-10-04 14:12:42.670 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@160396db
[DEBUG] 2020-10-04 14:12:42.670 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@160396db
[DEBUG] 2020-10-04 14:12:42.674 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@160396db
[DEBUG] 2020-10-04 14:12:42.676 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76b224cd
[DEBUG] 2020-10-04 14:12:42.676 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76b224cd
[DEBUG] 2020-10-04 14:12:42.683 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76b224cd
[DEBUG] 2020-10-04 14:12:42.685 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@304a3655
[DEBUG] 2020-10-04 14:12:42.688 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6b3871d6
[DEBUG] 2020-10-04 14:12:42.689 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@23ee75c5
[DEBUG] 2020-10-04 14:12:42.689 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@23ee75c5
[DEBUG] 2020-10-04 14:12:42.689 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6050462a
[DEBUG] 2020-10-04 14:12:42.702 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@783efb48
[DEBUG] 2020-10-04 14:12:42.705 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@783efb48
[DEBUG] 2020-10-04 14:12:42.710 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@38548b19
[DEBUG] 2020-10-04 14:12:42.715 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@38548b19
[DEBUG] 2020-10-04 14:12:42.718 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1bcb79c2
[DEBUG] 2020-10-04 14:12:42.718 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@71391b3f
[DEBUG] 2020-10-04 14:12:42.728 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@198ef2ce
[DEBUG] 2020-10-04 14:12:42.735 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@417d6615
[DEBUG] 2020-10-04 14:12:42.735 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@417d6615
[DEBUG] 2020-10-04 14:12:42.736 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6272c96f
[DEBUG] 2020-10-04 14:12:42.740 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6de30571
[DEBUG] 2020-10-04 14:12:42.740 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5ee34b1b
[DEBUG] 2020-10-04 14:12:42.741 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c89bb12
[DEBUG] 2020-10-04 14:12:42.741 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@48c4245d
[DEBUG] 2020-10-04 14:12:42.741 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3df978b9
[DEBUG] 2020-10-04 14:12:42.741 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7906578e
[DEBUG] 2020-10-04 14:12:42.741 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@8a62297
[DEBUG] 2020-10-04 14:12:42.956 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-10-04 14:12:42.978 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-10-04 14:12:42.979 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 14:12:42.980 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 14:12:42.990 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-10-04 14:12:42.991 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-10-04 14:12:42.991 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-10-04 14:12:42.992 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 14:12:43.001 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-10-04 14:12:43.006 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-10-04 14:12:43.007 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-10-04 14:12:43.007 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-10-04 14:12:43.007 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 14:12:43.011 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-10-04 14:12:43.024 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test?serverTimezone=UTC
[INFO ] 2020-10-04 14:12:43.025 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-10-04 14:12:43.025 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-10-04 14:12:43.957 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-10-04 14:12:46.783 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-10-04 14:12:46.786 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-10-04 14:12:46.786 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-10-04 14:12:47.017 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-10-04 14:12:47.122 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-10-04 14:12:47.240 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-10-04 14:12:47.483 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-10-04 14:12:47.506 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3baf6936] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@285f38f6]
[DEBUG] 2020-10-04 14:12:47.831 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Product
[DEBUG] 2020-10-04 14:12:48.011 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-04 14:12:48.050 [main] EntityBinder - Import with entity name Product
[DEBUG] 2020-10-04 14:12:48.077 [main] EntityBinder - Bind entity edu.matc.entity.Product on table product
[DEBUG] 2020-10-04 14:12:48.199 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=item_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.216 [main] PropertyBinder - MetadataSourceProcessor property itemId with lazy=false
[DEBUG] 2020-10-04 14:12:48.218 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:itemId]
[DEBUG] 2020-10-04 14:12:48.260 [main] SimpleValueBinder - building SimpleValue for itemId
[DEBUG] 2020-10-04 14:12:48.274 [main] PropertyBinder - Building property itemId
[DEBUG] 2020-10-04 14:12:48.294 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(item_id)]), itemId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-04 14:12:48.295 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=customizable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.306 [main] PropertyBinder - MetadataSourceProcessor property customizable with lazy=false
[DEBUG] 2020-10-04 14:12:48.306 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:customizable]
[DEBUG] 2020-10-04 14:12:48.306 [main] SimpleValueBinder - building SimpleValue for customizable
[DEBUG] 2020-10-04 14:12:48.306 [main] PropertyBinder - Building property customizable
[DEBUG] 2020-10-04 14:12:48.323 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.329 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-10-04 14:12:48.330 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:description]
[DEBUG] 2020-10-04 14:12:48.332 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-10-04 14:12:48.335 [main] PropertyBinder - Building property description
[DEBUG] 2020-10-04 14:12:48.342 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.346 [main] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2020-10-04 14:12:48.346 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:image]
[DEBUG] 2020-10-04 14:12:48.346 [main] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2020-10-04 14:12:48.357 [main] PropertyBinder - Building property image
[DEBUG] 2020-10-04 14:12:48.367 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.368 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-10-04 14:12:48.368 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:price]
[DEBUG] 2020-10-04 14:12:48.368 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-10-04 14:12:48.368 [main] PropertyBinder - Building property price
[DEBUG] 2020-10-04 14:12:48.368 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=production_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.368 [main] PropertyBinder - MetadataSourceProcessor property productionCost with lazy=false
[DEBUG] 2020-10-04 14:12:48.368 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:productionCost]
[DEBUG] 2020-10-04 14:12:48.368 [main] SimpleValueBinder - building SimpleValue for productionCost
[DEBUG] 2020-10-04 14:12:48.368 [main] PropertyBinder - Building property productionCost
[DEBUG] 2020-10-04 14:12:48.388 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=tags, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.388 [main] PropertyBinder - MetadataSourceProcessor property tags with lazy=false
[DEBUG] 2020-10-04 14:12:48.392 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:tags]
[DEBUG] 2020-10-04 14:12:48.392 [main] SimpleValueBinder - building SimpleValue for tags
[DEBUG] 2020-10-04 14:12:48.392 [main] PropertyBinder - Building property tags
[DEBUG] 2020-10-04 14:12:48.392 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.392 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-10-04 14:12:48.392 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:title]
[DEBUG] 2020-10-04 14:12:48.392 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-10-04 14:12:48.392 [main] PropertyBinder - Building property title
[DEBUG] 2020-10-04 14:12:48.422 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-10-04 14:12:48.444 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.476 [main] PropertyBinder - Building property user
[DEBUG] 2020-10-04 14:12:48.517 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-10-04 14:12:48.529 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-04 14:12:48.544 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-10-04 14:12:48.544 [main] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2020-10-04 14:12:48.580 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.591 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-10-04 14:12:48.592 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-10-04 14:12:48.592 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-10-04 14:12:48.596 [main] PropertyBinder - Building property userId
[DEBUG] 2020-10-04 14:12:48.597 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-04 14:12:48.597 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.597 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-10-04 14:12:48.597 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2020-10-04 14:12:48.597 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-10-04 14:12:48.608 [main] PropertyBinder - Building property email
[DEBUG] 2020-10-04 14:12:48.609 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.609 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-10-04 14:12:48.619 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2020-10-04 14:12:48.619 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-10-04 14:12:48.619 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-10-04 14:12:48.622 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.622 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-10-04 14:12:48.622 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2020-10-04 14:12:48.622 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-10-04 14:12:48.622 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-10-04 14:12:48.631 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.631 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-10-04 14:12:48.632 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2020-10-04 14:12:48.635 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-10-04 14:12:48.636 [main] PropertyBinder - Building property password
[DEBUG] 2020-10-04 14:12:48.648 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-04 14:12:48.651 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.678 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.761 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.764 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:12:48.765 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-04 14:12:48.774 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-04 14:12:48.774 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-04 14:12:48.774 [main] CollectionBinder - Collection role: edu.matc.entity.User.products
[DEBUG] 2020-10-04 14:12:48.784 [main] PropertyBinder - Building property products
[DEBUG] 2020-10-04 14:12:48.798 [main] SimpleValueBinder - Starting fillSimpleValue for itemId
[DEBUG] 2020-10-04 14:12:48.798 [main] SimpleValueBinder - Starting fillSimpleValue for customizable
[DEBUG] 2020-10-04 14:12:48.798 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-10-04 14:12:48.799 [main] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2020-10-04 14:12:48.810 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-10-04 14:12:48.810 [main] SimpleValueBinder - Starting fillSimpleValue for productionCost
[DEBUG] 2020-10-04 14:12:48.810 [main] SimpleValueBinder - Starting fillSimpleValue for tags
[DEBUG] 2020-10-04 14:12:48.810 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-10-04 14:12:48.810 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-10-04 14:12:48.810 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-10-04 14:12:48.810 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-10-04 14:12:48.810 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-10-04 14:12:48.810 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-10-04 14:12:48.836 [main] PrimaryKey - Forcing column [item_id] to be non-null as it is part of the primary key for table [product]
[DEBUG] 2020-10-04 14:12:48.842 [main] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-10-04 14:12:48.843 [main] CollectionSecondPass - Second pass for collection: edu.matc.entity.User.products
[DEBUG] 2020-10-04 14:12:48.855 [main] CollectionBinder - Binding a OneToMany: edu.matc.entity.User.products through a foreign key
[DEBUG] 2020-10-04 14:12:48.866 [main] CollectionBinder - Mapping collection: edu.matc.entity.User.products -> product
[DEBUG] 2020-10-04 14:12:48.868 [main] TableBinder - Retrieving property edu.matc.entity.Product.user
[DEBUG] 2020-10-04 14:12:48.869 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.matc.entity.Product
[DEBUG] 2020-10-04 14:12:48.869 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-10-04 14:12:48.894 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-10-04 14:12:49.174 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-10-04 14:12:49.188 [main] Settings - SessionFactory name : null
[DEBUG] 2020-10-04 14:12:49.193 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-10-04 14:12:49.193 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-10-04 14:12:49.193 [main] Settings - Statistics: disabled
[DEBUG] 2020-10-04 14:12:49.193 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-10-04 14:12:49.193 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-10-04 14:12:49.203 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-10-04 14:12:49.203 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-10-04 14:12:49.203 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-10-04 14:12:49.203 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-10-04 14:12:49.203 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-10-04 14:12:49.203 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-10-04 14:12:49.203 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-10-04 14:12:49.203 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-10-04 14:12:49.203 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-10-04 14:12:49.204 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-10-04 14:12:49.204 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-10-04 14:12:49.208 [main] Settings - Named query checking : enabled
[DEBUG] 2020-10-04 14:12:49.209 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-10-04 14:12:49.210 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-10-04 14:12:49.580 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-10-04 14:12:49.687 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-10-04 14:12:49.689 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/IdeaProjects/customCrafts/target/test-classes:/home/student/IdeaProjects/customCrafts/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 @w@/tmp/idea_working_dirs_junit.tmp @/tmp/idea_junit.tmp, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-48-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.8, user.dir=/home/student/IdeaProjects/customCrafts, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@642413d4, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2020-10-04 14:12:49.858 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-10-04 14:12:49.870 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-10-04 14:12:49.883 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-10-04 14:12:49.883 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3baf6936] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6dd1f638]
[DEBUG] 2020-10-04 14:12:50.439 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-10-04 14:12:50.450 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-10-04 14:12:50.587 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-10-04 14:12:50.605 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-10-04 14:12:50.815 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-10-04 14:12:50.847 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-10-04 14:12:50.882 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-10-04 14:12:51.314 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-10-04 14:12:51.339 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-10-04 14:12:52.336 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Product] is safe
[DEBUG] 2020-10-04 14:12:52.340 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Product
[DEBUG] 2020-10-04 14:12:52.346 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Product] is safe
[DEBUG] 2020-10-04 14:12:52.346 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Product
[DEBUG] 2020-10-04 14:12:52.538 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-10-04 14:12:52.543 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-10-04 14:12:52.581 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-10-04 14:12:52.646 [main] AbstractCollectionPersister - Static SQL for collection: edu.matc.entity.User.products
[DEBUG] 2020-10-04 14:12:52.648 [main] AbstractCollectionPersister -  Row insert: update product set user_id=? where item_id=?
[DEBUG] 2020-10-04 14:12:52.648 [main] AbstractCollectionPersister -  Row update: update product set  where item_id=?
[DEBUG] 2020-10-04 14:12:52.648 [main] AbstractCollectionPersister -  Row delete: update product set user_id=null where user_id=? and item_id=?
[DEBUG] 2020-10-04 14:12:52.648 [main] AbstractCollectionPersister -  One-shot delete: update product set user_id=null where user_id=?
[DEBUG] 2020-10-04 14:12:52.666 [main] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.User
[DEBUG] 2020-10-04 14:12:52.666 [main] AbstractEntityPersister -  Version select: select user_id from user where user_id =?
[DEBUG] 2020-10-04 14:12:52.666 [main] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.password as password5_1_ from user user_ where user_.user_id=?
[DEBUG] 2020-10-04 14:12:52.676 [main] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-10-04 14:12:52.676 [main] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=? where user_id=?
[DEBUG] 2020-10-04 14:12:52.676 [main] AbstractEntityPersister -  Delete 0: delete from user where user_id=?
[DEBUG] 2020-10-04 14:12:52.676 [main] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password) values (?, ?, ?, ?)
[DEBUG] 2020-10-04 14:12:52.804 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a1b8a46]
[DEBUG] 2020-10-04 14:12:52.818 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-10-04 14:12:52.818 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-10-04 14:12:52.818 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-10-04 14:12:52.818 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-10-04 14:12:52.819 [main] MetamodelGraphWalker - Visiting attribute path : products
[DEBUG] 2020-10-04 14:12:52.843 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ba1209b]
[DEBUG] 2020-10-04 14:12:52.862 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30bf26df]
[DEBUG] 2020-10-04 14:12:52.864 [main] MetamodelGraphWalker - Visiting attribute path : products.customizable
[DEBUG] 2020-10-04 14:12:52.864 [main] MetamodelGraphWalker - Visiting attribute path : products.description
[DEBUG] 2020-10-04 14:12:52.864 [main] MetamodelGraphWalker - Visiting attribute path : products.image
[DEBUG] 2020-10-04 14:12:52.864 [main] MetamodelGraphWalker - Visiting attribute path : products.price
[DEBUG] 2020-10-04 14:12:52.864 [main] MetamodelGraphWalker - Visiting attribute path : products.productionCost
[DEBUG] 2020-10-04 14:12:52.864 [main] MetamodelGraphWalker - Visiting attribute path : products.tags
[DEBUG] 2020-10-04 14:12:52.864 [main] MetamodelGraphWalker - Visiting attribute path : products.title
[DEBUG] 2020-10-04 14:12:52.875 [main] MetamodelGraphWalker - Visiting attribute path : products.user
[DEBUG] 2020-10-04 14:12:52.880 [main] MetamodelGraphWalker - Property path deemed to be circular : products.user
[DEBUG] 2020-10-04 14:12:52.891 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:12:52.981 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:12:53.063 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:1>, path=edu.matc.entity.User.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:2>, path=edu.matc.entity.User.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(products)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.products)
                - SQL table alias mapping - products1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - item_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Product)
                      - SQL table alias mapping - products1_
                      - alias suffix - 2_
                      - suffixed key columns - {item_id1_0_2_}

[DEBUG] 2020-10-04 14:12:53.080 [main] EntityLoader - Static select for entity edu.matc.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, products1_.user_id as user_id9_0_1_, products1_.item_id as item_id1_0_1_, products1_.item_id as item_id1_0_2_, products1_.customizable as customiz2_0_2_, products1_.description as descript3_0_2_, products1_.image as image4_0_2_, products1_.price as price5_0_2_, products1_.production_cost as producti6_0_2_, products1_.tags as tags7_0_2_, products1_.title as title8_0_2_, products1_.user_id as user_id9_0_2_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-10-04 14:12:53.080 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35adf623]
[DEBUG] 2020-10-04 14:12:53.081 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-10-04 14:12:53.082 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-10-04 14:12:53.082 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-10-04 14:12:53.082 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-10-04 14:12:53.082 [main] MetamodelGraphWalker - Visiting attribute path : products
[DEBUG] 2020-10-04 14:12:53.082 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75d366c2]
[DEBUG] 2020-10-04 14:12:53.082 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8f40022]
[DEBUG] 2020-10-04 14:12:53.082 [main] MetamodelGraphWalker - Visiting attribute path : products.customizable
[DEBUG] 2020-10-04 14:12:53.082 [main] MetamodelGraphWalker - Visiting attribute path : products.description
[DEBUG] 2020-10-04 14:12:53.085 [main] MetamodelGraphWalker - Visiting attribute path : products.image
[DEBUG] 2020-10-04 14:12:53.085 [main] MetamodelGraphWalker - Visiting attribute path : products.price
[DEBUG] 2020-10-04 14:12:53.085 [main] MetamodelGraphWalker - Visiting attribute path : products.productionCost
[DEBUG] 2020-10-04 14:12:53.085 [main] MetamodelGraphWalker - Visiting attribute path : products.tags
[DEBUG] 2020-10-04 14:12:53.085 [main] MetamodelGraphWalker - Visiting attribute path : products.title
[DEBUG] 2020-10-04 14:12:53.085 [main] MetamodelGraphWalker - Visiting attribute path : products.user
[DEBUG] 2020-10-04 14:12:53.085 [main] MetamodelGraphWalker - Property path deemed to be circular : products.user
[DEBUG] 2020-10-04 14:12:53.086 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:12:53.086 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:12:53.097 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:1>, path=edu.matc.entity.User.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:2>, path=edu.matc.entity.User.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(products)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.products)
                - SQL table alias mapping - products1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - item_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Product)
                      - SQL table alias mapping - products1_
                      - alias suffix - 2_
                      - suffixed key columns - {item_id1_0_2_}

[DEBUG] 2020-10-04 14:12:53.098 [main] EntityLoader - Static select for entity edu.matc.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, products1_.user_id as user_id9_0_1_, products1_.item_id as item_id1_0_1_, products1_.item_id as item_id1_0_2_, products1_.customizable as customiz2_0_2_, products1_.description as descript3_0_2_, products1_.image as image4_0_2_, products1_.price as price5_0_2_, products1_.production_cost as producti6_0_2_, products1_.tags as tags7_0_2_, products1_.title as title8_0_2_, products1_.user_id as user_id9_0_2_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-10-04 14:12:53.195 [main] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, products1_.user_id as user_id9_0_3_, products1_.item_id as item_id1_0_3_, products1_.item_id as item_id1_0_0_, products1_.customizable as customiz2_0_0_, products1_.description as descript3_0_0_, products1_.image as image4_0_0_, products1_.price as price5_0_0_, products1_.production_cost as producti6_0_0_, products1_.tags as tags7_0_0_, products1_.title as title8_0_0_, products1_.user_id as user_id9_0_0_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-10-04 14:12:53.202 [main] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, products1_.user_id as user_id9_0_3_, products1_.item_id as item_id1_0_3_, products1_.item_id as item_id1_0_0_, products1_.customizable as customiz2_0_0_, products1_.description as descript3_0_0_, products1_.image as image4_0_0_, products1_.price as price5_0_0_, products1_.production_cost as producti6_0_0_, products1_.tags as tags7_0_0_, products1_.title as title8_0_0_, products1_.user_id as user_id9_0_0_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-10-04 14:12:53.202 [main] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Product
[DEBUG] 2020-10-04 14:12:53.202 [main] AbstractEntityPersister -  Version select: select item_id from product where item_id =?
[DEBUG] 2020-10-04 14:12:53.202 [main] AbstractEntityPersister -  Snapshot select: select product_.item_id, product_.customizable as customiz2_0_, product_.description as descript3_0_, product_.image as image4_0_, product_.price as price5_0_, product_.production_cost as producti6_0_, product_.tags as tags7_0_, product_.title as title8_0_, product_.user_id as user_id9_0_ from product product_ where product_.item_id=?
[DEBUG] 2020-10-04 14:12:53.202 [main] AbstractEntityPersister -  Insert 0: insert into product (customizable, description, image, price, production_cost, tags, title, user_id, item_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-10-04 14:12:53.202 [main] AbstractEntityPersister -  Update 0: update product set customizable=?, description=?, image=?, price=?, production_cost=?, tags=?, title=?, user_id=? where item_id=?
[DEBUG] 2020-10-04 14:12:53.202 [main] AbstractEntityPersister -  Delete 0: delete from product where item_id=?
[DEBUG] 2020-10-04 14:12:53.202 [main] AbstractEntityPersister -  Identity insert: insert into product (customizable, description, image, price, production_cost, tags, title, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-10-04 14:12:53.202 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@309dcdf3]
[DEBUG] 2020-10-04 14:12:53.202 [main] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-10-04 14:12:53.202 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-04 14:12:53.210 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-10-04 14:12:53.211 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-10-04 14:12:53.211 [main] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-10-04 14:12:53.211 [main] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-10-04 14:12:53.211 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-10-04 14:12:53.211 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-04 14:12:53.212 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9a20cbd]
[DEBUG] 2020-10-04 14:12:53.212 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-10-04 14:12:53.212 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-10-04 14:12:53.212 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-10-04 14:12:53.212 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-10-04 14:12:53.212 [main] MetamodelGraphWalker - Visiting attribute path : user.products
[DEBUG] 2020-10-04 14:12:53.212 [main] MetamodelGraphWalker - Property path deemed to be circular : user.products
[DEBUG] 2020-10-04 14:12:53.212 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:12:53.213 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:12:53.213 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Product)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Product, querySpaceUid=<gen:0>, path=edu.matc.entity.Product)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Product.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {item_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}

[DEBUG] 2020-10-04 14:12:53.213 [main] EntityLoader - Static select for entity edu.matc.entity.Product [NONE]: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:12:53.213 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ee21292]
[DEBUG] 2020-10-04 14:12:53.213 [main] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-10-04 14:12:53.213 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-04 14:12:53.213 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-10-04 14:12:53.213 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-10-04 14:12:53.213 [main] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-10-04 14:12:53.213 [main] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-10-04 14:12:53.213 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-10-04 14:12:53.214 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-04 14:12:53.214 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66e21568]
[DEBUG] 2020-10-04 14:12:53.239 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-10-04 14:12:53.239 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-10-04 14:12:53.239 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-10-04 14:12:53.239 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-10-04 14:12:53.239 [main] MetamodelGraphWalker - Visiting attribute path : user.products
[DEBUG] 2020-10-04 14:12:53.239 [main] MetamodelGraphWalker - Property path deemed to be circular : user.products
[DEBUG] 2020-10-04 14:12:53.239 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:12:53.239 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:12:53.240 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Product)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Product, querySpaceUid=<gen:0>, path=edu.matc.entity.Product)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Product.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {item_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}

[DEBUG] 2020-10-04 14:12:53.240 [main] EntityLoader - Static select for entity edu.matc.entity.Product [READ]: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:12:53.260 [main] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Product: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_ from product product0_ where product0_.item_id=?
[DEBUG] 2020-10-04 14:12:53.261 [main] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Product: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_ from product product0_ where product0_.item_id=?
[DEBUG] 2020-10-04 14:12:53.333 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3292d91a]
[DEBUG] 2020-10-04 14:12:53.333 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5921b93c]
[DEBUG] 2020-10-04 14:12:53.350 [main] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-10-04 14:12:53.350 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-04 14:12:53.350 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-10-04 14:12:53.350 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-10-04 14:12:53.350 [main] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-10-04 14:12:53.350 [main] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-10-04 14:12:53.350 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-10-04 14:12:53.350 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-04 14:12:53.361 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-10-04 14:12:53.365 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:12:53.385 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:12:53.392 [main] LoadPlanTreePrinter - LoadPlan(collection=edu.matc.entity.User.products)
    - Returns
       - CollectionReturnImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:0>, path=[edu.matc.entity.User.products])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:1>, path=[edu.matc.entity.User.products].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.matc.entity.User.products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {user_id9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - item_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Product)
                - SQL table alias mapping - products0_
                - alias suffix - 1_
                - suffixed key columns - {item_id1_0_1_}

[DEBUG] 2020-10-04 14:12:53.392 [main] CollectionLoader - Static select for collection edu.matc.entity.User.products: select products0_.user_id as user_id9_0_0_, products0_.item_id as item_id1_0_0_, products0_.item_id as item_id1_0_1_, products0_.customizable as customiz2_0_1_, products0_.description as descript3_0_1_, products0_.image as image4_0_1_, products0_.price as price5_0_1_, products0_.production_cost as producti6_0_1_, products0_.tags as tags7_0_1_, products0_.title as title8_0_1_, products0_.user_id as user_id9_0_1_ from product products0_ where products0_.user_id=?
[DEBUG] 2020-10-04 14:12:53.640 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-10-04 14:12:53.642 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-10-04 14:12:53.642 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-10-04 14:12:53.660 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-10-04 14:12:53.660 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-10-04 14:12:53.675 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-10-04 14:12:53.675 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-10-04 14:12:53.679 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@415a3f6a
[DEBUG] 2020-10-04 14:12:53.698 [main] SessionFactoryRegistry - Registering SessionFactory: 68d19cb0-d502-46fa-8876-d3b3f3679014 (<unnamed>)
[DEBUG] 2020-10-04 14:12:53.698 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-10-04 14:12:54.426 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-10-04 14:12:54.446 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-10-04 14:12:54.555 [main] SQL - select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:12:54.563 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-10-04 14:12:54.599 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-10-04 14:12:54.747 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-04 14:12:54.761 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Product#1
[DEBUG] 2020-10-04 14:12:54.771 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[INFO ] 2020-10-04 14:12:54.850 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-10-04 14:12:55.106 [main] SQL - select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:12:55.122 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-04 14:12:55.122 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Product#2
[DEBUG] 2020-10-04 14:12:55.122 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-04 14:12:55.142 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-10-04 14:12:55.142 [main] TransactionImpl - begin
[DEBUG] 2020-10-04 14:12:55.154 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4d847d32
[DEBUG] 2020-10-04 14:12:55.154 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4d847d32
[DEBUG] 2020-10-04 14:12:55.154 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4d847d32
[DEBUG] 2020-10-04 14:12:55.159 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3605c4d3
[DEBUG] 2020-10-04 14:12:55.162 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6ad11a56
[DEBUG] 2020-10-04 14:12:55.167 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c8326a4
[DEBUG] 2020-10-04 14:12:55.179 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@60baef24
[DEBUG] 2020-10-04 14:12:55.179 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@60baef24
[DEBUG] 2020-10-04 14:12:55.179 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@60baef24
[DEBUG] 2020-10-04 14:12:55.180 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@43b0ade
[DEBUG] 2020-10-04 14:12:55.200 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@43b0ade
[DEBUG] 2020-10-04 14:12:55.201 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@43b0ade
[DEBUG] 2020-10-04 14:12:55.217 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0a9fa5
[DEBUG] 2020-10-04 14:12:55.222 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0a9fa5
[DEBUG] 2020-10-04 14:12:55.222 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a0a9fa5
[DEBUG] 2020-10-04 14:12:55.223 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@466d49f0
[DEBUG] 2020-10-04 14:12:55.234 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@466d49f0
[DEBUG] 2020-10-04 14:12:55.234 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@466d49f0
[DEBUG] 2020-10-04 14:12:55.250 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@72458efc
[DEBUG] 2020-10-04 14:12:55.250 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@72458efc
[DEBUG] 2020-10-04 14:12:55.261 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72458efc
[DEBUG] 2020-10-04 14:12:55.262 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2e3a5237
[DEBUG] 2020-10-04 14:12:55.263 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2e3a5237
[DEBUG] 2020-10-04 14:12:55.263 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2e3a5237
[DEBUG] 2020-10-04 14:12:55.274 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7b44b63d
[DEBUG] 2020-10-04 14:12:55.274 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7b44b63d
[DEBUG] 2020-10-04 14:12:55.274 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7b44b63d
[DEBUG] 2020-10-04 14:12:55.277 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b87581
[DEBUG] 2020-10-04 14:12:55.282 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b87581
[DEBUG] 2020-10-04 14:12:55.283 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c12f3ee
[DEBUG] 2020-10-04 14:12:55.294 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c12f3ee
[DEBUG] 2020-10-04 14:12:55.295 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5183d589
[DEBUG] 2020-10-04 14:12:55.295 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5183d589
[DEBUG] 2020-10-04 14:12:55.295 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@68e62ca4
[DEBUG] 2020-10-04 14:12:55.313 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11653e3b
[DEBUG] 2020-10-04 14:12:55.320 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7c974942
[DEBUG] 2020-10-04 14:12:55.320 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c974942
[DEBUG] 2020-10-04 14:12:55.321 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6b580b88
[DEBUG] 2020-10-04 14:12:55.321 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6b580b88
[DEBUG] 2020-10-04 14:12:55.379 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@588ffeb
[DEBUG] 2020-10-04 14:12:55.386 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@588ffeb
[DEBUG] 2020-10-04 14:12:55.404 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@34cf5a97
[DEBUG] 2020-10-04 14:12:55.404 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@34cf5a97
[DEBUG] 2020-10-04 14:12:55.420 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6443b128
[DEBUG] 2020-10-04 14:12:55.421 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6443b128
[DEBUG] 2020-10-04 14:12:55.432 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@61d01788
[DEBUG] 2020-10-04 14:12:55.432 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@61d01788
[DEBUG] 2020-10-04 14:12:55.453 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6ad6fa53
[DEBUG] 2020-10-04 14:12:55.454 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6ad6fa53
[DEBUG] 2020-10-04 14:12:55.492 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@30af7377
[DEBUG] 2020-10-04 14:12:55.492 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@30af7377
[DEBUG] 2020-10-04 14:12:55.506 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0
[DEBUG] 2020-10-04 14:12:55.509 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5c20ffa8
[DEBUG] 2020-10-04 14:12:55.519 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5c20ffa8
[DEBUG] 2020-10-04 14:12:55.525 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4690f583
[DEBUG] 2020-10-04 14:12:55.526 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4690f583
[DEBUG] 2020-10-04 14:12:55.541 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@37a64f9d
[DEBUG] 2020-10-04 14:12:55.550 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@37a64f9d
[DEBUG] 2020-10-04 14:12:55.555 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@201aa8c1
[DEBUG] 2020-10-04 14:12:55.566 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@201aa8c1
[DEBUG] 2020-10-04 14:12:55.567 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@201aa8c1
[DEBUG] 2020-10-04 14:12:55.569 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f20a5e0
[DEBUG] 2020-10-04 14:12:55.581 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1917d90f
[DEBUG] 2020-10-04 14:12:55.582 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1917d90f
[DEBUG] 2020-10-04 14:12:55.583 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1917d90f
[DEBUG] 2020-10-04 14:12:55.594 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e6308a9
[DEBUG] 2020-10-04 14:12:55.601 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@783ec989
[DEBUG] 2020-10-04 14:12:55.602 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@783ec989
[DEBUG] 2020-10-04 14:12:55.603 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@50825a02
[DEBUG] 2020-10-04 14:12:55.613 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50825a02
[DEBUG] 2020-10-04 14:12:55.618 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2abc224d
[DEBUG] 2020-10-04 14:12:55.618 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2abc224d
[DEBUG] 2020-10-04 14:12:55.620 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@71178a52
[DEBUG] 2020-10-04 14:12:55.620 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71178a52
[DEBUG] 2020-10-04 14:12:55.633 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2ca3d826
[DEBUG] 2020-10-04 14:12:55.621 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1ded7b14
[DEBUG] 2020-10-04 14:12:55.638 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1ded7b14
[DEBUG] 2020-10-04 14:12:55.639 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@30135202
[DEBUG] 2020-10-04 14:12:55.647 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6edaa77a
[DEBUG] 2020-10-04 14:12:55.669 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6edaa77a
[DEBUG] 2020-10-04 14:12:55.669 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6edaa77a
[DEBUG] 2020-10-04 14:12:55.682 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29314cc9
[DEBUG] 2020-10-04 14:12:55.683 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29314cc9
[DEBUG] 2020-10-04 14:12:55.683 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29314cc9
[DEBUG] 2020-10-04 14:12:55.684 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@a50ae65
[DEBUG] 2020-10-04 14:12:55.702 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5972d253
[DEBUG] 2020-10-04 14:12:55.708 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@551de37d
[DEBUG] 2020-10-04 14:12:55.709 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@551de37d
[DEBUG] 2020-10-04 14:12:55.709 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@551de37d
[DEBUG] 2020-10-04 14:12:55.710 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a18e8d
[DEBUG] 2020-10-04 14:12:55.735 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a18e8d
[DEBUG] 2020-10-04 14:12:55.736 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a18e8d
[DEBUG] 2020-10-04 14:12:55.736 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@bb095
[DEBUG] 2020-10-04 14:12:55.746 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5d1e09bc
[DEBUG] 2020-10-04 14:12:55.754 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7a799159
[DEBUG] 2020-10-04 14:12:55.755 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a799159
[DEBUG] 2020-10-04 14:12:55.755 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@53093491
[DEBUG] 2020-10-04 14:12:55.781 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6b3871d6
[DEBUG] 2020-10-04 14:12:55.782 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6b3871d6
[DEBUG] 2020-10-04 14:12:55.786 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@23ee75c5
[DEBUG] 2020-10-04 14:12:55.787 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23ee75c5
[DEBUG] 2020-10-04 14:12:55.787 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6050462a
[DEBUG] 2020-10-04 14:12:55.787 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@73877e19
[DEBUG] 2020-10-04 14:12:55.788 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3af356f
[DEBUG] 2020-10-04 14:12:55.835 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@41f35f7c
[DEBUG] 2020-10-04 14:12:55.835 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@41f35f7c
[DEBUG] 2020-10-04 14:12:55.835 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@198ef2ce
[DEBUG] 2020-10-04 14:12:55.836 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4cbd03e7
[DEBUG] 2020-10-04 14:12:55.836 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52fc5eb1
[DEBUG] 2020-10-04 14:12:55.836 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7a639ec5
[DEBUG] 2020-10-04 14:12:55.836 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@14151bc5
[DEBUG] 2020-10-04 14:12:55.836 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3013909b
[DEBUG] 2020-10-04 14:12:55.850 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2a49fe
[DEBUG] 2020-10-04 14:12:55.850 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@66596a88
[DEBUG] 2020-10-04 14:12:55.867 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0
[DEBUG] 2020-10-04 14:12:55.915 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:12:55.952 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'matc'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Product'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-10-04 14:12:56.140 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-04 14:12:56.294 [main] FromElement - FromClause{level=1} : edu.matc.entity.Product (generatedAlias0) -> product0_
[DEBUG] 2020-10-04 14:12:56.296 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:12:56.297 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-04 14:12:56.323 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} product0_.item_id ) ( FromClause{level=1} product product0_ ) )
[DEBUG] 2020-10-04 14:12:56.343 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-10-04 14:12:56.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-10-04 14:12:56.353 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 14:12:56.361 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 14:12:56.365 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-10-04 14:12:56.376 [main] JoinProcessor - Using FROM fragment [product product0_]
[DEBUG] 2020-10-04 14:12:56.368 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-10-04 14:12:56.380 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-10-04 14:12:56.398 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 14:12:56.411 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-04 14:12:56.415 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.item_id as item_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=edu.matc.entity.Product}}

[DEBUG] 2020-10-04 14:12:56.415 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:12:56.399 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-10-04 14:12:56.424 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-10-04 14:12:56.425 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-10-04 14:12:56.425 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-10-04 14:12:56.425 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 14:12:56.443 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2020-10-04 14:12:56.478 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0
[DEBUG] 2020-10-04 14:12:56.478 [main] QueryTranslatorImpl - SQL: select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_
[DEBUG] 2020-10-04 14:12:56.478 [main] ErrorTracker - throwQueryException() : no errors
[INFO ] 2020-10-04 14:12:56.501 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test?serverTimezone=UTC
[INFO ] 2020-10-04 14:12:56.501 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-10-04 14:12:56.502 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[DEBUG] 2020-10-04 14:12:56.556 [main] SQL - select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_
[DEBUG] 2020-10-04 14:12:56.596 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-04 14:12:57.035 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0 where generatedAlias0.title=:param0
[DEBUG] 2020-10-04 14:12:57.048 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0 where generatedAlias0.title=:param0
[DEBUG] 2020-10-04 14:12:57.053 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:12:57.066 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'matc'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Product'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-10-04 14:12:57.066 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-04 14:12:57.070 [main] FromElement - FromClause{level=1} : edu.matc.entity.Product (generatedAlias0) -> product0_
[DEBUG] 2020-10-04 14:12:57.070 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:12:57.081 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:12:57.088 [main] DotNode - getDataType() : title -> org.hibernate.type.StringType@6e6fce47
[DEBUG] 2020-10-04 14:12:57.097 [main] FromReferenceNode - Resolved : generatedAlias0.title -> product0_.title
[DEBUG] 2020-10-04 14:12:57.103 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-04 14:12:57.103 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} product0_.item_id ) ( FromClause{level=1} product product0_ ) ( where ( = ( product0_.title product0_.item_id title ) ? ) ) )
[DEBUG] 2020-10-04 14:12:57.117 [main] JoinProcessor - Using FROM fragment [product product0_]
[DEBUG] 2020-10-04 14:12:57.126 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-04 14:12:57.129 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.item_id as item_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=edu.matc.entity.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'product0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=product0_,className=edu.matc.entity.Product,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'product0_.item_id' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6e6fce47}

[DEBUG] 2020-10-04 14:12:57.130 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:12:57.132 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0 where generatedAlias0.title=:param0
[DEBUG] 2020-10-04 14:12:57.134 [main] QueryTranslatorImpl - SQL: select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_ where product0_.title=?
[DEBUG] 2020-10-04 14:12:57.134 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:12:57.178 [main] SQL - select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_ where product0_.title=?
[DEBUG] 2020-10-04 14:12:57.197 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-04 14:12:57.500 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2020-10-04 14:12:57.514 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2020-10-04 14:12:57.515 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:12:57.526 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'matc'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Product'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-10-04 14:12:57.526 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-04 14:12:57.526 [main] FromElement - FromClause{level=1} : edu.matc.entity.Product (generatedAlias0) -> product0_
[DEBUG] 2020-10-04 14:12:57.526 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:12:57.527 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:12:57.527 [main] DotNode - getDataType() : title -> org.hibernate.type.StringType@6e6fce47
[DEBUG] 2020-10-04 14:12:57.527 [main] FromReferenceNode - Resolved : generatedAlias0.title -> product0_.title
[DEBUG] 2020-10-04 14:12:57.527 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-04 14:12:57.527 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} product0_.item_id ) ( FromClause{level=1} product product0_ ) ( where ( like ( product0_.title product0_.item_id title ) ? ) ) )
[DEBUG] 2020-10-04 14:12:57.527 [main] JoinProcessor - Using FROM fragment [product product0_]
[DEBUG] 2020-10-04 14:12:57.527 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-04 14:12:57.527 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.item_id as item_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=edu.matc.entity.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'product0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=product0_,className=edu.matc.entity.Product,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'product0_.item_id' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6e6fce47}

[DEBUG] 2020-10-04 14:12:57.527 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:12:57.527 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2020-10-04 14:12:57.528 [main] QueryTranslatorImpl - SQL: select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_ where product0_.title like ?
[DEBUG] 2020-10-04 14:12:57.528 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:12:57.528 [main] SQL - select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_ where product0_.title like ?
[DEBUG] 2020-10-04 14:12:57.572 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[INFO ] 2020-10-04 14:12:57.625 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-10-04 14:12:57.822 [main] SQL - select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:12:57.843 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-04 14:12:57.843 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Product#1
[DEBUG] 2020-10-04 14:12:57.843 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-04 14:13:01.295 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-10-04 14:13:01.305 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-10-04 14:13:01.307 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-10-04 14:13:01.442 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-10-04 14:13:01.547 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-10-04 14:13:01.706 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-10-04 14:13:01.914 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-10-04 14:13:01.941 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4893b344] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@53a665ad]
[DEBUG] 2020-10-04 14:13:02.250 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Product
[DEBUG] 2020-10-04 14:13:02.349 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-04 14:13:02.361 [main] EntityBinder - Import with entity name Product
[DEBUG] 2020-10-04 14:13:02.389 [main] EntityBinder - Bind entity edu.matc.entity.Product on table product
[DEBUG] 2020-10-04 14:13:02.529 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=item_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.571 [main] PropertyBinder - MetadataSourceProcessor property itemId with lazy=false
[DEBUG] 2020-10-04 14:13:02.585 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:itemId]
[DEBUG] 2020-10-04 14:13:02.615 [main] SimpleValueBinder - building SimpleValue for itemId
[DEBUG] 2020-10-04 14:13:02.637 [main] PropertyBinder - Building property itemId
[DEBUG] 2020-10-04 14:13:02.683 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(item_id)]), itemId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-04 14:13:02.694 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=customizable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.697 [main] PropertyBinder - MetadataSourceProcessor property customizable with lazy=false
[DEBUG] 2020-10-04 14:13:02.698 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:customizable]
[DEBUG] 2020-10-04 14:13:02.699 [main] SimpleValueBinder - building SimpleValue for customizable
[DEBUG] 2020-10-04 14:13:02.699 [main] PropertyBinder - Building property customizable
[DEBUG] 2020-10-04 14:13:02.703 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.709 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-10-04 14:13:02.710 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:description]
[DEBUG] 2020-10-04 14:13:02.710 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-10-04 14:13:02.710 [main] PropertyBinder - Building property description
[DEBUG] 2020-10-04 14:13:02.713 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.718 [main] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2020-10-04 14:13:02.719 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:image]
[DEBUG] 2020-10-04 14:13:02.719 [main] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2020-10-04 14:13:02.719 [main] PropertyBinder - Building property image
[DEBUG] 2020-10-04 14:13:02.722 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.723 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-10-04 14:13:02.723 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:price]
[DEBUG] 2020-10-04 14:13:02.723 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-10-04 14:13:02.724 [main] PropertyBinder - Building property price
[DEBUG] 2020-10-04 14:13:02.726 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=production_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.727 [main] PropertyBinder - MetadataSourceProcessor property productionCost with lazy=false
[DEBUG] 2020-10-04 14:13:02.727 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:productionCost]
[DEBUG] 2020-10-04 14:13:02.727 [main] SimpleValueBinder - building SimpleValue for productionCost
[DEBUG] 2020-10-04 14:13:02.727 [main] PropertyBinder - Building property productionCost
[DEBUG] 2020-10-04 14:13:02.727 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=tags, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.727 [main] PropertyBinder - MetadataSourceProcessor property tags with lazy=false
[DEBUG] 2020-10-04 14:13:02.741 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:tags]
[DEBUG] 2020-10-04 14:13:02.741 [main] SimpleValueBinder - building SimpleValue for tags
[DEBUG] 2020-10-04 14:13:02.741 [main] PropertyBinder - Building property tags
[DEBUG] 2020-10-04 14:13:02.741 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.747 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-10-04 14:13:02.748 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:title]
[DEBUG] 2020-10-04 14:13:02.748 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-10-04 14:13:02.748 [main] PropertyBinder - Building property title
[DEBUG] 2020-10-04 14:13:02.755 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-10-04 14:13:02.755 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.773 [main] PropertyBinder - Building property user
[DEBUG] 2020-10-04 14:13:02.787 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-10-04 14:13:02.793 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-04 14:13:02.794 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-10-04 14:13:02.794 [main] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2020-10-04 14:13:02.812 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.813 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-10-04 14:13:02.813 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-10-04 14:13:02.813 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-10-04 14:13:02.813 [main] PropertyBinder - Building property userId
[DEBUG] 2020-10-04 14:13:02.813 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-04 14:13:02.813 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.813 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-10-04 14:13:02.813 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2020-10-04 14:13:02.813 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-10-04 14:13:02.813 [main] PropertyBinder - Building property email
[DEBUG] 2020-10-04 14:13:02.814 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.814 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-10-04 14:13:02.814 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2020-10-04 14:13:02.814 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-10-04 14:13:02.814 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-10-04 14:13:02.814 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.814 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-10-04 14:13:02.834 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2020-10-04 14:13:02.834 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-10-04 14:13:02.834 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-10-04 14:13:02.835 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.835 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-10-04 14:13:02.835 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2020-10-04 14:13:02.837 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-10-04 14:13:02.837 [main] PropertyBinder - Building property password
[DEBUG] 2020-10-04 14:13:02.838 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-04 14:13:02.842 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.851 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.883 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.896 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:02.903 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-04 14:13:02.908 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-04 14:13:02.909 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-04 14:13:02.909 [main] CollectionBinder - Collection role: edu.matc.entity.User.products
[DEBUG] 2020-10-04 14:13:02.926 [main] PropertyBinder - Building property products
[DEBUG] 2020-10-04 14:13:02.931 [main] SimpleValueBinder - Starting fillSimpleValue for itemId
[DEBUG] 2020-10-04 14:13:02.931 [main] SimpleValueBinder - Starting fillSimpleValue for customizable
[DEBUG] 2020-10-04 14:13:02.931 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-10-04 14:13:02.931 [main] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2020-10-04 14:13:02.931 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-10-04 14:13:02.931 [main] SimpleValueBinder - Starting fillSimpleValue for productionCost
[DEBUG] 2020-10-04 14:13:02.931 [main] SimpleValueBinder - Starting fillSimpleValue for tags
[DEBUG] 2020-10-04 14:13:02.931 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-10-04 14:13:02.936 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-10-04 14:13:02.936 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-10-04 14:13:02.936 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-10-04 14:13:02.936 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-10-04 14:13:02.936 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-10-04 14:13:02.959 [main] PrimaryKey - Forcing column [item_id] to be non-null as it is part of the primary key for table [product]
[DEBUG] 2020-10-04 14:13:02.959 [main] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-10-04 14:13:02.959 [main] CollectionSecondPass - Second pass for collection: edu.matc.entity.User.products
[DEBUG] 2020-10-04 14:13:02.967 [main] CollectionBinder - Binding a OneToMany: edu.matc.entity.User.products through a foreign key
[DEBUG] 2020-10-04 14:13:02.980 [main] CollectionBinder - Mapping collection: edu.matc.entity.User.products -> product
[DEBUG] 2020-10-04 14:13:03.018 [main] TableBinder - Retrieving property edu.matc.entity.Product.user
[DEBUG] 2020-10-04 14:13:03.019 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.matc.entity.Product
[DEBUG] 2020-10-04 14:13:03.019 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-10-04 14:13:03.022 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-10-04 14:13:03.222 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-10-04 14:13:03.227 [main] Settings - SessionFactory name : null
[DEBUG] 2020-10-04 14:13:03.229 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-10-04 14:13:03.232 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-10-04 14:13:03.232 [main] Settings - Statistics: disabled
[DEBUG] 2020-10-04 14:13:03.232 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-10-04 14:13:03.232 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-10-04 14:13:03.232 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-10-04 14:13:03.232 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-10-04 14:13:03.232 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-10-04 14:13:03.234 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-10-04 14:13:03.235 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-10-04 14:13:03.242 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-10-04 14:13:03.242 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-10-04 14:13:03.242 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-10-04 14:13:03.242 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-10-04 14:13:03.242 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-10-04 14:13:03.242 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - Named query checking : enabled
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-10-04 14:13:03.245 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-10-04 14:13:03.246 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-10-04 14:13:03.246 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-10-04 14:13:03.246 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-10-04 14:13:03.246 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-10-04 14:13:03.246 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-10-04 14:13:03.246 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-10-04 14:13:03.546 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-10-04 14:13:03.687 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-10-04 14:13:03.692 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/IdeaProjects/customCrafts/target/test-classes:/home/student/IdeaProjects/customCrafts/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 @w@/tmp/idea_working_dirs_junit1.tmp @/tmp/idea_junit1.tmp, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-48-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.8, user.dir=/home/student/IdeaProjects/customCrafts, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@380e1909, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2020-10-04 14:13:03.798 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-10-04 14:13:03.799 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-10-04 14:13:03.802 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-10-04 14:13:03.802 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4893b344] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5edc70ed]
[DEBUG] 2020-10-04 14:13:04.362 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-10-04 14:13:04.364 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-10-04 14:13:04.494 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-10-04 14:13:04.495 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-10-04 14:13:04.582 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-10-04 14:13:04.628 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-10-04 14:13:04.648 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-10-04 14:13:05.047 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-10-04 14:13:05.071 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-10-04 14:13:05.890 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Product] is safe
[DEBUG] 2020-10-04 14:13:05.890 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Product
[DEBUG] 2020-10-04 14:13:05.891 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Product] is safe
[DEBUG] 2020-10-04 14:13:05.891 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Product
[DEBUG] 2020-10-04 14:13:06.022 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-10-04 14:13:06.029 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-10-04 14:13:06.055 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-10-04 14:13:06.202 [main] AbstractCollectionPersister - Static SQL for collection: edu.matc.entity.User.products
[DEBUG] 2020-10-04 14:13:06.206 [main] AbstractCollectionPersister -  Row insert: update product set user_id=? where item_id=?
[DEBUG] 2020-10-04 14:13:06.206 [main] AbstractCollectionPersister -  Row update: update product set  where item_id=?
[DEBUG] 2020-10-04 14:13:06.206 [main] AbstractCollectionPersister -  Row delete: update product set user_id=null where user_id=? and item_id=?
[DEBUG] 2020-10-04 14:13:06.206 [main] AbstractCollectionPersister -  One-shot delete: update product set user_id=null where user_id=?
[DEBUG] 2020-10-04 14:13:06.220 [main] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.User
[DEBUG] 2020-10-04 14:13:06.220 [main] AbstractEntityPersister -  Version select: select user_id from user where user_id =?
[DEBUG] 2020-10-04 14:13:06.220 [main] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.password as password5_1_ from user user_ where user_.user_id=?
[DEBUG] 2020-10-04 14:13:06.220 [main] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-10-04 14:13:06.220 [main] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=? where user_id=?
[DEBUG] 2020-10-04 14:13:06.220 [main] AbstractEntityPersister -  Delete 0: delete from user where user_id=?
[DEBUG] 2020-10-04 14:13:06.220 [main] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password) values (?, ?, ?, ?)
[DEBUG] 2020-10-04 14:13:06.372 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f5d0190]
[DEBUG] 2020-10-04 14:13:06.374 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-10-04 14:13:06.375 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-10-04 14:13:06.375 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-10-04 14:13:06.375 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-10-04 14:13:06.375 [main] MetamodelGraphWalker - Visiting attribute path : products
[DEBUG] 2020-10-04 14:13:06.395 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e87ef9e]
[DEBUG] 2020-10-04 14:13:06.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d8cf9ac]
[DEBUG] 2020-10-04 14:13:06.416 [main] MetamodelGraphWalker - Visiting attribute path : products.customizable
[DEBUG] 2020-10-04 14:13:06.417 [main] MetamodelGraphWalker - Visiting attribute path : products.description
[DEBUG] 2020-10-04 14:13:06.423 [main] MetamodelGraphWalker - Visiting attribute path : products.image
[DEBUG] 2020-10-04 14:13:06.423 [main] MetamodelGraphWalker - Visiting attribute path : products.price
[DEBUG] 2020-10-04 14:13:06.423 [main] MetamodelGraphWalker - Visiting attribute path : products.productionCost
[DEBUG] 2020-10-04 14:13:06.423 [main] MetamodelGraphWalker - Visiting attribute path : products.tags
[DEBUG] 2020-10-04 14:13:06.423 [main] MetamodelGraphWalker - Visiting attribute path : products.title
[DEBUG] 2020-10-04 14:13:06.427 [main] MetamodelGraphWalker - Visiting attribute path : products.user
[DEBUG] 2020-10-04 14:13:06.428 [main] MetamodelGraphWalker - Property path deemed to be circular : products.user
[DEBUG] 2020-10-04 14:13:06.435 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:13:06.496 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:13:06.558 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:1>, path=edu.matc.entity.User.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:2>, path=edu.matc.entity.User.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(products)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.products)
                - SQL table alias mapping - products1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - item_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Product)
                      - SQL table alias mapping - products1_
                      - alias suffix - 2_
                      - suffixed key columns - {item_id1_0_2_}

[DEBUG] 2020-10-04 14:13:06.571 [main] EntityLoader - Static select for entity edu.matc.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, products1_.user_id as user_id9_0_1_, products1_.item_id as item_id1_0_1_, products1_.item_id as item_id1_0_2_, products1_.customizable as customiz2_0_2_, products1_.description as descript3_0_2_, products1_.image as image4_0_2_, products1_.price as price5_0_2_, products1_.production_cost as producti6_0_2_, products1_.tags as tags7_0_2_, products1_.title as title8_0_2_, products1_.user_id as user_id9_0_2_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-10-04 14:13:06.571 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f0a2638]
[DEBUG] 2020-10-04 14:13:06.574 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-10-04 14:13:06.575 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-10-04 14:13:06.575 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-10-04 14:13:06.575 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-10-04 14:13:06.575 [main] MetamodelGraphWalker - Visiting attribute path : products
[DEBUG] 2020-10-04 14:13:06.575 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77cb452c]
[DEBUG] 2020-10-04 14:13:06.575 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2213639b]
[DEBUG] 2020-10-04 14:13:06.575 [main] MetamodelGraphWalker - Visiting attribute path : products.customizable
[DEBUG] 2020-10-04 14:13:06.575 [main] MetamodelGraphWalker - Visiting attribute path : products.description
[DEBUG] 2020-10-04 14:13:06.585 [main] MetamodelGraphWalker - Visiting attribute path : products.image
[DEBUG] 2020-10-04 14:13:06.586 [main] MetamodelGraphWalker - Visiting attribute path : products.price
[DEBUG] 2020-10-04 14:13:06.586 [main] MetamodelGraphWalker - Visiting attribute path : products.productionCost
[DEBUG] 2020-10-04 14:13:06.586 [main] MetamodelGraphWalker - Visiting attribute path : products.tags
[DEBUG] 2020-10-04 14:13:06.586 [main] MetamodelGraphWalker - Visiting attribute path : products.title
[DEBUG] 2020-10-04 14:13:06.586 [main] MetamodelGraphWalker - Visiting attribute path : products.user
[DEBUG] 2020-10-04 14:13:06.586 [main] MetamodelGraphWalker - Property path deemed to be circular : products.user
[DEBUG] 2020-10-04 14:13:06.586 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:13:06.586 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:13:06.589 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:1>, path=edu.matc.entity.User.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:2>, path=edu.matc.entity.User.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(products)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.products)
                - SQL table alias mapping - products1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - item_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Product)
                      - SQL table alias mapping - products1_
                      - alias suffix - 2_
                      - suffixed key columns - {item_id1_0_2_}

[DEBUG] 2020-10-04 14:13:06.589 [main] EntityLoader - Static select for entity edu.matc.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, products1_.user_id as user_id9_0_1_, products1_.item_id as item_id1_0_1_, products1_.item_id as item_id1_0_2_, products1_.customizable as customiz2_0_2_, products1_.description as descript3_0_2_, products1_.image as image4_0_2_, products1_.price as price5_0_2_, products1_.production_cost as producti6_0_2_, products1_.tags as tags7_0_2_, products1_.title as title8_0_2_, products1_.user_id as user_id9_0_2_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-10-04 14:13:06.710 [main] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, products1_.user_id as user_id9_0_3_, products1_.item_id as item_id1_0_3_, products1_.item_id as item_id1_0_0_, products1_.customizable as customiz2_0_0_, products1_.description as descript3_0_0_, products1_.image as image4_0_0_, products1_.price as price5_0_0_, products1_.production_cost as producti6_0_0_, products1_.tags as tags7_0_0_, products1_.title as title8_0_0_, products1_.user_id as user_id9_0_0_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-10-04 14:13:06.713 [main] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, products1_.user_id as user_id9_0_3_, products1_.item_id as item_id1_0_3_, products1_.item_id as item_id1_0_0_, products1_.customizable as customiz2_0_0_, products1_.description as descript3_0_0_, products1_.image as image4_0_0_, products1_.price as price5_0_0_, products1_.production_cost as producti6_0_0_, products1_.tags as tags7_0_0_, products1_.title as title8_0_0_, products1_.user_id as user_id9_0_0_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-10-04 14:13:06.714 [main] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Product
[DEBUG] 2020-10-04 14:13:06.714 [main] AbstractEntityPersister -  Version select: select item_id from product where item_id =?
[DEBUG] 2020-10-04 14:13:06.714 [main] AbstractEntityPersister -  Snapshot select: select product_.item_id, product_.customizable as customiz2_0_, product_.description as descript3_0_, product_.image as image4_0_, product_.price as price5_0_, product_.production_cost as producti6_0_, product_.tags as tags7_0_, product_.title as title8_0_, product_.user_id as user_id9_0_ from product product_ where product_.item_id=?
[DEBUG] 2020-10-04 14:13:06.714 [main] AbstractEntityPersister -  Insert 0: insert into product (customizable, description, image, price, production_cost, tags, title, user_id, item_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-10-04 14:13:06.714 [main] AbstractEntityPersister -  Update 0: update product set customizable=?, description=?, image=?, price=?, production_cost=?, tags=?, title=?, user_id=? where item_id=?
[DEBUG] 2020-10-04 14:13:06.714 [main] AbstractEntityPersister -  Delete 0: delete from product where item_id=?
[DEBUG] 2020-10-04 14:13:06.714 [main] AbstractEntityPersister -  Identity insert: insert into product (customizable, description, image, price, production_cost, tags, title, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-10-04 14:13:06.720 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5a7226]
[DEBUG] 2020-10-04 14:13:06.720 [main] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-10-04 14:13:06.720 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-04 14:13:06.720 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-10-04 14:13:06.720 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-10-04 14:13:06.725 [main] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-10-04 14:13:06.726 [main] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-10-04 14:13:06.726 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-10-04 14:13:06.726 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-04 14:13:06.726 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ad1701a]
[DEBUG] 2020-10-04 14:13:06.727 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-10-04 14:13:06.727 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-10-04 14:13:06.727 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-10-04 14:13:06.727 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-10-04 14:13:06.727 [main] MetamodelGraphWalker - Visiting attribute path : user.products
[DEBUG] 2020-10-04 14:13:06.727 [main] MetamodelGraphWalker - Property path deemed to be circular : user.products
[DEBUG] 2020-10-04 14:13:06.727 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:13:06.727 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:13:06.727 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Product)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Product, querySpaceUid=<gen:0>, path=edu.matc.entity.Product)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Product.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {item_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}

[DEBUG] 2020-10-04 14:13:06.727 [main] EntityLoader - Static select for entity edu.matc.entity.Product [NONE]: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:13:06.728 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11787b64]
[DEBUG] 2020-10-04 14:13:06.728 [main] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-10-04 14:13:06.728 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-04 14:13:06.728 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-10-04 14:13:06.728 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-10-04 14:13:06.728 [main] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-10-04 14:13:06.745 [main] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-10-04 14:13:06.745 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-10-04 14:13:06.745 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-04 14:13:06.745 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77b3752b]
[DEBUG] 2020-10-04 14:13:06.745 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-10-04 14:13:06.745 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-10-04 14:13:06.746 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-10-04 14:13:06.746 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-10-04 14:13:06.746 [main] MetamodelGraphWalker - Visiting attribute path : user.products
[DEBUG] 2020-10-04 14:13:06.746 [main] MetamodelGraphWalker - Property path deemed to be circular : user.products
[DEBUG] 2020-10-04 14:13:06.746 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:13:06.751 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:13:06.752 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Product)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Product, querySpaceUid=<gen:0>, path=edu.matc.entity.Product)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Product.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {item_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}

[DEBUG] 2020-10-04 14:13:06.752 [main] EntityLoader - Static select for entity edu.matc.entity.Product [READ]: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:13:06.758 [main] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Product: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_ from product product0_ where product0_.item_id=?
[DEBUG] 2020-10-04 14:13:06.759 [main] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Product: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_ from product product0_ where product0_.item_id=?
[DEBUG] 2020-10-04 14:13:06.776 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65c5bf0e]
[DEBUG] 2020-10-04 14:13:06.786 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697d6ded]
[DEBUG] 2020-10-04 14:13:06.786 [main] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-10-04 14:13:06.786 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-04 14:13:06.786 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-10-04 14:13:06.786 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-10-04 14:13:06.786 [main] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-10-04 14:13:06.786 [main] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-10-04 14:13:06.786 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-10-04 14:13:06.786 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-04 14:13:06.786 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-10-04 14:13:06.786 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:13:06.799 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:13:06.800 [main] LoadPlanTreePrinter - LoadPlan(collection=edu.matc.entity.User.products)
    - Returns
       - CollectionReturnImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:0>, path=[edu.matc.entity.User.products])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:1>, path=[edu.matc.entity.User.products].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.matc.entity.User.products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {user_id9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - item_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Product)
                - SQL table alias mapping - products0_
                - alias suffix - 1_
                - suffixed key columns - {item_id1_0_1_}

[DEBUG] 2020-10-04 14:13:06.800 [main] CollectionLoader - Static select for collection edu.matc.entity.User.products: select products0_.user_id as user_id9_0_0_, products0_.item_id as item_id1_0_0_, products0_.item_id as item_id1_0_1_, products0_.customizable as customiz2_0_1_, products0_.description as descript3_0_1_, products0_.image as image4_0_1_, products0_.price as price5_0_1_, products0_.production_cost as producti6_0_1_, products0_.tags as tags7_0_1_, products0_.title as title8_0_1_, products0_.user_id as user_id9_0_1_ from product products0_ where products0_.user_id=?
[DEBUG] 2020-10-04 14:13:06.962 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-10-04 14:13:06.970 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-10-04 14:13:06.981 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-10-04 14:13:06.999 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-10-04 14:13:07.003 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-10-04 14:13:07.004 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-10-04 14:13:07.004 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-10-04 14:13:07.017 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2c604965
[DEBUG] 2020-10-04 14:13:07.024 [main] SessionFactoryRegistry - Registering SessionFactory: b1513f40-7f4c-40f3-92c1-e38306db6462 (<unnamed>)
[DEBUG] 2020-10-04 14:13:07.024 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-10-04 14:13:07.694 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-10-04 14:13:07.717 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-10-04 14:13:07.788 [main] SQL - select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:13:07.797 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-10-04 14:13:07.808 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-10-04 14:13:07.855 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-04 14:13:07.856 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Product#1
[DEBUG] 2020-10-04 14:13:07.857 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[INFO ] 2020-10-04 14:13:07.884 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-10-04 14:13:08.027 [main] SQL - select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:13:08.031 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-04 14:13:08.032 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Product#2
[DEBUG] 2020-10-04 14:13:08.032 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-04 14:13:08.039 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-10-04 14:13:08.039 [main] TransactionImpl - begin
[DEBUG] 2020-10-04 14:13:08.042 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@70325d20
[DEBUG] 2020-10-04 14:13:08.046 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@70325d20
[DEBUG] 2020-10-04 14:13:08.046 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@70325d20
[DEBUG] 2020-10-04 14:13:08.047 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d7fa3ae
[DEBUG] 2020-10-04 14:13:08.049 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@187eb9a8
[DEBUG] 2020-10-04 14:13:08.052 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3ff57625
[DEBUG] 2020-10-04 14:13:08.053 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@18fdb6cf
[DEBUG] 2020-10-04 14:13:08.053 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@18fdb6cf
[DEBUG] 2020-10-04 14:13:08.053 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18fdb6cf
[DEBUG] 2020-10-04 14:13:08.060 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6ad5923a
[DEBUG] 2020-10-04 14:13:08.064 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6ad5923a
[DEBUG] 2020-10-04 14:13:08.067 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6ad5923a
[DEBUG] 2020-10-04 14:13:08.071 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6f6962ba
[DEBUG] 2020-10-04 14:13:08.074 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6f6962ba
[DEBUG] 2020-10-04 14:13:08.074 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f6962ba
[DEBUG] 2020-10-04 14:13:08.075 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3fbfa96
[DEBUG] 2020-10-04 14:13:08.079 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3fbfa96
[DEBUG] 2020-10-04 14:13:08.079 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3fbfa96
[DEBUG] 2020-10-04 14:13:08.088 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@301d8120
[DEBUG] 2020-10-04 14:13:08.089 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@301d8120
[DEBUG] 2020-10-04 14:13:08.091 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@301d8120
[DEBUG] 2020-10-04 14:13:08.093 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3e134896
[DEBUG] 2020-10-04 14:13:08.093 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3e134896
[DEBUG] 2020-10-04 14:13:08.093 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3e134896
[DEBUG] 2020-10-04 14:13:08.099 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2d0bfb24
[DEBUG] 2020-10-04 14:13:08.100 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2d0bfb24
[DEBUG] 2020-10-04 14:13:08.100 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2d0bfb24
[DEBUG] 2020-10-04 14:13:08.100 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1136b469
[DEBUG] 2020-10-04 14:13:08.109 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1136b469
[DEBUG] 2020-10-04 14:13:08.118 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5432050b
[DEBUG] 2020-10-04 14:13:08.118 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5432050b
[DEBUG] 2020-10-04 14:13:08.122 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2c779e5
[DEBUG] 2020-10-04 14:13:08.130 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2c779e5
[DEBUG] 2020-10-04 14:13:08.131 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@682c1e93
[DEBUG] 2020-10-04 14:13:08.137 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5b78fdb1
[DEBUG] 2020-10-04 14:13:08.155 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3e9803c2
[DEBUG] 2020-10-04 14:13:08.157 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3e9803c2
[DEBUG] 2020-10-04 14:13:08.164 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7808fb9
[DEBUG] 2020-10-04 14:13:08.169 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7808fb9
[DEBUG] 2020-10-04 14:13:08.184 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2d84cb86
[DEBUG] 2020-10-04 14:13:08.185 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2d84cb86
[DEBUG] 2020-10-04 14:13:08.191 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4482469c
[DEBUG] 2020-10-04 14:13:08.192 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4482469c
[DEBUG] 2020-10-04 14:13:08.193 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4b1abd11
[DEBUG] 2020-10-04 14:13:08.194 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4b1abd11
[DEBUG] 2020-10-04 14:13:08.199 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b32cd16
[DEBUG] 2020-10-04 14:13:08.199 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b32cd16
[DEBUG] 2020-10-04 14:13:08.205 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19593091
[DEBUG] 2020-10-04 14:13:08.206 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19593091
[DEBUG] 2020-10-04 14:13:08.207 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e868ef5
[DEBUG] 2020-10-04 14:13:08.210 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e868ef5
[DEBUG] 2020-10-04 14:13:08.214 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@afb5821
[DEBUG] 2020-10-04 14:13:08.217 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@afb5821
[DEBUG] 2020-10-04 14:13:08.220 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1d207fad
[DEBUG] 2020-10-04 14:13:08.220 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1d207fad
[DEBUG] 2020-10-04 14:13:08.222 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@18a645fd
[DEBUG] 2020-10-04 14:13:08.228 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@18a645fd
[DEBUG] 2020-10-04 14:13:08.236 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5e3a39cd
[DEBUG] 2020-10-04 14:13:08.237 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e3a39cd
[DEBUG] 2020-10-04 14:13:08.239 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e3a39cd
[DEBUG] 2020-10-04 14:13:08.232 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0
[DEBUG] 2020-10-04 14:13:08.243 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@52a36910
[DEBUG] 2020-10-04 14:13:08.254 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7e8a46b7
[DEBUG] 2020-10-04 14:13:08.254 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e8a46b7
[DEBUG] 2020-10-04 14:13:08.254 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e8a46b7
[DEBUG] 2020-10-04 14:13:08.257 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21fff664
[DEBUG] 2020-10-04 14:13:08.262 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1440c311
[DEBUG] 2020-10-04 14:13:08.262 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1440c311
[DEBUG] 2020-10-04 14:13:08.263 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@37c5fc56
[DEBUG] 2020-10-04 14:13:08.265 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@37c5fc56
[DEBUG] 2020-10-04 14:13:08.272 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5ecba515
[DEBUG] 2020-10-04 14:13:08.272 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5ecba515
[DEBUG] 2020-10-04 14:13:08.273 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@18324f97
[DEBUG] 2020-10-04 14:13:08.273 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@18324f97
[DEBUG] 2020-10-04 14:13:08.275 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@72209d93
[DEBUG] 2020-10-04 14:13:08.278 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@72209d93
[DEBUG] 2020-10-04 14:13:08.279 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f84abe8
[DEBUG] 2020-10-04 14:13:08.283 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@aced190
[DEBUG] 2020-10-04 14:13:08.286 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@aced190
[DEBUG] 2020-10-04 14:13:08.286 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@aced190
[DEBUG] 2020-10-04 14:13:08.289 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d6aca33
[DEBUG] 2020-10-04 14:13:08.289 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d6aca33
[DEBUG] 2020-10-04 14:13:08.289 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d6aca33
[DEBUG] 2020-10-04 14:13:08.290 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@526f6427
[DEBUG] 2020-10-04 14:13:08.295 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@63e5e5b4
[DEBUG] 2020-10-04 14:13:08.298 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5e840abf
[DEBUG] 2020-10-04 14:13:08.305 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@749f539e
[DEBUG] 2020-10-04 14:13:08.305 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@749f539e
[DEBUG] 2020-10-04 14:13:08.305 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@749f539e
[DEBUG] 2020-10-04 14:13:08.314 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@273842a6
[DEBUG] 2020-10-04 14:13:08.315 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@273842a6
[DEBUG] 2020-10-04 14:13:08.315 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@273842a6
[DEBUG] 2020-10-04 14:13:08.316 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5560bcdf
[DEBUG] 2020-10-04 14:13:08.316 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@27aae97b
[DEBUG] 2020-10-04 14:13:08.318 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5467eea4
[DEBUG] 2020-10-04 14:13:08.318 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5467eea4
[DEBUG] 2020-10-04 14:13:08.318 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6ff37443
[DEBUG] 2020-10-04 14:13:08.334 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@12a160c2
[DEBUG] 2020-10-04 14:13:08.336 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12a160c2
[DEBUG] 2020-10-04 14:13:08.342 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@30b2b76f
[DEBUG] 2020-10-04 14:13:08.348 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@30b2b76f
[DEBUG] 2020-10-04 14:13:08.348 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@340b7ef6
[DEBUG] 2020-10-04 14:13:08.353 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@231baf51
[DEBUG] 2020-10-04 14:13:08.360 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4e8e8621
[DEBUG] 2020-10-04 14:13:08.368 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@79a1728c
[DEBUG] 2020-10-04 14:13:08.368 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@79a1728c
[DEBUG] 2020-10-04 14:13:08.369 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3005db4a
[DEBUG] 2020-10-04 14:13:08.369 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@425d5d46
[DEBUG] 2020-10-04 14:13:08.369 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@198ef2ce
[DEBUG] 2020-10-04 14:13:08.380 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4cbd03e7
[DEBUG] 2020-10-04 14:13:08.380 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@52fc5eb1
[DEBUG] 2020-10-04 14:13:08.380 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7a639ec5
[DEBUG] 2020-10-04 14:13:08.381 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14151bc5
[DEBUG] 2020-10-04 14:13:08.382 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3013909b
[DEBUG] 2020-10-04 14:13:08.392 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0
[DEBUG] 2020-10-04 14:13:08.410 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:08.448 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'matc'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Product'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-10-04 14:13:08.504 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:08.550 [main] FromElement - FromClause{level=1} : edu.matc.entity.Product (generatedAlias0) -> product0_
[DEBUG] 2020-10-04 14:13:08.551 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:13:08.552 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:08.553 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-10-04 14:13:08.554 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-10-04 14:13:08.555 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 14:13:08.556 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} product0_.item_id ) ( FromClause{level=1} product product0_ ) )
[DEBUG] 2020-10-04 14:13:08.559 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 14:13:08.564 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-10-04 14:13:08.566 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-10-04 14:13:08.573 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-10-04 14:13:08.574 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 14:13:08.575 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-10-04 14:13:08.575 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-10-04 14:13:08.575 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-10-04 14:13:08.576 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-10-04 14:13:08.576 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 14:13:08.577 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2020-10-04 14:13:08.584 [main] JoinProcessor - Using FROM fragment [product product0_]
[DEBUG] 2020-10-04 14:13:08.587 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:08.587 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.item_id as item_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=edu.matc.entity.Product}}

[DEBUG] 2020-10-04 14:13:08.587 [main] ErrorTracker - throwQueryException() : no errors
[INFO ] 2020-10-04 14:13:08.597 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test?serverTimezone=UTC
[INFO ] 2020-10-04 14:13:08.597 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-10-04 14:13:08.597 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[DEBUG] 2020-10-04 14:13:08.639 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0
[DEBUG] 2020-10-04 14:13:08.648 [main] QueryTranslatorImpl - SQL: select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_
[DEBUG] 2020-10-04 14:13:08.648 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:08.705 [main] SQL - select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_
[DEBUG] 2020-10-04 14:13:08.748 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-04 14:13:09.031 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0 where generatedAlias0.title=:param0
[DEBUG] 2020-10-04 14:13:09.034 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0 where generatedAlias0.title=:param0
[DEBUG] 2020-10-04 14:13:09.041 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:09.046 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'matc'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Product'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-10-04 14:13:09.046 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:09.047 [main] FromElement - FromClause{level=1} : edu.matc.entity.Product (generatedAlias0) -> product0_
[DEBUG] 2020-10-04 14:13:09.048 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:13:09.058 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:13:09.059 [main] DotNode - getDataType() : title -> org.hibernate.type.StringType@5183d589
[DEBUG] 2020-10-04 14:13:09.060 [main] FromReferenceNode - Resolved : generatedAlias0.title -> product0_.title
[DEBUG] 2020-10-04 14:13:09.067 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:09.067 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} product0_.item_id ) ( FromClause{level=1} product product0_ ) ( where ( = ( product0_.title product0_.item_id title ) ? ) ) )
[DEBUG] 2020-10-04 14:13:09.073 [main] JoinProcessor - Using FROM fragment [product product0_]
[DEBUG] 2020-10-04 14:13:09.074 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:09.078 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.item_id as item_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=edu.matc.entity.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'product0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=product0_,className=edu.matc.entity.Product,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'product0_.item_id' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5183d589}

[DEBUG] 2020-10-04 14:13:09.078 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:09.078 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0 where generatedAlias0.title=:param0
[DEBUG] 2020-10-04 14:13:09.079 [main] QueryTranslatorImpl - SQL: select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_ where product0_.title=?
[DEBUG] 2020-10-04 14:13:09.079 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:09.096 [main] SQL - select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_ where product0_.title=?
[DEBUG] 2020-10-04 14:13:09.116 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-04 14:13:09.308 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2020-10-04 14:13:09.318 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2020-10-04 14:13:09.331 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:09.333 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'matc'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Product'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-10-04 14:13:09.335 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:09.338 [main] FromElement - FromClause{level=1} : edu.matc.entity.Product (generatedAlias0) -> product0_
[DEBUG] 2020-10-04 14:13:09.339 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:13:09.345 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:13:09.345 [main] DotNode - getDataType() : title -> org.hibernate.type.StringType@5183d589
[DEBUG] 2020-10-04 14:13:09.351 [main] FromReferenceNode - Resolved : generatedAlias0.title -> product0_.title
[DEBUG] 2020-10-04 14:13:09.351 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:09.351 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} product0_.item_id ) ( FromClause{level=1} product product0_ ) ( where ( like ( product0_.title product0_.item_id title ) ? ) ) )
[DEBUG] 2020-10-04 14:13:09.352 [main] JoinProcessor - Using FROM fragment [product product0_]
[DEBUG] 2020-10-04 14:13:09.352 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:09.352 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.item_id as item_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=edu.matc.entity.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'product0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=product0_,className=edu.matc.entity.Product,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'product0_.item_id' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5183d589}

[DEBUG] 2020-10-04 14:13:09.352 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:09.352 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2020-10-04 14:13:09.352 [main] QueryTranslatorImpl - SQL: select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_ where product0_.title like ?
[DEBUG] 2020-10-04 14:13:09.352 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:09.365 [main] SQL - select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_ where product0_.title like ?
[DEBUG] 2020-10-04 14:13:09.371 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[INFO ] 2020-10-04 14:13:09.409 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-10-04 14:13:09.554 [main] SQL - select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:13:09.568 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-04 14:13:09.568 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Product#1
[DEBUG] 2020-10-04 14:13:09.568 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-04 14:13:11.375 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-10-04 14:13:11.378 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-10-04 14:13:11.378 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-10-04 14:13:11.458 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-10-04 14:13:11.545 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-10-04 14:13:11.622 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-10-04 14:13:11.745 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-10-04 14:13:11.752 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61f39bb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@249e0271]
[DEBUG] 2020-10-04 14:13:11.885 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Product
[DEBUG] 2020-10-04 14:13:11.949 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-04 14:13:11.965 [main] EntityBinder - Import with entity name Product
[DEBUG] 2020-10-04 14:13:11.971 [main] EntityBinder - Bind entity edu.matc.entity.Product on table product
[DEBUG] 2020-10-04 14:13:12.020 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=item_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.024 [main] PropertyBinder - MetadataSourceProcessor property itemId with lazy=false
[DEBUG] 2020-10-04 14:13:12.032 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:itemId]
[DEBUG] 2020-10-04 14:13:12.034 [main] SimpleValueBinder - building SimpleValue for itemId
[DEBUG] 2020-10-04 14:13:12.036 [main] PropertyBinder - Building property itemId
[DEBUG] 2020-10-04 14:13:12.044 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(item_id)]), itemId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-04 14:13:12.049 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=customizable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.051 [main] PropertyBinder - MetadataSourceProcessor property customizable with lazy=false
[DEBUG] 2020-10-04 14:13:12.056 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:customizable]
[DEBUG] 2020-10-04 14:13:12.056 [main] SimpleValueBinder - building SimpleValue for customizable
[DEBUG] 2020-10-04 14:13:12.056 [main] PropertyBinder - Building property customizable
[DEBUG] 2020-10-04 14:13:12.058 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.058 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-10-04 14:13:12.058 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:description]
[DEBUG] 2020-10-04 14:13:12.058 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-10-04 14:13:12.059 [main] PropertyBinder - Building property description
[DEBUG] 2020-10-04 14:13:12.059 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.062 [main] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2020-10-04 14:13:12.066 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:image]
[DEBUG] 2020-10-04 14:13:12.066 [main] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2020-10-04 14:13:12.066 [main] PropertyBinder - Building property image
[DEBUG] 2020-10-04 14:13:12.067 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.067 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-10-04 14:13:12.068 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:price]
[DEBUG] 2020-10-04 14:13:12.068 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-10-04 14:13:12.068 [main] PropertyBinder - Building property price
[DEBUG] 2020-10-04 14:13:12.068 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=production_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.068 [main] PropertyBinder - MetadataSourceProcessor property productionCost with lazy=false
[DEBUG] 2020-10-04 14:13:12.068 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:productionCost]
[DEBUG] 2020-10-04 14:13:12.069 [main] SimpleValueBinder - building SimpleValue for productionCost
[DEBUG] 2020-10-04 14:13:12.069 [main] PropertyBinder - Building property productionCost
[DEBUG] 2020-10-04 14:13:12.069 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=tags, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.069 [main] PropertyBinder - MetadataSourceProcessor property tags with lazy=false
[DEBUG] 2020-10-04 14:13:12.071 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:tags]
[DEBUG] 2020-10-04 14:13:12.071 [main] SimpleValueBinder - building SimpleValue for tags
[DEBUG] 2020-10-04 14:13:12.071 [main] PropertyBinder - Building property tags
[DEBUG] 2020-10-04 14:13:12.071 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.071 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-10-04 14:13:12.071 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:title]
[DEBUG] 2020-10-04 14:13:12.071 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-10-04 14:13:12.072 [main] PropertyBinder - Building property title
[DEBUG] 2020-10-04 14:13:12.075 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-10-04 14:13:12.075 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.083 [main] PropertyBinder - Building property user
[DEBUG] 2020-10-04 14:13:12.085 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-10-04 14:13:12.085 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-04 14:13:12.086 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-10-04 14:13:12.086 [main] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2020-10-04 14:13:12.095 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.095 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-10-04 14:13:12.095 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-10-04 14:13:12.095 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-10-04 14:13:12.100 [main] PropertyBinder - Building property userId
[DEBUG] 2020-10-04 14:13:12.100 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-04 14:13:12.100 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.100 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-10-04 14:13:12.100 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2020-10-04 14:13:12.101 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-10-04 14:13:12.101 [main] PropertyBinder - Building property email
[DEBUG] 2020-10-04 14:13:12.101 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.101 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-10-04 14:13:12.103 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2020-10-04 14:13:12.103 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-10-04 14:13:12.103 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-10-04 14:13:12.103 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.103 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-10-04 14:13:12.103 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2020-10-04 14:13:12.103 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-10-04 14:13:12.104 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-10-04 14:13:12.104 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.104 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-10-04 14:13:12.104 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2020-10-04 14:13:12.104 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-10-04 14:13:12.104 [main] PropertyBinder - Building property password
[DEBUG] 2020-10-04 14:13:12.104 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-04 14:13:12.105 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.114 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.144 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.148 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 14:13:12.148 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-04 14:13:12.156 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-04 14:13:12.156 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-04 14:13:12.163 [main] CollectionBinder - Collection role: edu.matc.entity.User.products
[DEBUG] 2020-10-04 14:13:12.166 [main] PropertyBinder - Building property products
[DEBUG] 2020-10-04 14:13:12.169 [main] SimpleValueBinder - Starting fillSimpleValue for itemId
[DEBUG] 2020-10-04 14:13:12.169 [main] SimpleValueBinder - Starting fillSimpleValue for customizable
[DEBUG] 2020-10-04 14:13:12.169 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-10-04 14:13:12.169 [main] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2020-10-04 14:13:12.169 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-10-04 14:13:12.172 [main] SimpleValueBinder - Starting fillSimpleValue for productionCost
[DEBUG] 2020-10-04 14:13:12.172 [main] SimpleValueBinder - Starting fillSimpleValue for tags
[DEBUG] 2020-10-04 14:13:12.172 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-10-04 14:13:12.173 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-10-04 14:13:12.173 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-10-04 14:13:12.173 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-10-04 14:13:12.173 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-10-04 14:13:12.173 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-10-04 14:13:12.183 [main] PrimaryKey - Forcing column [item_id] to be non-null as it is part of the primary key for table [product]
[DEBUG] 2020-10-04 14:13:12.183 [main] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-10-04 14:13:12.183 [main] CollectionSecondPass - Second pass for collection: edu.matc.entity.User.products
[DEBUG] 2020-10-04 14:13:12.187 [main] CollectionBinder - Binding a OneToMany: edu.matc.entity.User.products through a foreign key
[DEBUG] 2020-10-04 14:13:12.190 [main] CollectionBinder - Mapping collection: edu.matc.entity.User.products -> product
[DEBUG] 2020-10-04 14:13:12.194 [main] TableBinder - Retrieving property edu.matc.entity.Product.user
[DEBUG] 2020-10-04 14:13:12.195 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.matc.entity.Product
[DEBUG] 2020-10-04 14:13:12.195 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-10-04 14:13:12.197 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-10-04 14:13:12.262 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-10-04 14:13:12.266 [main] Settings - SessionFactory name : null
[DEBUG] 2020-10-04 14:13:12.267 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-10-04 14:13:12.268 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-10-04 14:13:12.268 [main] Settings - Statistics: disabled
[DEBUG] 2020-10-04 14:13:12.268 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-10-04 14:13:12.268 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-10-04 14:13:12.268 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-10-04 14:13:12.268 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-10-04 14:13:12.268 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-10-04 14:13:12.268 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-10-04 14:13:12.268 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-10-04 14:13:12.268 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-10-04 14:13:12.268 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-10-04 14:13:12.268 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-10-04 14:13:12.269 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-10-04 14:13:12.269 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-10-04 14:13:12.269 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-10-04 14:13:12.269 [main] Settings - Named query checking : enabled
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-10-04 14:13:12.274 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-10-04 14:13:12.275 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-10-04 14:13:12.275 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-10-04 14:13:12.275 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-10-04 14:13:12.370 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-10-04 14:13:12.412 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-10-04 14:13:12.412 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/IdeaProjects/customCrafts/target/test-classes:/home/student/IdeaProjects/customCrafts/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 @w@/tmp/idea_working_dirs_junit2.tmp @/tmp/idea_junit2.tmp, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-48-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.8, user.dir=/home/student/IdeaProjects/customCrafts, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3ed34ef5, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.8+10-post-Ubuntu-0ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2020-10-04 14:13:12.449 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-10-04 14:13:12.450 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-10-04 14:13:12.451 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-10-04 14:13:12.451 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61f39bb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61ab89b0]
[DEBUG] 2020-10-04 14:13:12.623 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-10-04 14:13:12.624 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-10-04 14:13:12.668 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-10-04 14:13:12.668 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-10-04 14:13:13.107 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Product] is safe
[DEBUG] 2020-10-04 14:13:13.110 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Product
[DEBUG] 2020-10-04 14:13:13.110 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Product] is safe
[DEBUG] 2020-10-04 14:13:13.110 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Product
[DEBUG] 2020-10-04 14:13:13.209 [main] AbstractCollectionPersister - Static SQL for collection: edu.matc.entity.User.products
[DEBUG] 2020-10-04 14:13:13.209 [main] AbstractCollectionPersister -  Row insert: update product set user_id=? where item_id=?
[DEBUG] 2020-10-04 14:13:13.210 [main] AbstractCollectionPersister -  Row update: update product set  where item_id=?
[DEBUG] 2020-10-04 14:13:13.210 [main] AbstractCollectionPersister -  Row delete: update product set user_id=null where user_id=? and item_id=?
[DEBUG] 2020-10-04 14:13:13.210 [main] AbstractCollectionPersister -  One-shot delete: update product set user_id=null where user_id=?
[DEBUG] 2020-10-04 14:13:13.218 [main] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.User
[DEBUG] 2020-10-04 14:13:13.218 [main] AbstractEntityPersister -  Version select: select user_id from user where user_id =?
[DEBUG] 2020-10-04 14:13:13.218 [main] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.password as password5_1_ from user user_ where user_.user_id=?
[DEBUG] 2020-10-04 14:13:13.218 [main] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-10-04 14:13:13.219 [main] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=? where user_id=?
[DEBUG] 2020-10-04 14:13:13.219 [main] AbstractEntityPersister -  Delete 0: delete from user where user_id=?
[DEBUG] 2020-10-04 14:13:13.219 [main] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password) values (?, ?, ?, ?)
[DEBUG] 2020-10-04 14:13:13.263 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@789c3057]
[DEBUG] 2020-10-04 14:13:13.264 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-10-04 14:13:13.264 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-10-04 14:13:13.264 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-10-04 14:13:13.264 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-10-04 14:13:13.264 [main] MetamodelGraphWalker - Visiting attribute path : products
[DEBUG] 2020-10-04 14:13:13.271 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66f5a02e]
[DEBUG] 2020-10-04 14:13:13.273 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c241a9f]
[DEBUG] 2020-10-04 14:13:13.275 [main] MetamodelGraphWalker - Visiting attribute path : products.customizable
[DEBUG] 2020-10-04 14:13:13.275 [main] MetamodelGraphWalker - Visiting attribute path : products.description
[DEBUG] 2020-10-04 14:13:13.275 [main] MetamodelGraphWalker - Visiting attribute path : products.image
[DEBUG] 2020-10-04 14:13:13.276 [main] MetamodelGraphWalker - Visiting attribute path : products.price
[DEBUG] 2020-10-04 14:13:13.276 [main] MetamodelGraphWalker - Visiting attribute path : products.productionCost
[DEBUG] 2020-10-04 14:13:13.276 [main] MetamodelGraphWalker - Visiting attribute path : products.tags
[DEBUG] 2020-10-04 14:13:13.276 [main] MetamodelGraphWalker - Visiting attribute path : products.title
[DEBUG] 2020-10-04 14:13:13.277 [main] MetamodelGraphWalker - Visiting attribute path : products.user
[DEBUG] 2020-10-04 14:13:13.278 [main] MetamodelGraphWalker - Property path deemed to be circular : products.user
[DEBUG] 2020-10-04 14:13:13.279 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:13:13.289 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:13:13.303 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:1>, path=edu.matc.entity.User.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:2>, path=edu.matc.entity.User.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(products)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.products)
                - SQL table alias mapping - products1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - item_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Product)
                      - SQL table alias mapping - products1_
                      - alias suffix - 2_
                      - suffixed key columns - {item_id1_0_2_}

[DEBUG] 2020-10-04 14:13:13.307 [main] EntityLoader - Static select for entity edu.matc.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, products1_.user_id as user_id9_0_1_, products1_.item_id as item_id1_0_1_, products1_.item_id as item_id1_0_2_, products1_.customizable as customiz2_0_2_, products1_.description as descript3_0_2_, products1_.image as image4_0_2_, products1_.price as price5_0_2_, products1_.production_cost as producti6_0_2_, products1_.tags as tags7_0_2_, products1_.title as title8_0_2_, products1_.user_id as user_id9_0_2_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-10-04 14:13:13.307 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46fc522d]
[DEBUG] 2020-10-04 14:13:13.308 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-10-04 14:13:13.308 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-10-04 14:13:13.309 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-10-04 14:13:13.309 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-10-04 14:13:13.309 [main] MetamodelGraphWalker - Visiting attribute path : products
[DEBUG] 2020-10-04 14:13:13.309 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f0a2638]
[DEBUG] 2020-10-04 14:13:13.309 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5382184b]
[DEBUG] 2020-10-04 14:13:13.309 [main] MetamodelGraphWalker - Visiting attribute path : products.customizable
[DEBUG] 2020-10-04 14:13:13.310 [main] MetamodelGraphWalker - Visiting attribute path : products.description
[DEBUG] 2020-10-04 14:13:13.310 [main] MetamodelGraphWalker - Visiting attribute path : products.image
[DEBUG] 2020-10-04 14:13:13.310 [main] MetamodelGraphWalker - Visiting attribute path : products.price
[DEBUG] 2020-10-04 14:13:13.310 [main] MetamodelGraphWalker - Visiting attribute path : products.productionCost
[DEBUG] 2020-10-04 14:13:13.310 [main] MetamodelGraphWalker - Visiting attribute path : products.tags
[DEBUG] 2020-10-04 14:13:13.310 [main] MetamodelGraphWalker - Visiting attribute path : products.title
[DEBUG] 2020-10-04 14:13:13.311 [main] MetamodelGraphWalker - Visiting attribute path : products.user
[DEBUG] 2020-10-04 14:13:13.311 [main] MetamodelGraphWalker - Property path deemed to be circular : products.user
[DEBUG] 2020-10-04 14:13:13.311 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:13:13.314 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:13:13.316 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:1>, path=edu.matc.entity.User.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:2>, path=edu.matc.entity.User.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(products)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.products)
                - SQL table alias mapping - products1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - item_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Product)
                      - SQL table alias mapping - products1_
                      - alias suffix - 2_
                      - suffixed key columns - {item_id1_0_2_}

[DEBUG] 2020-10-04 14:13:13.316 [main] EntityLoader - Static select for entity edu.matc.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, products1_.user_id as user_id9_0_1_, products1_.item_id as item_id1_0_1_, products1_.item_id as item_id1_0_2_, products1_.customizable as customiz2_0_2_, products1_.description as descript3_0_2_, products1_.image as image4_0_2_, products1_.price as price5_0_2_, products1_.production_cost as producti6_0_2_, products1_.tags as tags7_0_2_, products1_.title as title8_0_2_, products1_.user_id as user_id9_0_2_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-10-04 14:13:13.342 [main] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, products1_.user_id as user_id9_0_3_, products1_.item_id as item_id1_0_3_, products1_.item_id as item_id1_0_0_, products1_.customizable as customiz2_0_0_, products1_.description as descript3_0_0_, products1_.image as image4_0_0_, products1_.price as price5_0_0_, products1_.production_cost as producti6_0_0_, products1_.tags as tags7_0_0_, products1_.title as title8_0_0_, products1_.user_id as user_id9_0_0_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-10-04 14:13:13.343 [main] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, products1_.user_id as user_id9_0_3_, products1_.item_id as item_id1_0_3_, products1_.item_id as item_id1_0_0_, products1_.customizable as customiz2_0_0_, products1_.description as descript3_0_0_, products1_.image as image4_0_0_, products1_.price as price5_0_0_, products1_.production_cost as producti6_0_0_, products1_.tags as tags7_0_0_, products1_.title as title8_0_0_, products1_.user_id as user_id9_0_0_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-10-04 14:13:13.344 [main] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Product
[DEBUG] 2020-10-04 14:13:13.344 [main] AbstractEntityPersister -  Version select: select item_id from product where item_id =?
[DEBUG] 2020-10-04 14:13:13.344 [main] AbstractEntityPersister -  Snapshot select: select product_.item_id, product_.customizable as customiz2_0_, product_.description as descript3_0_, product_.image as image4_0_, product_.price as price5_0_, product_.production_cost as producti6_0_, product_.tags as tags7_0_, product_.title as title8_0_, product_.user_id as user_id9_0_ from product product_ where product_.item_id=?
[DEBUG] 2020-10-04 14:13:13.344 [main] AbstractEntityPersister -  Insert 0: insert into product (customizable, description, image, price, production_cost, tags, title, user_id, item_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-10-04 14:13:13.344 [main] AbstractEntityPersister -  Update 0: update product set customizable=?, description=?, image=?, price=?, production_cost=?, tags=?, title=?, user_id=? where item_id=?
[DEBUG] 2020-10-04 14:13:13.344 [main] AbstractEntityPersister -  Delete 0: delete from product where item_id=?
[DEBUG] 2020-10-04 14:13:13.344 [main] AbstractEntityPersister -  Identity insert: insert into product (customizable, description, image, price, production_cost, tags, title, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-10-04 14:13:13.344 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d6ac396]
[DEBUG] 2020-10-04 14:13:13.344 [main] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-10-04 14:13:13.344 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-04 14:13:13.344 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-10-04 14:13:13.344 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-10-04 14:13:13.349 [main] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-10-04 14:13:13.349 [main] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-10-04 14:13:13.349 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-10-04 14:13:13.349 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-04 14:13:13.349 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5a7226]
[DEBUG] 2020-10-04 14:13:13.355 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-10-04 14:13:13.355 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-10-04 14:13:13.355 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-10-04 14:13:13.355 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-10-04 14:13:13.355 [main] MetamodelGraphWalker - Visiting attribute path : user.products
[DEBUG] 2020-10-04 14:13:13.355 [main] MetamodelGraphWalker - Property path deemed to be circular : user.products
[DEBUG] 2020-10-04 14:13:13.356 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:13:13.356 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:13:13.356 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Product)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Product, querySpaceUid=<gen:0>, path=edu.matc.entity.Product)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Product.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {item_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}

[DEBUG] 2020-10-04 14:13:13.357 [main] EntityLoader - Static select for entity edu.matc.entity.Product [NONE]: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:13:13.357 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@713a35c5]
[DEBUG] 2020-10-04 14:13:13.357 [main] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-10-04 14:13:13.357 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-04 14:13:13.357 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-10-04 14:13:13.357 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-10-04 14:13:13.357 [main] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-10-04 14:13:13.357 [main] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-10-04 14:13:13.357 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-10-04 14:13:13.357 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-04 14:13:13.357 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11787b64]
[DEBUG] 2020-10-04 14:13:13.357 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-10-04 14:13:13.357 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-10-04 14:13:13.357 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-10-04 14:13:13.358 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-10-04 14:13:13.358 [main] MetamodelGraphWalker - Visiting attribute path : user.products
[DEBUG] 2020-10-04 14:13:13.358 [main] MetamodelGraphWalker - Property path deemed to be circular : user.products
[DEBUG] 2020-10-04 14:13:13.358 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:13:13.358 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:13:13.358 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Product)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Product, querySpaceUid=<gen:0>, path=edu.matc.entity.Product)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Product.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {item_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}

[DEBUG] 2020-10-04 14:13:13.358 [main] EntityLoader - Static select for entity edu.matc.entity.Product [READ]: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:13:13.359 [main] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Product: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_ from product product0_ where product0_.item_id=?
[DEBUG] 2020-10-04 14:13:13.359 [main] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Product: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_ from product product0_ where product0_.item_id=?
[DEBUG] 2020-10-04 14:13:13.371 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40ce9049]
[DEBUG] 2020-10-04 14:13:13.371 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ca2652]
[DEBUG] 2020-10-04 14:13:13.371 [main] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-10-04 14:13:13.371 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-04 14:13:13.371 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-10-04 14:13:13.371 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-10-04 14:13:13.371 [main] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-10-04 14:13:13.371 [main] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-10-04 14:13:13.371 [main] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-10-04 14:13:13.371 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-04 14:13:13.371 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-10-04 14:13:13.371 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-04 14:13:13.377 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-04 14:13:13.378 [main] LoadPlanTreePrinter - LoadPlan(collection=edu.matc.entity.User.products)
    - Returns
       - CollectionReturnImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:0>, path=[edu.matc.entity.User.products])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:1>, path=[edu.matc.entity.User.products].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.matc.entity.User.products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {user_id9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - item_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Product)
                - SQL table alias mapping - products0_
                - alias suffix - 1_
                - suffixed key columns - {item_id1_0_1_}

[DEBUG] 2020-10-04 14:13:13.379 [main] CollectionLoader - Static select for collection edu.matc.entity.User.products: select products0_.user_id as user_id9_0_0_, products0_.item_id as item_id1_0_0_, products0_.item_id as item_id1_0_1_, products0_.customizable as customiz2_0_1_, products0_.description as descript3_0_1_, products0_.image as image4_0_1_, products0_.price as price5_0_1_, products0_.production_cost as producti6_0_1_, products0_.tags as tags7_0_1_, products0_.title as title8_0_1_, products0_.user_id as user_id9_0_1_ from product products0_ where products0_.user_id=?
[DEBUG] 2020-10-04 14:13:13.436 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-10-04 14:13:13.436 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-10-04 14:13:13.437 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-10-04 14:13:13.446 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-10-04 14:13:13.447 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-10-04 14:13:13.447 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-10-04 14:13:13.447 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-10-04 14:13:13.449 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7a083b96
[DEBUG] 2020-10-04 14:13:13.459 [main] SessionFactoryRegistry - Registering SessionFactory: 2bcdacf3-e089-4009-aff6-3c76491402e3 (<unnamed>)
[DEBUG] 2020-10-04 14:13:13.459 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-10-04 14:13:13.744 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-10-04 14:13:13.782 [main] SQL - select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:13:13.815 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-04 14:13:13.818 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Product#1
[DEBUG] 2020-10-04 14:13:13.819 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-04 14:13:13.982 [main] SQL - select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:13:13.992 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-04 14:13:13.992 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Product#2
[DEBUG] 2020-10-04 14:13:13.992 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-04 14:13:13.996 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-10-04 14:13:13.996 [main] TransactionImpl - begin
[DEBUG] 2020-10-04 14:13:14.183 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0
[DEBUG] 2020-10-04 14:13:14.213 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3887c7d7
[DEBUG] 2020-10-04 14:13:14.261 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0
[DEBUG] 2020-10-04 14:13:14.271 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:14.295 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'matc'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Product'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-10-04 14:13:14.342 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:14.368 [main] FromElement - FromClause{level=1} : edu.matc.entity.Product (generatedAlias0) -> product0_
[DEBUG] 2020-10-04 14:13:14.369 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:13:14.373 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:14.378 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} product0_.item_id ) ( FromClause{level=1} product product0_ ) )
[DEBUG] 2020-10-04 14:13:14.390 [main] JoinProcessor - Using FROM fragment [product product0_]
[DEBUG] 2020-10-04 14:13:14.390 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:14.391 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.item_id as item_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=edu.matc.entity.Product}}

[DEBUG] 2020-10-04 14:13:14.395 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:14.407 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0
[DEBUG] 2020-10-04 14:13:14.407 [main] QueryTranslatorImpl - SQL: select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_
[DEBUG] 2020-10-04 14:13:14.407 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:14.426 [main] SQL - select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_
[DEBUG] 2020-10-04 14:13:14.434 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-04 14:13:14.568 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0 where generatedAlias0.title=:param0
[DEBUG] 2020-10-04 14:13:14.570 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0 where generatedAlias0.title=:param0
[DEBUG] 2020-10-04 14:13:14.575 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:14.577 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'matc'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Product'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-10-04 14:13:14.578 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:14.578 [main] FromElement - FromClause{level=1} : edu.matc.entity.Product (generatedAlias0) -> product0_
[DEBUG] 2020-10-04 14:13:14.578 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:13:14.584 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:13:14.589 [main] DotNode - getDataType() : title -> org.hibernate.type.StringType@2c779e5
[DEBUG] 2020-10-04 14:13:14.590 [main] FromReferenceNode - Resolved : generatedAlias0.title -> product0_.title
[DEBUG] 2020-10-04 14:13:14.593 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:14.598 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} product0_.item_id ) ( FromClause{level=1} product product0_ ) ( where ( = ( product0_.title product0_.item_id title ) ? ) ) )
[DEBUG] 2020-10-04 14:13:14.599 [main] JoinProcessor - Using FROM fragment [product product0_]
[DEBUG] 2020-10-04 14:13:14.599 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:14.600 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.item_id as item_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=edu.matc.entity.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'product0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=product0_,className=edu.matc.entity.Product,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'product0_.item_id' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2c779e5}

[DEBUG] 2020-10-04 14:13:14.600 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:14.601 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0 where generatedAlias0.title=:param0
[DEBUG] 2020-10-04 14:13:14.603 [main] QueryTranslatorImpl - SQL: select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_ where product0_.title=?
[DEBUG] 2020-10-04 14:13:14.603 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:14.612 [main] SQL - select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_ where product0_.title=?
[DEBUG] 2020-10-04 14:13:14.620 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-04 14:13:14.732 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2020-10-04 14:13:14.734 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2020-10-04 14:13:14.740 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:14.742 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'matc'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Product'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-10-04 14:13:14.743 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:14.746 [main] FromElement - FromClause{level=1} : edu.matc.entity.Product (generatedAlias0) -> product0_
[DEBUG] 2020-10-04 14:13:14.747 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:13:14.749 [main] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-10-04 14:13:14.749 [main] DotNode - getDataType() : title -> org.hibernate.type.StringType@2c779e5
[DEBUG] 2020-10-04 14:13:14.751 [main] FromReferenceNode - Resolved : generatedAlias0.title -> product0_.title
[DEBUG] 2020-10-04 14:13:14.756 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:14.757 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} product0_.item_id ) ( FromClause{level=1} product product0_ ) ( where ( like ( product0_.title product0_.item_id title ) ? ) ) )
[DEBUG] 2020-10-04 14:13:14.757 [main] JoinProcessor - Using FROM fragment [product product0_]
[DEBUG] 2020-10-04 14:13:14.757 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-04 14:13:14.757 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.item_id as item_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=edu.matc.entity.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'product0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=product0_,className=edu.matc.entity.Product,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'product0_.item_id' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2c779e5}

[DEBUG] 2020-10-04 14:13:14.757 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:14.757 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0 where generatedAlias0.title like :param0
[DEBUG] 2020-10-04 14:13:14.757 [main] QueryTranslatorImpl - SQL: select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_ where product0_.title like ?
[DEBUG] 2020-10-04 14:13:14.757 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-04 14:13:14.758 [main] SQL - select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_ where product0_.title like ?
[DEBUG] 2020-10-04 14:13:14.764 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-10-04 14:13:14.881 [main] SQL - select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.password as password5_1_1_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id where product0_.item_id=?
[DEBUG] 2020-10-04 14:13:14.888 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-04 14:13:14.889 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Product#1
[DEBUG] 2020-10-04 14:13:14.889 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
