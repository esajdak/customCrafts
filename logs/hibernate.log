[DEBUG] 2020-11-29 20:45:20.574 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-11-29 20:45:20.609 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-11-29 20:45:20.648 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-11-29 20:45:21.388 [http-nio-8080-exec-1] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-11-29 20:45:21.420 [http-nio-8080-exec-1] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-11-29 20:45:23.020 [http-nio-8080-exec-1] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-11-29 20:45:23.031 [http-nio-8080-exec-1] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-11-29 20:45:23.232 [http-nio-8080-exec-1] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-11-29 20:45:27.450 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-11-29 20:45:27.784 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-11-29 20:45:27.817 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-11-29 20:45:28.231 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-11-29 20:45:29.680 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5737deef
[DEBUG] 2020-11-29 20:45:29.765 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5737deef
[DEBUG] 2020-11-29 20:45:29.766 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5737deef
[DEBUG] 2020-11-29 20:45:29.768 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3ee9a7a6
[DEBUG] 2020-11-29 20:45:29.775 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7aeab797
[DEBUG] 2020-11-29 20:45:29.779 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@64409686
[DEBUG] 2020-11-29 20:45:29.801 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@18cdaa53
[DEBUG] 2020-11-29 20:45:29.801 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@18cdaa53
[DEBUG] 2020-11-29 20:45:29.802 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18cdaa53
[DEBUG] 2020-11-29 20:45:29.839 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@206e5520
[DEBUG] 2020-11-29 20:45:29.842 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@206e5520
[DEBUG] 2020-11-29 20:45:29.857 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@206e5520
[DEBUG] 2020-11-29 20:45:29.900 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@69ffa4f8
[DEBUG] 2020-11-29 20:45:29.912 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@69ffa4f8
[DEBUG] 2020-11-29 20:45:29.913 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@69ffa4f8
[DEBUG] 2020-11-29 20:45:29.925 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@125735a4
[DEBUG] 2020-11-29 20:45:29.925 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@125735a4
[DEBUG] 2020-11-29 20:45:29.925 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@125735a4
[DEBUG] 2020-11-29 20:45:29.961 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@14f8b53d
[DEBUG] 2020-11-29 20:45:29.968 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@14f8b53d
[DEBUG] 2020-11-29 20:45:29.971 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@14f8b53d
[DEBUG] 2020-11-29 20:45:29.983 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@11091ffb
[DEBUG] 2020-11-29 20:45:29.995 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@11091ffb
[DEBUG] 2020-11-29 20:45:29.995 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@11091ffb
[DEBUG] 2020-11-29 20:45:30.014 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6bf7722c
[DEBUG] 2020-11-29 20:45:30.015 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6bf7722c
[DEBUG] 2020-11-29 20:45:30.016 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6bf7722c
[DEBUG] 2020-11-29 20:45:30.023 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@49c6813b
[DEBUG] 2020-11-29 20:45:30.033 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@49c6813b
[DEBUG] 2020-11-29 20:45:30.052 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@26bf004
[DEBUG] 2020-11-29 20:45:30.052 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@26bf004
[DEBUG] 2020-11-29 20:45:30.059 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@15e5e0e7
[DEBUG] 2020-11-29 20:45:30.060 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@15e5e0e7
[DEBUG] 2020-11-29 20:45:30.061 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@11d9acae
[DEBUG] 2020-11-29 20:45:30.077 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1f74b96f
[DEBUG] 2020-11-29 20:45:30.084 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4c2b51da
[DEBUG] 2020-11-29 20:45:30.084 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4c2b51da
[DEBUG] 2020-11-29 20:45:30.109 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@67a40cbf
[DEBUG] 2020-11-29 20:45:30.109 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@67a40cbf
[DEBUG] 2020-11-29 20:45:30.183 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@389fdc7f
[DEBUG] 2020-11-29 20:45:30.184 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@389fdc7f
[DEBUG] 2020-11-29 20:45:30.200 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4250009f
[DEBUG] 2020-11-29 20:45:30.201 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4250009f
[DEBUG] 2020-11-29 20:45:30.229 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5dd5dffd
[DEBUG] 2020-11-29 20:45:30.229 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5dd5dffd
[DEBUG] 2020-11-29 20:45:30.235 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@651ea803
[DEBUG] 2020-11-29 20:45:30.236 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@651ea803
[DEBUG] 2020-11-29 20:45:30.242 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@367f5a60
[DEBUG] 2020-11-29 20:45:30.243 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@367f5a60
[DEBUG] 2020-11-29 20:45:30.268 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5f60780c
[DEBUG] 2020-11-29 20:45:30.268 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5f60780c
[DEBUG] 2020-11-29 20:45:30.305 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@654b924c
[DEBUG] 2020-11-29 20:45:30.306 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@654b924c
[DEBUG] 2020-11-29 20:45:30.322 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@fcc13fa
[DEBUG] 2020-11-29 20:45:30.324 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@fcc13fa
[DEBUG] 2020-11-29 20:45:30.357 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@55c864b0
[DEBUG] 2020-11-29 20:45:30.357 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@55c864b0
[DEBUG] 2020-11-29 20:45:30.377 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7cf4ada
[DEBUG] 2020-11-29 20:45:30.377 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7cf4ada
[DEBUG] 2020-11-29 20:45:30.377 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7cf4ada
[DEBUG] 2020-11-29 20:45:30.404 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c5cc266
[DEBUG] 2020-11-29 20:45:30.420 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@32b8adbb
[DEBUG] 2020-11-29 20:45:30.423 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@32b8adbb
[DEBUG] 2020-11-29 20:45:30.423 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@32b8adbb
[DEBUG] 2020-11-29 20:45:30.437 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@728c3294
[DEBUG] 2020-11-29 20:45:30.447 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6950d70d
[DEBUG] 2020-11-29 20:45:30.447 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6950d70d
[DEBUG] 2020-11-29 20:45:30.459 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4f2d6568
[DEBUG] 2020-11-29 20:45:30.459 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f2d6568
[DEBUG] 2020-11-29 20:45:30.461 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16296c12
[DEBUG] 2020-11-29 20:45:30.461 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16296c12
[DEBUG] 2020-11-29 20:45:30.467 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2e639c49
[DEBUG] 2020-11-29 20:45:30.468 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e639c49
[DEBUG] 2020-11-29 20:45:30.476 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f48c59b
[DEBUG] 2020-11-29 20:45:30.477 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f48c59b
[DEBUG] 2020-11-29 20:45:30.480 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@34558d2
[DEBUG] 2020-11-29 20:45:30.524 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@b987a9f
[DEBUG] 2020-11-29 20:45:30.529 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@b987a9f
[DEBUG] 2020-11-29 20:45:30.529 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@b987a9f
[DEBUG] 2020-11-29 20:45:30.543 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4ac3aea6
[DEBUG] 2020-11-29 20:45:30.546 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4ac3aea6
[DEBUG] 2020-11-29 20:45:30.546 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4ac3aea6
[DEBUG] 2020-11-29 20:45:30.549 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2575b832
[DEBUG] 2020-11-29 20:45:30.566 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@708cc388
[DEBUG] 2020-11-29 20:45:30.581 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@15be1610
[DEBUG] 2020-11-29 20:45:30.582 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@15be1610
[DEBUG] 2020-11-29 20:45:30.582 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@15be1610
[DEBUG] 2020-11-29 20:45:30.597 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5caf4cb8
[DEBUG] 2020-11-29 20:45:30.598 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5caf4cb8
[DEBUG] 2020-11-29 20:45:30.603 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5caf4cb8
[DEBUG] 2020-11-29 20:45:30.607 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@59ab7c0d
[DEBUG] 2020-11-29 20:45:30.615 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5f65407b
[DEBUG] 2020-11-29 20:45:30.632 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@63f6351b
[DEBUG] 2020-11-29 20:45:30.633 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@63f6351b
[DEBUG] 2020-11-29 20:45:30.634 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7643d63d
[DEBUG] 2020-11-29 20:45:30.658 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4d78582c
[DEBUG] 2020-11-29 20:45:30.661 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4d78582c
[DEBUG] 2020-11-29 20:45:30.664 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2a27c206
[DEBUG] 2020-11-29 20:45:30.664 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2a27c206
[DEBUG] 2020-11-29 20:45:30.670 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5ca3df59
[DEBUG] 2020-11-29 20:45:30.679 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@273c6d2e
[DEBUG] 2020-11-29 20:45:30.720 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@dbc79e7
[DEBUG] 2020-11-29 20:45:30.816 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@301c4fa3
[DEBUG] 2020-11-29 20:45:30.817 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@301c4fa3
[DEBUG] 2020-11-29 20:45:30.818 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5674acad
[DEBUG] 2020-11-29 20:45:30.823 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@23e4eaa
[DEBUG] 2020-11-29 20:45:30.824 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7d9ee302
[DEBUG] 2020-11-29 20:45:30.834 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45b7eff2
[DEBUG] 2020-11-29 20:45:30.834 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3655322d
[DEBUG] 2020-11-29 20:45:30.834 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@46ee7153
[DEBUG] 2020-11-29 20:45:30.834 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c620c7f
[DEBUG] 2020-11-29 20:45:30.834 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3650b27e
[DEBUG] 2020-11-29 20:45:31.508 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-11-29 20:45:31.516 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-11-29 20:45:31.524 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-29 20:45:31.525 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-29 20:45:31.532 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-11-29 20:45:31.546 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-11-29 20:45:31.551 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-11-29 20:45:31.576 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-29 20:45:31.585 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-11-29 20:45:31.613 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-11-29 20:45:31.615 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-11-29 20:45:31.617 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-11-29 20:45:31.633 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-29 20:45:31.640 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-11-29 20:45:31.705 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/custom_crafts?serverTimezone=UTC
[INFO ] 2020-11-29 20:45:31.705 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-11-29 20:45:31.706 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-11-29 20:45:33.991 [http-nio-8080-exec-1] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-11-29 20:45:37.207 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-11-29 20:45:37.211 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-11-29 20:45:37.211 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-11-29 20:45:37.525 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-11-29 20:45:37.607 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-11-29 20:45:37.954 [http-nio-8080-exec-1] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-11-29 20:45:39.122 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-11-29 20:45:39.151 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@38607575] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37e49ada]
[DEBUG] 2020-11-29 20:45:39.672 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Product
[DEBUG] 2020-11-29 20:45:39.965 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-29 20:45:40.031 [http-nio-8080-exec-1] EntityBinder - Import with entity name Product
[DEBUG] 2020-11-29 20:45:40.060 [http-nio-8080-exec-1] EntityBinder - Bind entity edu.matc.entity.Product on table product
[DEBUG] 2020-11-29 20:45:40.342 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=item_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:40.421 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property itemId with lazy=false
[DEBUG] 2020-11-29 20:45:40.444 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:itemId]
[DEBUG] 2020-11-29 20:45:40.545 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for itemId
[DEBUG] 2020-11-29 20:45:40.603 [http-nio-8080-exec-1] PropertyBinder - Building property itemId
[DEBUG] 2020-11-29 20:45:40.692 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(item_id)]), itemId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-29 20:45:40.717 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=customizable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:40.719 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property customizable with lazy=false
[DEBUG] 2020-11-29 20:45:40.719 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:customizable]
[DEBUG] 2020-11-29 20:45:40.719 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for customizable
[DEBUG] 2020-11-29 20:45:40.720 [http-nio-8080-exec-1] PropertyBinder - Building property customizable
[DEBUG] 2020-11-29 20:45:40.740 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:40.741 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-11-29 20:45:40.741 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:description]
[DEBUG] 2020-11-29 20:45:40.741 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-11-29 20:45:40.743 [http-nio-8080-exec-1] PropertyBinder - Building property description
[DEBUG] 2020-11-29 20:45:40.762 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:40.765 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2020-11-29 20:45:40.768 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:image]
[DEBUG] 2020-11-29 20:45:40.772 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2020-11-29 20:45:40.772 [http-nio-8080-exec-1] PropertyBinder - Building property image
[DEBUG] 2020-11-29 20:45:40.772 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:40.773 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-11-29 20:45:40.773 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:price]
[DEBUG] 2020-11-29 20:45:40.773 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-11-29 20:45:40.773 [http-nio-8080-exec-1] PropertyBinder - Building property price
[DEBUG] 2020-11-29 20:45:40.773 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=production_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:40.773 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property productionCost with lazy=false
[DEBUG] 2020-11-29 20:45:40.773 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:productionCost]
[DEBUG] 2020-11-29 20:45:40.783 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for productionCost
[DEBUG] 2020-11-29 20:45:40.784 [http-nio-8080-exec-1] PropertyBinder - Building property productionCost
[DEBUG] 2020-11-29 20:45:40.793 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=tags, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:40.793 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property tags with lazy=false
[DEBUG] 2020-11-29 20:45:40.793 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:tags]
[DEBUG] 2020-11-29 20:45:40.793 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for tags
[DEBUG] 2020-11-29 20:45:40.793 [http-nio-8080-exec-1] PropertyBinder - Building property tags
[DEBUG] 2020-11-29 20:45:40.798 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:40.801 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-11-29 20:45:40.801 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:title]
[DEBUG] 2020-11-29 20:45:40.801 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-11-29 20:45:40.801 [http-nio-8080-exec-1] PropertyBinder - Building property title
[DEBUG] 2020-11-29 20:45:40.821 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-29 20:45:40.822 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.075 [http-nio-8080-exec-1] PropertyBinder - Building property user
[DEBUG] 2020-11-29 20:45:41.154 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-11-29 20:45:41.184 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-29 20:45:41.196 [http-nio-8080-exec-1] EntityBinder - Import with entity name User
[DEBUG] 2020-11-29 20:45:41.202 [http-nio-8080-exec-1] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2020-11-29 20:45:41.319 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.319 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-11-29 20:45:41.320 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-11-29 20:45:41.320 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-11-29 20:45:41.320 [http-nio-8080-exec-1] PropertyBinder - Building property userId
[DEBUG] 2020-11-29 20:45:41.320 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-29 20:45:41.320 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.320 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-11-29 20:45:41.321 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2020-11-29 20:45:41.323 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-11-29 20:45:41.324 [http-nio-8080-exec-1] PropertyBinder - Building property email
[DEBUG] 2020-11-29 20:45:41.324 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.324 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-11-29 20:45:41.324 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2020-11-29 20:45:41.324 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-11-29 20:45:41.324 [http-nio-8080-exec-1] PropertyBinder - Building property firstName
[DEBUG] 2020-11-29 20:45:41.324 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.337 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-11-29 20:45:41.339 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2020-11-29 20:45:41.340 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-11-29 20:45:41.343 [http-nio-8080-exec-1] PropertyBinder - Building property lastName
[DEBUG] 2020-11-29 20:45:41.346 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.346 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-11-29 20:45:41.346 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2020-11-29 20:45:41.350 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-11-29 20:45:41.351 [http-nio-8080-exec-1] PropertyBinder - Building property password
[DEBUG] 2020-11-29 20:45:41.352 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-29 20:45:41.352 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.361 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.625 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.631 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.649 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-29 20:45:41.684 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-29 20:45:41.687 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-29 20:45:41.692 [http-nio-8080-exec-1] CollectionBinder - Collection role: edu.matc.entity.User.products
[DEBUG] 2020-11-29 20:45:41.718 [http-nio-8080-exec-1] PropertyBinder - Building property products
[DEBUG] 2020-11-29 20:45:41.726 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-29 20:45:41.727 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.732 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.732 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.732 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.732 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-29 20:45:41.745 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-29 20:45:41.745 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-29 20:45:41.745 [http-nio-8080-exec-1] CollectionBinder - Collection role: edu.matc.entity.User.roles
[DEBUG] 2020-11-29 20:45:41.745 [http-nio-8080-exec-1] PropertyBinder - Building property roles
[DEBUG] 2020-11-29 20:45:41.746 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Role
[DEBUG] 2020-11-29 20:45:41.748 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-29 20:45:41.749 [http-nio-8080-exec-1] EntityBinder - Import with entity name Role
[DEBUG] 2020-11-29 20:45:41.749 [http-nio-8080-exec-1] EntityBinder - Bind entity edu.matc.entity.Role on table role
[DEBUG] 2020-11-29 20:45:41.786 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.789 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-29 20:45:41.790 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:id]
[DEBUG] 2020-11-29 20:45:41.800 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-29 20:45:41.800 [http-nio-8080-exec-1] PropertyBinder - Building property id
[DEBUG] 2020-11-29 20:45:41.801 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-29 20:45:41.801 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.801 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-11-29 20:45:41.801 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:email]
[DEBUG] 2020-11-29 20:45:41.803 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-11-29 20:45:41.804 [http-nio-8080-exec-1] PropertyBinder - Building property email
[DEBUG] 2020-11-29 20:45:41.815 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.815 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-11-29 20:45:41.816 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:roleName]
[DEBUG] 2020-11-29 20:45:41.816 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-11-29 20:45:41.816 [http-nio-8080-exec-1] PropertyBinder - Building property roleName
[DEBUG] 2020-11-29 20:45:41.817 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-29 20:45:41.827 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-29 20:45:41.829 [http-nio-8080-exec-1] PropertyBinder - Building property user
[DEBUG] 2020-11-29 20:45:41.833 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for itemId
[DEBUG] 2020-11-29 20:45:41.833 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for customizable
[DEBUG] 2020-11-29 20:45:41.835 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-11-29 20:45:41.835 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2020-11-29 20:45:41.835 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-11-29 20:45:41.836 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for productionCost
[DEBUG] 2020-11-29 20:45:41.836 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for tags
[DEBUG] 2020-11-29 20:45:41.837 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-11-29 20:45:41.843 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-11-29 20:45:41.844 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-11-29 20:45:41.847 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-11-29 20:45:41.848 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-11-29 20:45:41.859 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-11-29 20:45:41.860 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-29 20:45:41.860 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-11-29 20:45:41.860 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-11-29 20:45:41.917 [http-nio-8080-exec-1] PrimaryKey - Forcing column [item_id] to be non-null as it is part of the primary key for table [product]
[DEBUG] 2020-11-29 20:45:41.917 [http-nio-8080-exec-1] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-11-29 20:45:41.917 [http-nio-8080-exec-1] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-11-29 20:45:41.917 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: edu.matc.entity.User.products
[DEBUG] 2020-11-29 20:45:41.919 [http-nio-8080-exec-1] CollectionBinder - Binding a OneToMany: edu.matc.entity.User.products through a foreign key
[DEBUG] 2020-11-29 20:45:41.936 [http-nio-8080-exec-1] CollectionBinder - Mapping collection: edu.matc.entity.User.products -> product
[DEBUG] 2020-11-29 20:45:41.947 [http-nio-8080-exec-1] TableBinder - Retrieving property edu.matc.entity.Product.user
[DEBUG] 2020-11-29 20:45:41.947 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.matc.entity.Product
[DEBUG] 2020-11-29 20:45:41.947 [http-nio-8080-exec-1] CollectionSecondPass - Second pass for collection: edu.matc.entity.User.roles
[DEBUG] 2020-11-29 20:45:41.947 [http-nio-8080-exec-1] CollectionBinder - Binding a OneToMany: edu.matc.entity.User.roles through a foreign key
[DEBUG] 2020-11-29 20:45:41.948 [http-nio-8080-exec-1] CollectionBinder - Mapping collection: edu.matc.entity.User.roles -> role
[DEBUG] 2020-11-29 20:45:41.948 [http-nio-8080-exec-1] TableBinder - Retrieving property edu.matc.entity.Role.user
[DEBUG] 2020-11-29 20:45:41.951 [http-nio-8080-exec-1] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.matc.entity.Role
[DEBUG] 2020-11-29 20:45:41.951 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-11-29 20:45:41.956 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-11-29 20:45:41.959 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-11-29 20:45:41.960 [http-nio-8080-exec-1] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-11-29 20:45:42.320 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2020-11-29 20:45:42.325 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2020-11-29 20:45:42.326 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-11-29 20:45:42.326 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-11-29 20:45:42.326 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2020-11-29 20:45:42.326 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-11-29 20:45:42.330 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2020-11-29 20:45:42.331 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-11-29 20:45:42.331 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-11-29 20:45:42.331 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-11-29 20:45:42.331 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2020-11-29 20:45:42.331 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-11-29 20:45:42.331 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2020-11-29 20:45:42.332 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-11-29 20:45:42.332 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-11-29 20:45:42.332 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-11-29 20:45:42.332 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-11-29 20:45:42.332 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2020-11-29 20:45:42.332 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2020-11-29 20:45:42.332 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2020-11-29 20:45:42.332 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2020-11-29 20:45:42.332 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2020-11-29 20:45:42.332 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2020-11-29 20:45:42.332 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-11-29 20:45:42.332 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-11-29 20:45:42.332 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-11-29 20:45:42.332 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-11-29 20:45:42.341 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2020-11-29 20:45:42.342 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-11-29 20:45:42.347 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2020-11-29 20:45:42.347 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2020-11-29 20:45:42.347 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-11-29 20:45:42.348 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2020-11-29 20:45:42.348 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-11-29 20:45:42.348 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-11-29 20:45:42.348 [http-nio-8080-exec-1] Settings - JPA compliance - query : 
[DEBUG] 2020-11-29 20:45:42.348 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-11-29 20:45:42.350 [http-nio-8080-exec-1] Settings - JPA compliance - lists : 
[DEBUG] 2020-11-29 20:45:42.350 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : 
[INFO ] 2020-11-29 20:45:43.343 [http-nio-8080-exec-1] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-11-29 20:45:43.599 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-11-29 20:45:43.604 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-11-04, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_customCrafts/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_customCrafts/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.9.1+1-Ubuntu-0ubuntu1.18.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.9.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_customCrafts, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_customCrafts/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-53-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/custom_crafts?serverTimezone=UTC, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_customCrafts, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@9517395, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.9.1+1-Ubuntu-0ubuntu1.18.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/custom_crafts?serverTimezone=UTC, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-11-29 20:45:43.869 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-11-29 20:45:43.870 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-11-29 20:45:44.087 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Product] is safe
[DEBUG] 2020-11-29 20:45:44.089 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Product
[DEBUG] 2020-11-29 20:45:44.112 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Role] is safe
[DEBUG] 2020-11-29 20:45:44.112 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Role
[DEBUG] 2020-11-29 20:45:44.250 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-11-29 20:45:44.269 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-11-29 20:45:44.269 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@38607575] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4b4e32d9]
[DEBUG] 2020-11-29 20:45:45.087 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-11-29 20:45:45.087 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-11-29 20:45:45.467 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-11-29 20:45:45.474 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-11-29 20:45:49.291 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Product] is safe
[DEBUG] 2020-11-29 20:45:49.291 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Product
[DEBUG] 2020-11-29 20:45:49.297 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Product] is safe
[DEBUG] 2020-11-29 20:45:49.297 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Product
[DEBUG] 2020-11-29 20:45:49.786 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Role] is safe
[DEBUG] 2020-11-29 20:45:49.787 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Role
[DEBUG] 2020-11-29 20:45:49.799 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Role] is safe
[DEBUG] 2020-11-29 20:45:49.799 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Role
[DEBUG] 2020-11-29 20:45:50.035 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: edu.matc.entity.User.products
[DEBUG] 2020-11-29 20:45:50.038 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: update product set user_id=? where item_id=?
[DEBUG] 2020-11-29 20:45:50.038 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update product set  where item_id=?
[DEBUG] 2020-11-29 20:45:50.038 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: update product set user_id=null where user_id=? and item_id=?
[DEBUG] 2020-11-29 20:45:50.039 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: update product set user_id=null where user_id=?
[DEBUG] 2020-11-29 20:45:50.040 [http-nio-8080-exec-1] AbstractCollectionPersister - Static SQL for collection: edu.matc.entity.User.roles
[DEBUG] 2020-11-29 20:45:50.041 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2020-11-29 20:45:50.042 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2020-11-29 20:45:50.042 [http-nio-8080-exec-1] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2020-11-29 20:45:50.052 [http-nio-8080-exec-1] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2020-11-29 20:45:50.076 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.User
[DEBUG] 2020-11-29 20:45:50.077 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select user_id from user where user_id =?
[DEBUG] 2020-11-29 20:45:50.077 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_ from user user_ where user_.user_id=?
[DEBUG] 2020-11-29 20:45:50.077 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-11-29 20:45:50.078 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=? where user_id=?
[DEBUG] 2020-11-29 20:45:50.081 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from user where user_id=?
[DEBUG] 2020-11-29 20:45:50.083 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password) values (?, ?, ?, ?)
[DEBUG] 2020-11-29 20:45:50.209 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70eb27c6]
[DEBUG] 2020-11-29 20:45:50.218 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-29 20:45:50.218 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-11-29 20:45:50.218 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-11-29 20:45:50.218 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-11-29 20:45:50.218 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products
[DEBUG] 2020-11-29 20:45:50.249 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c110819]
[DEBUG] 2020-11-29 20:45:50.267 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b4c071f]
[DEBUG] 2020-11-29 20:45:50.269 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.customizable
[DEBUG] 2020-11-29 20:45:50.270 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.description
[DEBUG] 2020-11-29 20:45:50.270 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.image
[DEBUG] 2020-11-29 20:45:50.270 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.price
[DEBUG] 2020-11-29 20:45:50.274 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.productionCost
[DEBUG] 2020-11-29 20:45:50.274 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.tags
[DEBUG] 2020-11-29 20:45:50.274 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.title
[DEBUG] 2020-11-29 20:45:50.275 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.user
[DEBUG] 2020-11-29 20:45:50.275 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : products.user
[DEBUG] 2020-11-29 20:45:50.289 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-11-29 20:45:50.289 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4455dc5a]
[DEBUG] 2020-11-29 20:45:50.289 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a354234]
[DEBUG] 2020-11-29 20:45:50.289 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.email
[DEBUG] 2020-11-29 20:45:50.289 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-11-29 20:45:50.290 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-11-29 20:45:50.290 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-11-29 20:45:50.291 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-29 20:45:50.367 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-29 20:45:50.402 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:1>, path=edu.matc.entity.User.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:2>, path=edu.matc.entity.User.products.<elements>)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.roles, querySpaceUid=<gen:3>, path=edu.matc.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Role, querySpaceUid=<gen:4>, path=edu.matc.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(products)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.products)
                - SQL table alias mapping - products1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - item_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Product)
                      - SQL table alias mapping - products1_
                      - alias suffix - 2_
                      - suffixed key columns - {item_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.matc.entity.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 3_
                - suffixed key columns - {user_id4_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.matc.entity.Role)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}

[DEBUG] 2020-11-29 20:45:50.406 [http-nio-8080-exec-1] EntityLoader - Static select for entity edu.matc.entity.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, products1_.user_id as user_id9_0_1_, products1_.item_id as item_id1_0_1_, products1_.item_id as item_id1_0_2_, products1_.customizable as customiz2_0_2_, products1_.description as descript3_0_2_, products1_.image as image4_0_2_, products1_.price as price5_0_2_, products1_.production_cost as producti6_0_2_, products1_.tags as tags7_0_2_, products1_.title as title8_0_2_, products1_.user_id as user_id9_0_2_, roles2_.user_id as user_id4_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.email as email2_1_4_, roles2_.role_name as role_nam3_1_4_, roles2_.user_id as user_id4_1_4_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id left outer join role roles2_ on user0_.user_id=roles2_.user_id where user0_.user_id=?
[DEBUG] 2020-11-29 20:45:50.409 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dd318a3]
[DEBUG] 2020-11-29 20:45:50.409 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-29 20:45:50.409 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-11-29 20:45:50.409 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-11-29 20:45:50.409 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-11-29 20:45:50.409 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products
[DEBUG] 2020-11-29 20:45:50.410 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2801be0a]
[DEBUG] 2020-11-29 20:45:50.410 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@580bf22c]
[DEBUG] 2020-11-29 20:45:50.423 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.customizable
[DEBUG] 2020-11-29 20:45:50.423 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.description
[DEBUG] 2020-11-29 20:45:50.425 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.image
[DEBUG] 2020-11-29 20:45:50.425 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.price
[DEBUG] 2020-11-29 20:45:50.426 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.productionCost
[DEBUG] 2020-11-29 20:45:50.426 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.tags
[DEBUG] 2020-11-29 20:45:50.426 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.title
[DEBUG] 2020-11-29 20:45:50.426 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : products.user
[DEBUG] 2020-11-29 20:45:50.426 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : products.user
[DEBUG] 2020-11-29 20:45:50.427 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-11-29 20:45:50.427 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c863208]
[DEBUG] 2020-11-29 20:45:50.430 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b9b2726]
[DEBUG] 2020-11-29 20:45:50.431 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.email
[DEBUG] 2020-11-29 20:45:50.431 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-11-29 20:45:50.431 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-11-29 20:45:50.431 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-11-29 20:45:50.431 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-29 20:45:50.432 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-29 20:45:50.435 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:1>, path=edu.matc.entity.User.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:2>, path=edu.matc.entity.User.products.<elements>)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.roles, querySpaceUid=<gen:3>, path=edu.matc.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Role, querySpaceUid=<gen:4>, path=edu.matc.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(products)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.products)
                - SQL table alias mapping - products1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - item_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Product)
                      - SQL table alias mapping - products1_
                      - alias suffix - 2_
                      - suffixed key columns - {item_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.matc.entity.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 3_
                - suffixed key columns - {user_id4_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.matc.entity.Role)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}

[DEBUG] 2020-11-29 20:45:50.437 [http-nio-8080-exec-1] EntityLoader - Static select for entity edu.matc.entity.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, products1_.user_id as user_id9_0_1_, products1_.item_id as item_id1_0_1_, products1_.item_id as item_id1_0_2_, products1_.customizable as customiz2_0_2_, products1_.description as descript3_0_2_, products1_.image as image4_0_2_, products1_.price as price5_0_2_, products1_.production_cost as producti6_0_2_, products1_.tags as tags7_0_2_, products1_.title as title8_0_2_, products1_.user_id as user_id9_0_2_, roles2_.user_id as user_id4_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.email as email2_1_4_, roles2_.role_name as role_nam3_1_4_, roles2_.user_id as user_id4_1_4_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id left outer join role roles2_ on user0_.user_id=roles2_.user_id where user0_.user_id=?
[DEBUG] 2020-11-29 20:45:50.513 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, products1_.user_id as user_id9_0_3_, products1_.item_id as item_id1_0_3_, products1_.item_id as item_id1_0_0_, products1_.customizable as customiz2_0_0_, products1_.description as descript3_0_0_, products1_.image as image4_0_0_, products1_.price as price5_0_0_, products1_.production_cost as producti6_0_0_, products1_.tags as tags7_0_0_, products1_.title as title8_0_0_, products1_.user_id as user_id9_0_0_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-11-29 20:45:50.516 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, products1_.user_id as user_id9_0_3_, products1_.item_id as item_id1_0_3_, products1_.item_id as item_id1_0_0_, products1_.customizable as customiz2_0_0_, products1_.description as descript3_0_0_, products1_.image as image4_0_0_, products1_.price as price5_0_0_, products1_.production_cost as producti6_0_0_, products1_.tags as tags7_0_0_, products1_.title as title8_0_0_, products1_.user_id as user_id9_0_0_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-11-29 20:45:50.518 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Product
[DEBUG] 2020-11-29 20:45:50.518 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select item_id from product where item_id =?
[DEBUG] 2020-11-29 20:45:50.518 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select product_.item_id, product_.customizable as customiz2_0_, product_.description as descript3_0_, product_.image as image4_0_, product_.price as price5_0_, product_.production_cost as producti6_0_, product_.tags as tags7_0_, product_.title as title8_0_, product_.user_id as user_id9_0_ from product product_ where product_.item_id=?
[DEBUG] 2020-11-29 20:45:50.518 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into product (customizable, description, image, price, production_cost, tags, title, user_id, item_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-11-29 20:45:50.518 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update product set customizable=?, description=?, image=?, price=?, production_cost=?, tags=?, title=?, user_id=? where item_id=?
[DEBUG] 2020-11-29 20:45:50.518 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from product where item_id=?
[DEBUG] 2020-11-29 20:45:50.518 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into product (customizable, description, image, price, production_cost, tags, title, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-11-29 20:45:50.518 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27c36657]
[DEBUG] 2020-11-29 20:45:50.518 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-11-29 20:45:50.518 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-29 20:45:50.519 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-11-29 20:45:50.519 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-29 20:45:50.519 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-11-29 20:45:50.519 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-11-29 20:45:50.519 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-11-29 20:45:50.519 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-29 20:45:50.519 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1db934b5]
[DEBUG] 2020-11-29 20:45:50.520 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-29 20:45:50.520 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-11-29 20:45:50.521 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-11-29 20:45:50.521 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-11-29 20:45:50.521 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products
[DEBUG] 2020-11-29 20:45:50.521 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.products
[DEBUG] 2020-11-29 20:45:50.521 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-29 20:45:50.525 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f351e90]
[DEBUG] 2020-11-29 20:45:50.525 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24c5e5d5]
[DEBUG] 2020-11-29 20:45:50.525 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.email
[DEBUG] 2020-11-29 20:45:50.526 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-11-29 20:45:50.526 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-11-29 20:45:50.526 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-11-29 20:45:50.526 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-29 20:45:50.527 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-29 20:45:50.538 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Product)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Product, querySpaceUid=<gen:0>, path=edu.matc.entity.Product)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Product.user)
             - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.roles, querySpaceUid=<gen:2>, path=edu.matc.entity.Product.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Role, querySpaceUid=<gen:3>, path=edu.matc.entity.Product.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {item_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=edu.matc.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id4_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.matc.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

[DEBUG] 2020-11-29 20:45:50.539 [http-nio-8080-exec-1] EntityLoader - Static select for entity edu.matc.entity.Product [NONE]: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, roles2_.user_id as user_id4_1_2_, roles2_.id as id1_1_2_, roles2_.id as id1_1_3_, roles2_.email as email2_1_3_, roles2_.role_name as role_nam3_1_3_, roles2_.user_id as user_id4_1_3_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id left outer join role roles2_ on user1_.user_id=roles2_.user_id where product0_.item_id=?
[DEBUG] 2020-11-29 20:45:50.540 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1098a166]
[DEBUG] 2020-11-29 20:45:50.541 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-11-29 20:45:50.541 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-29 20:45:50.541 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-11-29 20:45:50.541 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-29 20:45:50.541 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-11-29 20:45:50.541 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-11-29 20:45:50.541 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-11-29 20:45:50.541 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-29 20:45:50.542 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61bc4dfd]
[DEBUG] 2020-11-29 20:45:50.542 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-29 20:45:50.542 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-11-29 20:45:50.542 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-11-29 20:45:50.542 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-11-29 20:45:50.542 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products
[DEBUG] 2020-11-29 20:45:50.542 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.products
[DEBUG] 2020-11-29 20:45:50.542 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-29 20:45:50.542 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4704dac]
[DEBUG] 2020-11-29 20:45:50.542 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ffcf7b2]
[DEBUG] 2020-11-29 20:45:50.542 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.email
[DEBUG] 2020-11-29 20:45:50.542 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-11-29 20:45:50.542 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-11-29 20:45:50.542 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-11-29 20:45:50.543 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-29 20:45:50.543 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-29 20:45:50.547 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Product)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Product, querySpaceUid=<gen:0>, path=edu.matc.entity.Product)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Product.user)
             - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.roles, querySpaceUid=<gen:2>, path=edu.matc.entity.Product.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Role, querySpaceUid=<gen:3>, path=edu.matc.entity.Product.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {item_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=edu.matc.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id4_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.matc.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

[DEBUG] 2020-11-29 20:45:50.547 [http-nio-8080-exec-1] EntityLoader - Static select for entity edu.matc.entity.Product [READ]: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, roles2_.user_id as user_id4_1_2_, roles2_.id as id1_1_2_, roles2_.id as id1_1_3_, roles2_.email as email2_1_3_, roles2_.role_name as role_nam3_1_3_, roles2_.user_id as user_id4_1_3_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id left outer join role roles2_ on user1_.user_id=roles2_.user_id where product0_.item_id=?
[DEBUG] 2020-11-29 20:45:50.548 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Product: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_ from product product0_ where product0_.item_id=?
[DEBUG] 2020-11-29 20:45:50.558 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Product: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_ from product product0_ where product0_.item_id=?
[DEBUG] 2020-11-29 20:45:50.558 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Role
[DEBUG] 2020-11-29 20:45:50.561 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2020-11-29 20:45:50.561 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select role_.id, role_.email as email2_1_, role_.role_name as role_nam3_1_, role_.user_id as user_id4_1_ from role role_ where role_.id=?
[DEBUG] 2020-11-29 20:45:50.561 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into role (email, role_name, user_id, id) values (?, ?, ?, ?)
[DEBUG] 2020-11-29 20:45:50.563 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update role set email=?, role_name=?, user_id=? where id=?
[DEBUG] 2020-11-29 20:45:50.565 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2020-11-29 20:45:50.565 [http-nio-8080-exec-1] AbstractEntityPersister -  Identity insert: insert into role (email, role_name, user_id) values (?, ?, ?)
[DEBUG] 2020-11-29 20:45:50.565 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@394986ab]
[DEBUG] 2020-11-29 20:45:50.565 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-29 20:45:50.565 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-29 20:45:50.565 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-29 20:45:50.565 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39746956]
[DEBUG] 2020-11-29 20:45:50.565 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-29 20:45:50.566 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-11-29 20:45:50.566 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-11-29 20:45:50.566 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-11-29 20:45:50.566 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products
[DEBUG] 2020-11-29 20:45:50.566 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@668b330c]
[DEBUG] 2020-11-29 20:45:50.566 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6205aa85]
[DEBUG] 2020-11-29 20:45:50.566 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.customizable
[DEBUG] 2020-11-29 20:45:50.566 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.description
[DEBUG] 2020-11-29 20:45:50.566 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.image
[DEBUG] 2020-11-29 20:45:50.566 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.price
[DEBUG] 2020-11-29 20:45:50.566 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.productionCost
[DEBUG] 2020-11-29 20:45:50.566 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.tags
[DEBUG] 2020-11-29 20:45:50.567 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.title
[DEBUG] 2020-11-29 20:45:50.567 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.user
[DEBUG] 2020-11-29 20:45:50.567 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.products.user
[DEBUG] 2020-11-29 20:45:50.567 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-29 20:45:50.575 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-11-29 20:45:50.576 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-29 20:45:50.576 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-29 20:45:50.590 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Role)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Role, querySpaceUid=<gen:0>, path=edu.matc.entity.Role)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:2>, path=edu.matc.entity.Role.user.products)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:3>, path=edu.matc.entity.Role.user.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(products)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=edu.matc.entity.User.products)
                      - SQL table alias mapping - products2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id9_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - item_id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.matc.entity.Product)
                            - SQL table alias mapping - products2_
                            - alias suffix - 3_
                            - suffixed key columns - {item_id1_0_3_}

[DEBUG] 2020-11-29 20:45:50.591 [http-nio-8080-exec-1] EntityLoader - Static select for entity edu.matc.entity.Role [NONE]: select role0_.id as id1_1_0_, role0_.email as email2_1_0_, role0_.role_name as role_nam3_1_0_, role0_.user_id as user_id4_1_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, products2_.user_id as user_id9_0_2_, products2_.item_id as item_id1_0_2_, products2_.item_id as item_id1_0_3_, products2_.customizable as customiz2_0_3_, products2_.description as descript3_0_3_, products2_.image as image4_0_3_, products2_.price as price5_0_3_, products2_.production_cost as producti6_0_3_, products2_.tags as tags7_0_3_, products2_.title as title8_0_3_, products2_.user_id as user_id9_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.user_id left outer join product products2_ on user1_.user_id=products2_.user_id where role0_.id=?
[DEBUG] 2020-11-29 20:45:50.591 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4090d0a4]
[DEBUG] 2020-11-29 20:45:50.591 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-29 20:45:50.591 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-29 20:45:50.591 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-29 20:45:50.593 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d57301b]
[DEBUG] 2020-11-29 20:45:50.593 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-29 20:45:50.593 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-11-29 20:45:50.593 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-11-29 20:45:50.593 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-11-29 20:45:50.593 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@205b7d47]
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ff7296e]
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.customizable
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.description
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.image
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.price
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.productionCost
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.tags
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.title
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.products.user
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.products.user
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-29 20:45:50.594 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-29 20:45:50.611 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Role)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Role, querySpaceUid=<gen:0>, path=edu.matc.entity.Role)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:2>, path=edu.matc.entity.Role.user.products)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:3>, path=edu.matc.entity.Role.user.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(products)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=edu.matc.entity.User.products)
                      - SQL table alias mapping - products2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id9_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - item_id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.matc.entity.Product)
                            - SQL table alias mapping - products2_
                            - alias suffix - 3_
                            - suffixed key columns - {item_id1_0_3_}

[DEBUG] 2020-11-29 20:45:50.612 [http-nio-8080-exec-1] EntityLoader - Static select for entity edu.matc.entity.Role [READ]: select role0_.id as id1_1_0_, role0_.email as email2_1_0_, role0_.role_name as role_nam3_1_0_, role0_.user_id as user_id4_1_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, products2_.user_id as user_id9_0_2_, products2_.item_id as item_id1_0_2_, products2_.item_id as item_id1_0_3_, products2_.customizable as customiz2_0_3_, products2_.description as descript3_0_3_, products2_.image as image4_0_3_, products2_.price as price5_0_3_, products2_.production_cost as producti6_0_3_, products2_.tags as tags7_0_3_, products2_.title as title8_0_3_, products2_.user_id as user_id9_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.user_id left outer join product products2_ on user1_.user_id=products2_.user_id where role0_.id=?
[DEBUG] 2020-11-29 20:45:50.618 [http-nio-8080-exec-1] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Role: select role0_.id as id1_1_0_, role0_.email as email2_1_0_, role0_.role_name as role_nam3_1_0_, role0_.user_id as user_id4_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-11-29 20:45:50.618 [http-nio-8080-exec-1] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Role: select role0_.id as id1_1_0_, role0_.email as email2_1_0_, role0_.role_name as role_nam3_1_0_, role0_.user_id as user_id4_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-11-29 20:45:50.664 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c09938b]
[DEBUG] 2020-11-29 20:45:50.664 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4da56f00]
[DEBUG] 2020-11-29 20:45:50.665 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-11-29 20:45:50.665 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-29 20:45:50.665 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-11-29 20:45:50.665 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-29 20:45:50.666 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-11-29 20:45:50.666 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-11-29 20:45:50.666 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-11-29 20:45:50.666 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-29 20:45:50.666 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-11-29 20:45:50.666 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-29 20:45:50.678 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-29 20:45:50.678 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=edu.matc.entity.User.products)
    - Returns
       - CollectionReturnImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:0>, path=[edu.matc.entity.User.products])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:1>, path=[edu.matc.entity.User.products].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.matc.entity.User.products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {user_id9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - item_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Product)
                - SQL table alias mapping - products0_
                - alias suffix - 1_
                - suffixed key columns - {item_id1_0_1_}

[DEBUG] 2020-11-29 20:45:50.679 [http-nio-8080-exec-1] CollectionLoader - Static select for collection edu.matc.entity.User.products: select products0_.user_id as user_id9_0_0_, products0_.item_id as item_id1_0_0_, products0_.item_id as item_id1_0_1_, products0_.customizable as customiz2_0_1_, products0_.description as descript3_0_1_, products0_.image as image4_0_1_, products0_.price as price5_0_1_, products0_.production_cost as producti6_0_1_, products0_.tags as tags7_0_1_, products0_.title as title8_0_1_, products0_.user_id as user_id9_0_1_ from product products0_ where products0_.user_id=?
[DEBUG] 2020-11-29 20:45:50.679 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72d3e517]
[DEBUG] 2020-11-29 20:45:50.679 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54b4d3e9]
[DEBUG] 2020-11-29 20:45:50.679 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-29 20:45:50.680 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-29 20:45:50.680 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-29 20:45:50.680 [http-nio-8080-exec-1] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-11-29 20:45:50.681 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-29 20:45:50.681 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-29 20:45:50.681 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(collection=edu.matc.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=edu.matc.entity.User.roles, querySpaceUid=<gen:0>, path=[edu.matc.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Role, querySpaceUid=<gen:1>, path=[edu.matc.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.matc.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-11-29 20:45:50.682 [http-nio-8080-exec-1] CollectionLoader - Static select for collection edu.matc.entity.User.roles: select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.email as email2_1_1_, roles0_.role_name as role_nam3_1_1_, roles0_.user_id as user_id4_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-29 20:45:51.054 [http-nio-8080-exec-1] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-11-29 20:45:51.063 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-11-29 20:45:51.088 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-11-29 20:45:51.260 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-11-29 20:45:51.264 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-11-29 20:45:51.273 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-11-29 20:45:51.275 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-11-29 20:45:51.294 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@26329893
[DEBUG] 2020-11-29 20:45:51.325 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: 4b290fbb-4d4d-4a53-ab8d-a3f7294484b2 (<unnamed>)
[DEBUG] 2020-11-29 20:45:51.325 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-11-29 20:45:52.067 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-11-29 20:45:52.337 [http-nio-8080-exec-1] SQL - select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, roles2_.user_id as user_id4_1_2_, roles2_.id as id1_1_2_, roles2_.id as id1_1_3_, roles2_.email as email2_1_3_, roles2_.role_name as role_nam3_1_3_, roles2_.user_id as user_id4_1_3_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id left outer join role roles2_ on user1_.user_id=roles2_.user_id where product0_.item_id=?
[DEBUG] 2020-11-29 20:45:52.991 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-29 20:45:53.145 [http-nio-8080-exec-1] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-29 20:45:53.721 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-29 20:45:54.128 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#1]
[DEBUG] 2020-11-29 20:45:54.195 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-29 20:45:54.196 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.203 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `description` : value = 2020 Wooden Ornaments with white ribbon
[DEBUG] 2020-11-29 20:45:54.203 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.203 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `image` : value = 2020Ornaments.jpg
[DEBUG] 2020-11-29 20:45:54.203 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.203 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `price` : value = $5
[DEBUG] 2020-11-29 20:45:54.203 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.203 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `productionCost` : value = $1
[DEBUG] 2020-11-29 20:45:54.203 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.203 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `tags` : value = #ornaments
[DEBUG] 2020-11-29 20:45:54.204 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.204 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `title` : value = 2020 Wooden Ornaments
[DEBUG] 2020-11-29 20:45:54.204 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.204 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-29 20:45:54.204 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.250 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#1]
[DEBUG] 2020-11-29 20:45:54.250 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-11-29 20:45:54.251 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = esajdak@madisoncollege.edu
[DEBUG] 2020-11-29 20:45:54.251 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.252 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Elizabeth
[DEBUG] 2020-11-29 20:45:54.252 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.252 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Sajdak
[DEBUG] 2020-11-29 20:45:54.252 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.252 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-11-29 20:45:54.252 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.252 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `products` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-29 20:45:54.252 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`products`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.327 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-29 20:45:54.327 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.346 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-11-29 20:45:54.354 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Role#1]
[DEBUG] 2020-11-29 20:45:54.354 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = esajdak@madisoncollege.edu
[DEBUG] 2020-11-29 20:45:54.355 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.355 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2020-11-29 20:45:54.355 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.355 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-29 20:45:54.359 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:45:54.364 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Role#1]
[DEBUG] 2020-11-29 20:45:54.394 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.roles
[DEBUG] 2020-11-29 20:45:54.416 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-29 20:45:54.470 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.roles
[DEBUG] 2020-11-29 20:45:54.488 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-29 20:45:54.567 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-29 20:45:54.568 [http-nio-8080-exec-1] SQL - select products0_.user_id as user_id9_0_0_, products0_.item_id as item_id1_0_0_, products0_.item_id as item_id1_0_1_, products0_.customizable as customiz2_0_1_, products0_.description as descript3_0_1_, products0_.image as image4_0_1_, products0_.price as price5_0_1_, products0_.production_cost as producti6_0_1_, products0_.tags as tags7_0_1_, products0_.title as title8_0_1_, products0_.user_id as user_id9_0_1_ from product products0_ where products0_.user_id=?
[DEBUG] 2020-11-29 20:45:54.588 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-29 20:45:54.589 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-29 20:45:54.609 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-29 20:45:54.613 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.products
[DEBUG] 2020-11-29 20:45:54.614 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-29 20:45:54.619 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.products
[DEBUG] 2020-11-29 20:45:54.619 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-29 20:45:54.620 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-29 20:45:54.621 [http-nio-8080-exec-1] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Product#1
[DEBUG] 2020-11-29 20:45:54.621 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-29 20:46:50.715 [http-nio-8080-exec-10] SQL - select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, roles2_.user_id as user_id4_1_2_, roles2_.id as id1_1_2_, roles2_.id as id1_1_3_, roles2_.email as email2_1_3_, roles2_.role_name as role_nam3_1_3_, roles2_.user_id as user_id4_1_3_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id left outer join role roles2_ on user1_.user_id=roles2_.user_id where product0_.item_id=?
[DEBUG] 2020-11-29 20:46:50.730 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-29 20:46:50.737 [http-nio-8080-exec-10] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-29 20:46:50.743 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-29 20:46:50.744 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#1]
[DEBUG] 2020-11-29 20:46:50.744 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-29 20:46:50.744 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.744 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `description` : value = 2020 Wooden Ornaments with white ribbon
[DEBUG] 2020-11-29 20:46:50.744 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.744 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `image` : value = 2020Ornaments.jpg
[DEBUG] 2020-11-29 20:46:50.744 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.744 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `price` : value = $5
[DEBUG] 2020-11-29 20:46:50.752 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.753 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `productionCost` : value = $1
[DEBUG] 2020-11-29 20:46:50.756 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.757 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `tags` : value = #ornaments
[DEBUG] 2020-11-29 20:46:50.757 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.757 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `title` : value = 2020 Wooden Ornaments
[DEBUG] 2020-11-29 20:46:50.757 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.757 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-29 20:46:50.757 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.761 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#1]
[DEBUG] 2020-11-29 20:46:50.761 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-11-29 20:46:50.761 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = esajdak@madisoncollege.edu
[DEBUG] 2020-11-29 20:46:50.761 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.761 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Elizabeth
[DEBUG] 2020-11-29 20:46:50.761 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Sajdak
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `products` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`products`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Role#1]
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = esajdak@madisoncollege.edu
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Role#1]
[DEBUG] 2020-11-29 20:46:50.762 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.roles
[DEBUG] 2020-11-29 20:46:50.770 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-29 20:46:50.770 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.roles
[DEBUG] 2020-11-29 20:46:50.770 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-29 20:46:50.770 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-29 20:46:50.770 [http-nio-8080-exec-10] SQL - select products0_.user_id as user_id9_0_0_, products0_.item_id as item_id1_0_0_, products0_.item_id as item_id1_0_1_, products0_.customizable as customiz2_0_1_, products0_.description as descript3_0_1_, products0_.image as image4_0_1_, products0_.price as price5_0_1_, products0_.production_cost as producti6_0_1_, products0_.tags as tags7_0_1_, products0_.title as title8_0_1_, products0_.user_id as user_id9_0_1_ from product products0_ where products0_.user_id=?
[DEBUG] 2020-11-29 20:46:50.776 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-29 20:46:50.778 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-29 20:46:50.778 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-29 20:46:50.779 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.products
[DEBUG] 2020-11-29 20:46:50.779 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-29 20:46:50.779 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.products
[DEBUG] 2020-11-29 20:46:50.781 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-29 20:46:50.784 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-11-29 20:46:50.785 [http-nio-8080-exec-10] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.Product#1
[DEBUG] 2020-11-29 20:46:50.785 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
