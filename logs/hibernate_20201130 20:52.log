[DEBUG] 2020-11-30 20:52:13.407 [http-nio-8080-exec-8] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-11-30 20:52:13.428 [http-nio-8080-exec-8] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-11-30 20:52:13.442 [http-nio-8080-exec-8] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-11-30 20:52:13.703 [http-nio-8080-exec-8] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-11-30 20:52:13.714 [http-nio-8080-exec-8] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-11-30 20:52:14.216 [http-nio-8080-exec-8] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-11-30 20:52:14.219 [http-nio-8080-exec-8] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-11-30 20:52:14.286 [http-nio-8080-exec-8] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-11-30 20:52:15.328 [http-nio-8080-exec-8] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-11-30 20:52:15.387 [http-nio-8080-exec-8] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-11-30 20:52:15.394 [http-nio-8080-exec-8] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-11-30 20:52:15.438 [http-nio-8080-exec-8] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-11-30 20:52:15.531 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3beebde2
[DEBUG] 2020-11-30 20:52:15.532 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3beebde2
[DEBUG] 2020-11-30 20:52:15.532 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3beebde2
[DEBUG] 2020-11-30 20:52:15.533 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@42d5dd14
[DEBUG] 2020-11-30 20:52:15.534 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6a0cb054
[DEBUG] 2020-11-30 20:52:15.535 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@50b90e12
[DEBUG] 2020-11-30 20:52:15.537 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1c5caaca
[DEBUG] 2020-11-30 20:52:15.538 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1c5caaca
[DEBUG] 2020-11-30 20:52:15.538 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1c5caaca
[DEBUG] 2020-11-30 20:52:15.539 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@42f6d6c2
[DEBUG] 2020-11-30 20:52:15.540 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@42f6d6c2
[DEBUG] 2020-11-30 20:52:15.541 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@42f6d6c2
[DEBUG] 2020-11-30 20:52:15.543 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6c9a2302
[DEBUG] 2020-11-30 20:52:15.543 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6c9a2302
[DEBUG] 2020-11-30 20:52:15.543 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6c9a2302
[DEBUG] 2020-11-30 20:52:15.544 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@d260e23
[DEBUG] 2020-11-30 20:52:15.544 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@d260e23
[DEBUG] 2020-11-30 20:52:15.544 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@d260e23
[DEBUG] 2020-11-30 20:52:15.546 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6ef04741
[DEBUG] 2020-11-30 20:52:15.546 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6ef04741
[DEBUG] 2020-11-30 20:52:15.546 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6ef04741
[DEBUG] 2020-11-30 20:52:15.547 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4f1416d0
[DEBUG] 2020-11-30 20:52:15.549 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4f1416d0
[DEBUG] 2020-11-30 20:52:15.550 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4f1416d0
[DEBUG] 2020-11-30 20:52:15.551 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@32c358dc
[DEBUG] 2020-11-30 20:52:15.551 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@32c358dc
[DEBUG] 2020-11-30 20:52:15.551 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@32c358dc
[DEBUG] 2020-11-30 20:52:15.552 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@77f0199f
[DEBUG] 2020-11-30 20:52:15.552 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@77f0199f
[DEBUG] 2020-11-30 20:52:15.554 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@251ff47e
[DEBUG] 2020-11-30 20:52:15.555 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@251ff47e
[DEBUG] 2020-11-30 20:52:15.557 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4a3f8c49
[DEBUG] 2020-11-30 20:52:15.557 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4a3f8c49
[DEBUG] 2020-11-30 20:52:15.558 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4512af76
[DEBUG] 2020-11-30 20:52:15.558 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@475020ff
[DEBUG] 2020-11-30 20:52:15.560 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@47a4f5d0
[DEBUG] 2020-11-30 20:52:15.560 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47a4f5d0
[DEBUG] 2020-11-30 20:52:15.562 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4475e00c
[DEBUG] 2020-11-30 20:52:15.562 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4475e00c
[DEBUG] 2020-11-30 20:52:15.571 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7f30ac26
[DEBUG] 2020-11-30 20:52:15.571 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7f30ac26
[DEBUG] 2020-11-30 20:52:15.573 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2c88a2c7
[DEBUG] 2020-11-30 20:52:15.576 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2c88a2c7
[DEBUG] 2020-11-30 20:52:15.578 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2970dc0f
[DEBUG] 2020-11-30 20:52:15.579 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2970dc0f
[DEBUG] 2020-11-30 20:52:15.580 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@62da5e2
[DEBUG] 2020-11-30 20:52:15.581 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@62da5e2
[DEBUG] 2020-11-30 20:52:16.534 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@68306dd9
[DEBUG] 2020-11-30 20:52:16.535 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@68306dd9
[DEBUG] 2020-11-30 20:52:16.538 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3bd2b812
[DEBUG] 2020-11-30 20:52:16.538 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3bd2b812
[DEBUG] 2020-11-30 20:52:16.540 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@401a2795
[DEBUG] 2020-11-30 20:52:16.540 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@401a2795
[DEBUG] 2020-11-30 20:52:16.542 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@c5b47c3
[DEBUG] 2020-11-30 20:52:16.543 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@c5b47c3
[DEBUG] 2020-11-30 20:52:16.544 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3e62b1ab
[DEBUG] 2020-11-30 20:52:16.544 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e62b1ab
[DEBUG] 2020-11-30 20:52:16.546 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@b9658d0
[DEBUG] 2020-11-30 20:52:16.546 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@b9658d0
[DEBUG] 2020-11-30 20:52:16.546 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@b9658d0
[DEBUG] 2020-11-30 20:52:16.548 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c322ca3
[DEBUG] 2020-11-30 20:52:16.550 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3bb31574
[DEBUG] 2020-11-30 20:52:16.550 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3bb31574
[DEBUG] 2020-11-30 20:52:16.550 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3bb31574
[DEBUG] 2020-11-30 20:52:16.552 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@69c12e2b
[DEBUG] 2020-11-30 20:52:16.554 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@169733ef
[DEBUG] 2020-11-30 20:52:16.554 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@169733ef
[DEBUG] 2020-11-30 20:52:16.556 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@a7f5a0a
[DEBUG] 2020-11-30 20:52:16.556 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@a7f5a0a
[DEBUG] 2020-11-30 20:52:16.557 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@45cdaed2
[DEBUG] 2020-11-30 20:52:16.558 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@45cdaed2
[DEBUG] 2020-11-30 20:52:16.559 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2a67890f
[DEBUG] 2020-11-30 20:52:16.559 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2a67890f
[DEBUG] 2020-11-30 20:52:16.560 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6d299e92
[DEBUG] 2020-11-30 20:52:16.562 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6d299e92
[DEBUG] 2020-11-30 20:52:16.562 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31552785
[DEBUG] 2020-11-30 20:52:16.566 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@72b709e3
[DEBUG] 2020-11-30 20:52:16.566 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@72b709e3
[DEBUG] 2020-11-30 20:52:16.566 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@72b709e3
[DEBUG] 2020-11-30 20:52:16.567 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ded18ea
[DEBUG] 2020-11-30 20:52:16.568 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ded18ea
[DEBUG] 2020-11-30 20:52:16.568 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ded18ea
[DEBUG] 2020-11-30 20:52:16.569 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@10491376
[DEBUG] 2020-11-30 20:52:16.570 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@a9fbb6d
[DEBUG] 2020-11-30 20:52:16.572 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3e84a0dd
[DEBUG] 2020-11-30 20:52:16.572 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3e84a0dd
[DEBUG] 2020-11-30 20:52:16.572 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3e84a0dd
[DEBUG] 2020-11-30 20:52:16.573 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1fc7e0b7
[DEBUG] 2020-11-30 20:52:16.574 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1fc7e0b7
[DEBUG] 2020-11-30 20:52:16.574 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1fc7e0b7
[DEBUG] 2020-11-30 20:52:16.575 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@40a49404
[DEBUG] 2020-11-30 20:52:16.576 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@33b2cfc0
[DEBUG] 2020-11-30 20:52:16.578 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@37003ad3
[DEBUG] 2020-11-30 20:52:16.578 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@37003ad3
[DEBUG] 2020-11-30 20:52:16.579 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1480e2e8
[DEBUG] 2020-11-30 20:52:16.580 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@27d75b1d
[DEBUG] 2020-11-30 20:52:16.581 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@27d75b1d
[DEBUG] 2020-11-30 20:52:16.582 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@39b4be3b
[DEBUG] 2020-11-30 20:52:16.583 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@39b4be3b
[DEBUG] 2020-11-30 20:52:16.585 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28edd390
[DEBUG] 2020-11-30 20:52:16.586 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@631a351d
[DEBUG] 2020-11-30 20:52:16.588 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@17450e91
[DEBUG] 2020-11-30 20:52:16.601 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5faa9559
[DEBUG] 2020-11-30 20:52:16.602 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5faa9559
[DEBUG] 2020-11-30 20:52:16.602 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21a72f37
[DEBUG] 2020-11-30 20:52:16.602 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ef579f5
[DEBUG] 2020-11-30 20:52:16.603 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c2551e1
[DEBUG] 2020-11-30 20:52:16.607 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45fb00d4
[DEBUG] 2020-11-30 20:52:16.609 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5dbd41cb
[DEBUG] 2020-11-30 20:52:16.609 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18c2b158
[DEBUG] 2020-11-30 20:52:16.609 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3e4e51f8
[DEBUG] 2020-11-30 20:52:16.609 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@232e1b45
[DEBUG] 2020-11-30 20:52:16.705 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-11-30 20:52:16.708 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-11-30 20:52:16.711 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-30 20:52:16.711 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-11-30 20:52:16.716 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-11-30 20:52:16.720 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-11-30 20:52:16.721 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-11-30 20:52:16.722 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-30 20:52:16.729 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-11-30 20:52:16.730 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-11-30 20:52:16.731 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-11-30 20:52:16.733 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-11-30 20:52:16.733 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-11-30 20:52:16.740 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-11-30 20:52:16.755 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/custom_crafts?serverTimezone=UTC
[INFO ] 2020-11-30 20:52:16.758 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-11-30 20:52:16.758 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-11-30 20:52:17.174 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-11-30 20:52:17.764 [http-nio-8080-exec-8] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-11-30 20:52:17.771 [http-nio-8080-exec-8] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-11-30 20:52:17.771 [http-nio-8080-exec-8] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-11-30 20:52:17.884 [http-nio-8080-exec-8] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-11-30 20:52:17.915 [http-nio-8080-exec-8] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-11-30 20:52:18.001 [http-nio-8080-exec-8] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-11-30 20:52:18.097 [http-nio-8080-exec-8] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-11-30 20:52:18.104 [http-nio-8080-exec-8] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@50693148] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@77e3ae19]
[DEBUG] 2020-11-30 20:52:18.229 [http-nio-8080-exec-8] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Product
[DEBUG] 2020-11-30 20:52:18.308 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 20:52:18.334 [http-nio-8080-exec-8] EntityBinder - Import with entity name Product
[DEBUG] 2020-11-30 20:52:18.342 [http-nio-8080-exec-8] EntityBinder - Bind entity edu.matc.entity.Product on table product
[DEBUG] 2020-11-30 20:52:18.447 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=item_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.460 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property itemId with lazy=false
[DEBUG] 2020-11-30 20:52:18.464 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:itemId]
[DEBUG] 2020-11-30 20:52:18.469 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for itemId
[DEBUG] 2020-11-30 20:52:18.473 [http-nio-8080-exec-8] PropertyBinder - Building property itemId
[DEBUG] 2020-11-30 20:52:18.480 [http-nio-8080-exec-8] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(item_id)]), itemId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 20:52:18.481 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=customizable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.482 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property customizable with lazy=false
[DEBUG] 2020-11-30 20:52:18.482 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:customizable]
[DEBUG] 2020-11-30 20:52:18.482 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for customizable
[DEBUG] 2020-11-30 20:52:18.482 [http-nio-8080-exec-8] PropertyBinder - Building property customizable
[DEBUG] 2020-11-30 20:52:18.485 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.485 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-11-30 20:52:18.486 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:description]
[DEBUG] 2020-11-30 20:52:18.486 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-11-30 20:52:18.486 [http-nio-8080-exec-8] PropertyBinder - Building property description
[DEBUG] 2020-11-30 20:52:18.486 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.494 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2020-11-30 20:52:18.494 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:image]
[DEBUG] 2020-11-30 20:52:18.496 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2020-11-30 20:52:18.498 [http-nio-8080-exec-8] PropertyBinder - Building property image
[DEBUG] 2020-11-30 20:52:18.498 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.498 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-11-30 20:52:18.499 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:price]
[DEBUG] 2020-11-30 20:52:18.499 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-11-30 20:52:18.499 [http-nio-8080-exec-8] PropertyBinder - Building property price
[DEBUG] 2020-11-30 20:52:18.499 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=production_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.500 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property productionCost with lazy=false
[DEBUG] 2020-11-30 20:52:18.500 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:productionCost]
[DEBUG] 2020-11-30 20:52:18.500 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for productionCost
[DEBUG] 2020-11-30 20:52:18.500 [http-nio-8080-exec-8] PropertyBinder - Building property productionCost
[DEBUG] 2020-11-30 20:52:18.500 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=tags, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.501 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property tags with lazy=false
[DEBUG] 2020-11-30 20:52:18.501 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:tags]
[DEBUG] 2020-11-30 20:52:18.501 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for tags
[DEBUG] 2020-11-30 20:52:18.501 [http-nio-8080-exec-8] PropertyBinder - Building property tags
[DEBUG] 2020-11-30 20:52:18.501 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.501 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-11-30 20:52:18.501 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:title]
[DEBUG] 2020-11-30 20:52:18.501 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-11-30 20:52:18.501 [http-nio-8080-exec-8] PropertyBinder - Building property title
[DEBUG] 2020-11-30 20:52:18.508 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 20:52:18.509 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.517 [http-nio-8080-exec-8] PropertyBinder - Building property user
[DEBUG] 2020-11-30 20:52:18.522 [http-nio-8080-exec-8] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-11-30 20:52:18.524 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 20:52:18.524 [http-nio-8080-exec-8] EntityBinder - Import with entity name User
[DEBUG] 2020-11-30 20:52:18.525 [http-nio-8080-exec-8] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2020-11-30 20:52:18.537 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.537 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-11-30 20:52:18.537 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-11-30 20:52:18.537 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-11-30 20:52:18.538 [http-nio-8080-exec-8] PropertyBinder - Building property userId
[DEBUG] 2020-11-30 20:52:18.539 [http-nio-8080-exec-8] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 20:52:18.539 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.543 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-11-30 20:52:18.545 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2020-11-30 20:52:18.545 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-11-30 20:52:18.545 [http-nio-8080-exec-8] PropertyBinder - Building property email
[DEBUG] 2020-11-30 20:52:18.545 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.545 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-11-30 20:52:18.545 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2020-11-30 20:52:18.545 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-11-30 20:52:18.545 [http-nio-8080-exec-8] PropertyBinder - Building property firstName
[DEBUG] 2020-11-30 20:52:18.545 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.545 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-11-30 20:52:18.545 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2020-11-30 20:52:18.545 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-11-30 20:52:18.546 [http-nio-8080-exec-8] PropertyBinder - Building property lastName
[DEBUG] 2020-11-30 20:52:18.546 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.546 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-11-30 20:52:18.546 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2020-11-30 20:52:18.546 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-11-30 20:52:18.546 [http-nio-8080-exec-8] PropertyBinder - Building property password
[DEBUG] 2020-11-30 20:52:18.546 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 20:52:18.552 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.555 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.582 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.583 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.584 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 20:52:18.588 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 20:52:18.588 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 20:52:18.589 [http-nio-8080-exec-8] CollectionBinder - Collection role: edu.matc.entity.User.products
[DEBUG] 2020-11-30 20:52:18.597 [http-nio-8080-exec-8] PropertyBinder - Building property products
[DEBUG] 2020-11-30 20:52:18.598 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 20:52:18.598 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.599 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.600 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.600 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.600 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-11-30 20:52:18.603 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 20:52:18.604 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-11-30 20:52:18.604 [http-nio-8080-exec-8] CollectionBinder - Collection role: edu.matc.entity.User.roles
[DEBUG] 2020-11-30 20:52:18.604 [http-nio-8080-exec-8] PropertyBinder - Building property roles
[DEBUG] 2020-11-30 20:52:18.604 [http-nio-8080-exec-8] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Role
[DEBUG] 2020-11-30 20:52:18.604 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-11-30 20:52:18.604 [http-nio-8080-exec-8] EntityBinder - Import with entity name Role
[DEBUG] 2020-11-30 20:52:18.604 [http-nio-8080-exec-8] EntityBinder - Bind entity edu.matc.entity.Role on table role
[DEBUG] 2020-11-30 20:52:18.610 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.611 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-11-30 20:52:18.612 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:id]
[DEBUG] 2020-11-30 20:52:18.612 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-11-30 20:52:18.612 [http-nio-8080-exec-8] PropertyBinder - Building property id
[DEBUG] 2020-11-30 20:52:18.612 [http-nio-8080-exec-8] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-11-30 20:52:18.612 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.612 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-11-30 20:52:18.612 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:email]
[DEBUG] 2020-11-30 20:52:18.612 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-11-30 20:52:18.625 [http-nio-8080-exec-8] PropertyBinder - Building property email
[DEBUG] 2020-11-30 20:52:18.626 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.626 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-11-30 20:52:18.626 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:roleName]
[DEBUG] 2020-11-30 20:52:18.626 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-11-30 20:52:18.626 [http-nio-8080-exec-8] PropertyBinder - Building property roleName
[DEBUG] 2020-11-30 20:52:18.626 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-11-30 20:52:18.627 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-11-30 20:52:18.627 [http-nio-8080-exec-8] PropertyBinder - Building property user
[DEBUG] 2020-11-30 20:52:18.634 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for itemId
[DEBUG] 2020-11-30 20:52:18.634 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for customizable
[DEBUG] 2020-11-30 20:52:18.634 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-11-30 20:52:18.634 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2020-11-30 20:52:18.634 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-11-30 20:52:18.635 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for productionCost
[DEBUG] 2020-11-30 20:52:18.635 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for tags
[DEBUG] 2020-11-30 20:52:18.635 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-11-30 20:52:18.635 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-11-30 20:52:18.635 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-11-30 20:52:18.635 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-11-30 20:52:18.635 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-11-30 20:52:18.635 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-11-30 20:52:18.635 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-11-30 20:52:18.635 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-11-30 20:52:18.635 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-11-30 20:52:18.648 [http-nio-8080-exec-8] PrimaryKey - Forcing column [item_id] to be non-null as it is part of the primary key for table [product]
[DEBUG] 2020-11-30 20:52:18.648 [http-nio-8080-exec-8] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-11-30 20:52:18.648 [http-nio-8080-exec-8] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-11-30 20:52:18.650 [http-nio-8080-exec-8] CollectionSecondPass - Second pass for collection: edu.matc.entity.User.products
[DEBUG] 2020-11-30 20:52:18.652 [http-nio-8080-exec-8] CollectionBinder - Binding a OneToMany: edu.matc.entity.User.products through a foreign key
[DEBUG] 2020-11-30 20:52:18.653 [http-nio-8080-exec-8] CollectionBinder - Mapping collection: edu.matc.entity.User.products -> product
[DEBUG] 2020-11-30 20:52:18.655 [http-nio-8080-exec-8] TableBinder - Retrieving property edu.matc.entity.Product.user
[DEBUG] 2020-11-30 20:52:18.655 [http-nio-8080-exec-8] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.matc.entity.Product
[DEBUG] 2020-11-30 20:52:18.655 [http-nio-8080-exec-8] CollectionSecondPass - Second pass for collection: edu.matc.entity.User.roles
[DEBUG] 2020-11-30 20:52:18.655 [http-nio-8080-exec-8] CollectionBinder - Binding a OneToMany: edu.matc.entity.User.roles through a foreign key
[DEBUG] 2020-11-30 20:52:18.655 [http-nio-8080-exec-8] CollectionBinder - Mapping collection: edu.matc.entity.User.roles -> role
[DEBUG] 2020-11-30 20:52:18.655 [http-nio-8080-exec-8] TableBinder - Retrieving property edu.matc.entity.Role.user
[DEBUG] 2020-11-30 20:52:18.656 [http-nio-8080-exec-8] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.matc.entity.Role
[DEBUG] 2020-11-30 20:52:18.656 [http-nio-8080-exec-8] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-11-30 20:52:18.658 [http-nio-8080-exec-8] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-11-30 20:52:18.662 [http-nio-8080-exec-8] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-11-30 20:52:18.662 [http-nio-8080-exec-8] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2020-11-30 20:52:18.723 [http-nio-8080-exec-8] SessionFactoryImpl - Building session factory
[DEBUG] 2020-11-30 20:52:18.725 [http-nio-8080-exec-8] Settings - SessionFactory name : null
[DEBUG] 2020-11-30 20:52:18.725 [http-nio-8080-exec-8] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-11-30 20:52:18.725 [http-nio-8080-exec-8] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-11-30 20:52:18.725 [http-nio-8080-exec-8] Settings - Statistics: disabled
[DEBUG] 2020-11-30 20:52:18.725 [http-nio-8080-exec-8] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-11-30 20:52:18.725 [http-nio-8080-exec-8] Settings - Default entity-mode: pojo
[DEBUG] 2020-11-30 20:52:18.725 [http-nio-8080-exec-8] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-11-30 20:52:18.725 [http-nio-8080-exec-8] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-11-30 20:52:18.725 [http-nio-8080-exec-8] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-11-30 20:52:18.725 [http-nio-8080-exec-8] Settings - Default batch fetch size: -1
[DEBUG] 2020-11-30 20:52:18.725 [http-nio-8080-exec-8] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-11-30 20:52:18.725 [http-nio-8080-exec-8] Settings - Default null ordering: NONE
[DEBUG] 2020-11-30 20:52:18.725 [http-nio-8080-exec-8] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-11-30 20:52:18.725 [http-nio-8080-exec-8] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - Query language substitutions: {}
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - Named query checking : enabled
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - Second-level cache: disabled
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - Second-level query cache: disabled
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - Second-level query cache factory: null
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - Second-level cache region prefix: null
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - JDBC batch size: 15
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - Scrollable result sets: enabled
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - Wrap result sets: disabled
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - JDBC result set fetch size: null
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - JPA compliance - query : 
[DEBUG] 2020-11-30 20:52:18.726 [http-nio-8080-exec-8] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-11-30 20:52:18.727 [http-nio-8080-exec-8] Settings - JPA compliance - lists : 
[DEBUG] 2020-11-30 20:52:18.727 [http-nio-8080-exec-8] Settings - JPA compliance - transactions : 
[INFO ] 2020-11-30 20:52:18.885 [http-nio-8080-exec-8] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-11-30 20:52:18.930 [http-nio-8080-exec-8] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-11-30 20:52:18.931 [http-nio-8080-exec-8] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-11-04, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_customCrafts/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_customCrafts/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.9.1+1-Ubuntu-0ubuntu1.18.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.9.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_customCrafts, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_customCrafts/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-53-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/custom_crafts?serverTimezone=UTC, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_customCrafts, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@59c9e786, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.9.1+1-Ubuntu-0ubuntu1.18.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/custom_crafts?serverTimezone=UTC, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-11-30 20:52:18.970 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-11-30 20:52:18.970 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-11-30 20:52:19.008 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Product] is safe
[DEBUG] 2020-11-30 20:52:19.008 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Product
[DEBUG] 2020-11-30 20:52:19.013 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Role] is safe
[DEBUG] 2020-11-30 20:52:19.014 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Role
[DEBUG] 2020-11-30 20:52:19.021 [http-nio-8080-exec-8] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-11-30 20:52:19.024 [http-nio-8080-exec-8] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-11-30 20:52:19.025 [http-nio-8080-exec-8] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@50693148] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1f9841ab]
[DEBUG] 2020-11-30 20:52:19.178 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-11-30 20:52:19.178 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-11-30 20:52:19.247 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2020-11-30 20:52:19.247 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2020-11-30 20:52:19.776 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Product] is safe
[DEBUG] 2020-11-30 20:52:19.776 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Product
[DEBUG] 2020-11-30 20:52:19.776 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Product] is safe
[DEBUG] 2020-11-30 20:52:19.776 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Product
[DEBUG] 2020-11-30 20:52:19.857 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Role] is safe
[DEBUG] 2020-11-30 20:52:19.857 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Role
[DEBUG] 2020-11-30 20:52:19.857 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Role] is safe
[DEBUG] 2020-11-30 20:52:19.857 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Role
[DEBUG] 2020-11-30 20:52:19.934 [http-nio-8080-exec-8] AbstractCollectionPersister - Static SQL for collection: edu.matc.entity.User.products
[DEBUG] 2020-11-30 20:52:19.934 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row insert: update product set user_id=? where item_id=?
[DEBUG] 2020-11-30 20:52:19.934 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row update: update product set  where item_id=?
[DEBUG] 2020-11-30 20:52:19.934 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row delete: update product set user_id=null where user_id=? and item_id=?
[DEBUG] 2020-11-30 20:52:19.934 [http-nio-8080-exec-8] AbstractCollectionPersister -  One-shot delete: update product set user_id=null where user_id=?
[DEBUG] 2020-11-30 20:52:19.935 [http-nio-8080-exec-8] AbstractCollectionPersister - Static SQL for collection: edu.matc.entity.User.roles
[DEBUG] 2020-11-30 20:52:19.935 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row insert: update role set user_id=? where id=?
[DEBUG] 2020-11-30 20:52:19.935 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2020-11-30 20:52:19.935 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row delete: update role set user_id=null where user_id=? and id=?
[DEBUG] 2020-11-30 20:52:19.935 [http-nio-8080-exec-8] AbstractCollectionPersister -  One-shot delete: update role set user_id=null where user_id=?
[DEBUG] 2020-11-30 20:52:19.940 [http-nio-8080-exec-8] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.User
[DEBUG] 2020-11-30 20:52:19.941 [http-nio-8080-exec-8] AbstractEntityPersister -  Version select: select user_id from user where user_id =?
[DEBUG] 2020-11-30 20:52:19.941 [http-nio-8080-exec-8] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_ from user user_ where user_.user_id=?
[DEBUG] 2020-11-30 20:52:19.943 [http-nio-8080-exec-8] AbstractEntityPersister -  Insert 0: insert into user (email, first_name, last_name, password, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 20:52:19.943 [http-nio-8080-exec-8] AbstractEntityPersister -  Update 0: update user set email=?, first_name=?, last_name=?, password=? where user_id=?
[DEBUG] 2020-11-30 20:52:19.945 [http-nio-8080-exec-8] AbstractEntityPersister -  Delete 0: delete from user where user_id=?
[DEBUG] 2020-11-30 20:52:19.946 [http-nio-8080-exec-8] AbstractEntityPersister -  Identity insert: insert into user (email, first_name, last_name, password) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 20:52:19.990 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@462ca04]
[DEBUG] 2020-11-30 20:52:19.992 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-30 20:52:19.992 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-11-30 20:52:19.992 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-11-30 20:52:19.992 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-11-30 20:52:19.992 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products
[DEBUG] 2020-11-30 20:52:19.998 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d5b8ec3]
[DEBUG] 2020-11-30 20:52:20.002 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21b29acb]
[DEBUG] 2020-11-30 20:52:20.011 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.customizable
[DEBUG] 2020-11-30 20:52:20.011 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.description
[DEBUG] 2020-11-30 20:52:20.011 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.image
[DEBUG] 2020-11-30 20:52:20.011 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.price
[DEBUG] 2020-11-30 20:52:20.012 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.productionCost
[DEBUG] 2020-11-30 20:52:20.012 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.tags
[DEBUG] 2020-11-30 20:52:20.012 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.title
[DEBUG] 2020-11-30 20:52:20.013 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.user
[DEBUG] 2020-11-30 20:52:20.013 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : products.user
[DEBUG] 2020-11-30 20:52:20.014 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-11-30 20:52:20.015 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70badaf4]
[DEBUG] 2020-11-30 20:52:20.015 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d890346]
[DEBUG] 2020-11-30 20:52:20.015 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles.email
[DEBUG] 2020-11-30 20:52:20.016 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-11-30 20:52:20.016 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-11-30 20:52:20.016 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-11-30 20:52:20.016 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 20:52:20.036 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 20:52:20.051 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:1>, path=edu.matc.entity.User.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:2>, path=edu.matc.entity.User.products.<elements>)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.roles, querySpaceUid=<gen:3>, path=edu.matc.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Role, querySpaceUid=<gen:4>, path=edu.matc.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(products)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.products)
                - SQL table alias mapping - products1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - item_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Product)
                      - SQL table alias mapping - products1_
                      - alias suffix - 2_
                      - suffixed key columns - {item_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.matc.entity.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 3_
                - suffixed key columns - {user_id4_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.matc.entity.Role)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}

[DEBUG] 2020-11-30 20:52:20.060 [http-nio-8080-exec-8] EntityLoader - Static select for entity edu.matc.entity.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, products1_.user_id as user_id9_0_1_, products1_.item_id as item_id1_0_1_, products1_.item_id as item_id1_0_2_, products1_.customizable as customiz2_0_2_, products1_.description as descript3_0_2_, products1_.image as image4_0_2_, products1_.price as price5_0_2_, products1_.production_cost as producti6_0_2_, products1_.tags as tags7_0_2_, products1_.title as title8_0_2_, products1_.user_id as user_id9_0_2_, roles2_.user_id as user_id4_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.email as email2_1_4_, roles2_.role_name as role_nam3_1_4_, roles2_.user_id as user_id4_1_4_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id left outer join role roles2_ on user0_.user_id=roles2_.user_id where user0_.user_id=?
[DEBUG] 2020-11-30 20:52:20.061 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e27e084]
[DEBUG] 2020-11-30 20:52:20.061 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-30 20:52:20.061 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-11-30 20:52:20.061 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-11-30 20:52:20.061 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-11-30 20:52:20.061 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products
[DEBUG] 2020-11-30 20:52:20.062 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13f09ab2]
[DEBUG] 2020-11-30 20:52:20.062 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13458de]
[DEBUG] 2020-11-30 20:52:20.063 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.customizable
[DEBUG] 2020-11-30 20:52:20.063 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.description
[DEBUG] 2020-11-30 20:52:20.064 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.image
[DEBUG] 2020-11-30 20:52:20.064 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.price
[DEBUG] 2020-11-30 20:52:20.064 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.productionCost
[DEBUG] 2020-11-30 20:52:20.064 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.tags
[DEBUG] 2020-11-30 20:52:20.064 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.title
[DEBUG] 2020-11-30 20:52:20.064 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : products.user
[DEBUG] 2020-11-30 20:52:20.064 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : products.user
[DEBUG] 2020-11-30 20:52:20.064 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-11-30 20:52:20.064 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@727a5418]
[DEBUG] 2020-11-30 20:52:20.065 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@512b0021]
[DEBUG] 2020-11-30 20:52:20.069 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles.email
[DEBUG] 2020-11-30 20:52:20.069 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles.roleName
[DEBUG] 2020-11-30 20:52:20.069 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-11-30 20:52:20.069 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-11-30 20:52:20.069 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 20:52:20.069 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 20:52:20.070 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:1>, path=edu.matc.entity.User.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:2>, path=edu.matc.entity.User.products.<elements>)
          - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.roles, querySpaceUid=<gen:3>, path=edu.matc.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Role, querySpaceUid=<gen:4>, path=edu.matc.entity.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(products)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.matc.entity.User.products)
                - SQL table alias mapping - products1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - item_id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.Product)
                      - SQL table alias mapping - products1_
                      - alias suffix - 2_
                      - suffixed key columns - {item_id1_0_2_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.matc.entity.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 3_
                - suffixed key columns - {user_id4_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.matc.entity.Role)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}

[DEBUG] 2020-11-30 20:52:20.070 [http-nio-8080-exec-8] EntityLoader - Static select for entity edu.matc.entity.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, products1_.user_id as user_id9_0_1_, products1_.item_id as item_id1_0_1_, products1_.item_id as item_id1_0_2_, products1_.customizable as customiz2_0_2_, products1_.description as descript3_0_2_, products1_.image as image4_0_2_, products1_.price as price5_0_2_, products1_.production_cost as producti6_0_2_, products1_.tags as tags7_0_2_, products1_.title as title8_0_2_, products1_.user_id as user_id9_0_2_, roles2_.user_id as user_id4_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.email as email2_1_4_, roles2_.role_name as role_nam3_1_4_, roles2_.user_id as user_id4_1_4_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id left outer join role roles2_ on user0_.user_id=roles2_.user_id where user0_.user_id=?
[DEBUG] 2020-11-30 20:52:20.113 [http-nio-8080-exec-8] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, products1_.user_id as user_id9_0_3_, products1_.item_id as item_id1_0_3_, products1_.item_id as item_id1_0_0_, products1_.customizable as customiz2_0_0_, products1_.description as descript3_0_0_, products1_.image as image4_0_0_, products1_.price as price5_0_0_, products1_.production_cost as producti6_0_0_, products1_.tags as tags7_0_0_, products1_.title as title8_0_0_, products1_.user_id as user_id9_0_0_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-11-30 20:52:20.113 [http-nio-8080-exec-8] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, products1_.user_id as user_id9_0_3_, products1_.item_id as item_id1_0_3_, products1_.item_id as item_id1_0_0_, products1_.customizable as customiz2_0_0_, products1_.description as descript3_0_0_, products1_.image as image4_0_0_, products1_.price as price5_0_0_, products1_.production_cost as producti6_0_0_, products1_.tags as tags7_0_0_, products1_.title as title8_0_0_, products1_.user_id as user_id9_0_0_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id where user0_.user_id=?
[DEBUG] 2020-11-30 20:52:20.114 [http-nio-8080-exec-8] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Product
[DEBUG] 2020-11-30 20:52:20.114 [http-nio-8080-exec-8] AbstractEntityPersister -  Version select: select item_id from product where item_id =?
[DEBUG] 2020-11-30 20:52:20.114 [http-nio-8080-exec-8] AbstractEntityPersister -  Snapshot select: select product_.item_id, product_.customizable as customiz2_0_, product_.description as descript3_0_, product_.image as image4_0_, product_.price as price5_0_, product_.production_cost as producti6_0_, product_.tags as tags7_0_, product_.title as title8_0_, product_.user_id as user_id9_0_ from product product_ where product_.item_id=?
[DEBUG] 2020-11-30 20:52:20.114 [http-nio-8080-exec-8] AbstractEntityPersister -  Insert 0: insert into product (customizable, description, image, price, production_cost, tags, title, user_id, item_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 20:52:20.114 [http-nio-8080-exec-8] AbstractEntityPersister -  Update 0: update product set customizable=?, description=?, image=?, price=?, production_cost=?, tags=?, title=?, user_id=? where item_id=?
[DEBUG] 2020-11-30 20:52:20.114 [http-nio-8080-exec-8] AbstractEntityPersister -  Delete 0: delete from product where item_id=?
[DEBUG] 2020-11-30 20:52:20.114 [http-nio-8080-exec-8] AbstractEntityPersister -  Identity insert: insert into product (customizable, description, image, price, production_cost, tags, title, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-11-30 20:52:20.114 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b58a5ad]
[DEBUG] 2020-11-30 20:52:20.117 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-11-30 20:52:20.117 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-30 20:52:20.117 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-11-30 20:52:20.117 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 20:52:20.117 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-11-30 20:52:20.117 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-11-30 20:52:20.117 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-11-30 20:52:20.117 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 20:52:20.117 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3807c]
[DEBUG] 2020-11-30 20:52:20.121 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 20:52:20.121 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-11-30 20:52:20.121 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-11-30 20:52:20.121 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-11-30 20:52:20.121 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products
[DEBUG] 2020-11-30 20:52:20.121 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.products
[DEBUG] 2020-11-30 20:52:20.121 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 20:52:20.124 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a0291f6]
[DEBUG] 2020-11-30 20:52:20.124 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e879ab1]
[DEBUG] 2020-11-30 20:52:20.125 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles.email
[DEBUG] 2020-11-30 20:52:20.125 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-11-30 20:52:20.125 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-11-30 20:52:20.125 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-11-30 20:52:20.125 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 20:52:20.125 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 20:52:20.129 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Product)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Product, querySpaceUid=<gen:0>, path=edu.matc.entity.Product)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Product.user)
             - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.roles, querySpaceUid=<gen:2>, path=edu.matc.entity.Product.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Role, querySpaceUid=<gen:3>, path=edu.matc.entity.Product.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {item_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=edu.matc.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id4_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.matc.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

[DEBUG] 2020-11-30 20:52:20.129 [http-nio-8080-exec-8] EntityLoader - Static select for entity edu.matc.entity.Product [NONE]: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, roles2_.user_id as user_id4_1_2_, roles2_.id as id1_1_2_, roles2_.id as id1_1_3_, roles2_.email as email2_1_3_, roles2_.role_name as role_nam3_1_3_, roles2_.user_id as user_id4_1_3_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id left outer join role roles2_ on user1_.user_id=roles2_.user_id where product0_.item_id=?
[DEBUG] 2020-11-30 20:52:20.129 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@372d4517]
[DEBUG] 2020-11-30 20:52:20.129 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-11-30 20:52:20.130 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-30 20:52:20.130 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-11-30 20:52:20.130 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 20:52:20.130 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-11-30 20:52:20.130 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-11-30 20:52:20.130 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-11-30 20:52:20.130 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 20:52:20.130 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@347e8db5]
[DEBUG] 2020-11-30 20:52:20.130 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 20:52:20.131 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-11-30 20:52:20.131 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-11-30 20:52:20.131 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-11-30 20:52:20.131 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products
[DEBUG] 2020-11-30 20:52:20.131 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.products
[DEBUG] 2020-11-30 20:52:20.131 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 20:52:20.131 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@711438a]
[DEBUG] 2020-11-30 20:52:20.132 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aab5fb2]
[DEBUG] 2020-11-30 20:52:20.133 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles.email
[DEBUG] 2020-11-30 20:52:20.133 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles.roleName
[DEBUG] 2020-11-30 20:52:20.133 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-11-30 20:52:20.133 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-11-30 20:52:20.133 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 20:52:20.133 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 20:52:20.138 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Product)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Product, querySpaceUid=<gen:0>, path=edu.matc.entity.Product)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Product.user)
             - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.roles, querySpaceUid=<gen:2>, path=edu.matc.entity.Product.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Role, querySpaceUid=<gen:3>, path=edu.matc.entity.Product.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {item_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=edu.matc.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id4_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.matc.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

[DEBUG] 2020-11-30 20:52:20.138 [http-nio-8080-exec-8] EntityLoader - Static select for entity edu.matc.entity.Product [READ]: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, roles2_.user_id as user_id4_1_2_, roles2_.id as id1_1_2_, roles2_.id as id1_1_3_, roles2_.email as email2_1_3_, roles2_.role_name as role_nam3_1_3_, roles2_.user_id as user_id4_1_3_ from product product0_ left outer join user user1_ on product0_.user_id=user1_.user_id left outer join role roles2_ on user1_.user_id=roles2_.user_id where product0_.item_id=?
[DEBUG] 2020-11-30 20:52:20.141 [http-nio-8080-exec-8] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Product: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_ from product product0_ where product0_.item_id=?
[DEBUG] 2020-11-30 20:52:20.143 [http-nio-8080-exec-8] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Product: select product0_.item_id as item_id1_0_0_, product0_.customizable as customiz2_0_0_, product0_.description as descript3_0_0_, product0_.image as image4_0_0_, product0_.price as price5_0_0_, product0_.production_cost as producti6_0_0_, product0_.tags as tags7_0_0_, product0_.title as title8_0_0_, product0_.user_id as user_id9_0_0_ from product product0_ where product0_.item_id=?
[DEBUG] 2020-11-30 20:52:20.144 [http-nio-8080-exec-8] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Role
[DEBUG] 2020-11-30 20:52:20.144 [http-nio-8080-exec-8] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2020-11-30 20:52:20.144 [http-nio-8080-exec-8] AbstractEntityPersister -  Snapshot select: select role_.id, role_.email as email2_1_, role_.role_name as role_nam3_1_, role_.user_id as user_id4_1_ from role role_ where role_.id=?
[DEBUG] 2020-11-30 20:52:20.144 [http-nio-8080-exec-8] AbstractEntityPersister -  Insert 0: insert into role (email, role_name, user_id, id) values (?, ?, ?, ?)
[DEBUG] 2020-11-30 20:52:20.144 [http-nio-8080-exec-8] AbstractEntityPersister -  Update 0: update role set email=?, role_name=?, user_id=? where id=?
[DEBUG] 2020-11-30 20:52:20.144 [http-nio-8080-exec-8] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2020-11-30 20:52:20.144 [http-nio-8080-exec-8] AbstractEntityPersister -  Identity insert: insert into role (email, role_name, user_id) values (?, ?, ?)
[DEBUG] 2020-11-30 20:52:20.150 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60a7d2d4]
[DEBUG] 2020-11-30 20:52:20.151 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-30 20:52:20.151 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 20:52:20.151 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 20:52:20.151 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39231a0e]
[DEBUG] 2020-11-30 20:52:20.151 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 20:52:20.151 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-11-30 20:52:20.151 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-11-30 20:52:20.152 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-11-30 20:52:20.152 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products
[DEBUG] 2020-11-30 20:52:20.152 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34377237]
[DEBUG] 2020-11-30 20:52:20.152 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e1177b3]
[DEBUG] 2020-11-30 20:52:20.156 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.customizable
[DEBUG] 2020-11-30 20:52:20.156 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.description
[DEBUG] 2020-11-30 20:52:20.156 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.image
[DEBUG] 2020-11-30 20:52:20.156 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.price
[DEBUG] 2020-11-30 20:52:20.156 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.productionCost
[DEBUG] 2020-11-30 20:52:20.156 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.tags
[DEBUG] 2020-11-30 20:52:20.156 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.title
[DEBUG] 2020-11-30 20:52:20.156 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.user
[DEBUG] 2020-11-30 20:52:20.156 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.products.user
[DEBUG] 2020-11-30 20:52:20.156 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 20:52:20.157 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-11-30 20:52:20.157 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 20:52:20.157 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 20:52:20.157 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Role)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Role, querySpaceUid=<gen:0>, path=edu.matc.entity.Role)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:2>, path=edu.matc.entity.Role.user.products)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:3>, path=edu.matc.entity.Role.user.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(products)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=edu.matc.entity.User.products)
                      - SQL table alias mapping - products2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id9_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - item_id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.matc.entity.Product)
                            - SQL table alias mapping - products2_
                            - alias suffix - 3_
                            - suffixed key columns - {item_id1_0_3_}

[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] EntityLoader - Static select for entity edu.matc.entity.Role [NONE]: select role0_.id as id1_1_0_, role0_.email as email2_1_0_, role0_.role_name as role_nam3_1_0_, role0_.user_id as user_id4_1_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, products2_.user_id as user_id9_0_2_, products2_.item_id as item_id1_0_2_, products2_.item_id as item_id1_0_3_, products2_.customizable as customiz2_0_3_, products2_.description as descript3_0_3_, products2_.image as image4_0_3_, products2_.price as price5_0_3_, products2_.production_cost as producti6_0_3_, products2_.tags as tags7_0_3_, products2_.title as title8_0_3_, products2_.user_id as user_id9_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.user_id left outer join product products2_ on user1_.user_id=products2_.user_id where role0_.id=?
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b7fc23c]
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eeddd97]
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a536580]
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70bfc43b]
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.customizable
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.description
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.image
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.price
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.productionCost
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.tags
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.title
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.products.user
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.products.user
[DEBUG] 2020-11-30 20:52:20.158 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-11-30 20:52:20.159 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-11-30 20:52:20.159 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 20:52:20.161 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 20:52:20.162 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Role)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Role, querySpaceUid=<gen:0>, path=edu.matc.entity.Role)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:2>, path=edu.matc.entity.Role.user.products)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:3>, path=edu.matc.entity.Role.user.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(products)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=edu.matc.entity.User.products)
                      - SQL table alias mapping - products2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id9_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - item_id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.matc.entity.Product)
                            - SQL table alias mapping - products2_
                            - alias suffix - 3_
                            - suffixed key columns - {item_id1_0_3_}

[DEBUG] 2020-11-30 20:52:20.162 [http-nio-8080-exec-8] EntityLoader - Static select for entity edu.matc.entity.Role [READ]: select role0_.id as id1_1_0_, role0_.email as email2_1_0_, role0_.role_name as role_nam3_1_0_, role0_.user_id as user_id4_1_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, products2_.user_id as user_id9_0_2_, products2_.item_id as item_id1_0_2_, products2_.item_id as item_id1_0_3_, products2_.customizable as customiz2_0_3_, products2_.description as descript3_0_3_, products2_.image as image4_0_3_, products2_.price as price5_0_3_, products2_.production_cost as producti6_0_3_, products2_.tags as tags7_0_3_, products2_.title as title8_0_3_, products2_.user_id as user_id9_0_3_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.user_id left outer join product products2_ on user1_.user_id=products2_.user_id where role0_.id=?
[DEBUG] 2020-11-30 20:52:20.162 [http-nio-8080-exec-8] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Role: select role0_.id as id1_1_0_, role0_.email as email2_1_0_, role0_.role_name as role_nam3_1_0_, role0_.user_id as user_id4_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-11-30 20:52:20.162 [http-nio-8080-exec-8] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Role: select role0_.id as id1_1_0_, role0_.email as email2_1_0_, role0_.role_name as role_nam3_1_0_, role0_.user_id as user_id4_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-11-30 20:52:20.181 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@719366b7]
[DEBUG] 2020-11-30 20:52:20.181 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bba0ae1]
[DEBUG] 2020-11-30 20:52:20.181 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : customizable
[DEBUG] 2020-11-30 20:52:20.181 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-11-30 20:52:20.181 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2020-11-30 20:52:20.181 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2020-11-30 20:52:20.184 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : productionCost
[DEBUG] 2020-11-30 20:52:20.184 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : tags
[DEBUG] 2020-11-30 20:52:20.184 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : title
[DEBUG] 2020-11-30 20:52:20.184 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 20:52:20.184 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-11-30 20:52:20.184 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 20:52:20.188 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 20:52:20.188 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(collection=edu.matc.entity.User.products)
    - Returns
       - CollectionReturnImpl(collection=edu.matc.entity.User.products, querySpaceUid=<gen:0>, path=[edu.matc.entity.User.products])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Product, querySpaceUid=<gen:1>, path=[edu.matc.entity.User.products].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.matc.entity.User.products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {user_id9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - item_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Product)
                - SQL table alias mapping - products0_
                - alias suffix - 1_
                - suffixed key columns - {item_id1_0_1_}

[DEBUG] 2020-11-30 20:52:20.189 [http-nio-8080-exec-8] CollectionLoader - Static select for collection edu.matc.entity.User.products: select products0_.user_id as user_id9_0_0_, products0_.item_id as item_id1_0_0_, products0_.item_id as item_id1_0_1_, products0_.customizable as customiz2_0_1_, products0_.description as descript3_0_1_, products0_.image as image4_0_1_, products0_.price as price5_0_1_, products0_.production_cost as producti6_0_1_, products0_.tags as tags7_0_1_, products0_.title as title8_0_1_, products0_.user_id as user_id9_0_1_ from product products0_ where products0_.user_id=?
[DEBUG] 2020-11-30 20:52:20.189 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1990add6]
[DEBUG] 2020-11-30 20:52:20.189 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20b4c3cd]
[DEBUG] 2020-11-30 20:52:20.189 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-11-30 20:52:20.189 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : roleName
[DEBUG] 2020-11-30 20:52:20.189 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-11-30 20:52:20.189 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-11-30 20:52:20.189 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-11-30 20:52:20.194 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-11-30 20:52:20.194 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(collection=edu.matc.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=edu.matc.entity.User.roles, querySpaceUid=<gen:0>, path=[edu.matc.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.matc.entity.Role, querySpaceUid=<gen:1>, path=[edu.matc.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.matc.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-11-30 20:52:20.194 [http-nio-8080-exec-8] CollectionLoader - Static select for collection edu.matc.entity.User.roles: select roles0_.user_id as user_id4_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.email as email2_1_1_, roles0_.role_name as role_nam3_1_1_, roles0_.user_id as user_id4_1_1_ from role roles0_ where roles0_.user_id=?
[DEBUG] 2020-11-30 20:52:20.309 [http-nio-8080-exec-8] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-11-30 20:52:20.309 [http-nio-8080-exec-8] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-11-30 20:52:20.310 [http-nio-8080-exec-8] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-11-30 20:52:20.321 [http-nio-8080-exec-8] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-11-30 20:52:20.321 [http-nio-8080-exec-8] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-11-30 20:52:20.329 [http-nio-8080-exec-8] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-11-30 20:52:20.329 [http-nio-8080-exec-8] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-11-30 20:52:20.336 [http-nio-8080-exec-8] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4cae174f
[DEBUG] 2020-11-30 20:52:20.342 [http-nio-8080-exec-8] SessionFactoryRegistry - Registering SessionFactory: 7f8b22ee-37f4-4f43-8673-26fc21c783e0 (<unnamed>)
[DEBUG] 2020-11-30 20:52:20.343 [http-nio-8080-exec-8] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-11-30 20:52:20.532 [http-nio-8080-exec-8] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-11-30 20:52:20.618 [http-nio-8080-exec-8] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0
[DEBUG] 2020-11-30 20:52:20.666 [http-nio-8080-exec-8] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6766ee85
[DEBUG] 2020-11-30 20:52:20.739 [http-nio-8080-exec-8] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0
[DEBUG] 2020-11-30 20:52:20.752 [http-nio-8080-exec-8] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 20:52:20.773 [http-nio-8080-exec-8] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'matc'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Product'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-11-30 20:52:20.831 [http-nio-8080-exec-8] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-11-30 20:52:20.877 [http-nio-8080-exec-8] FromElement - FromClause{level=1} : edu.matc.entity.Product (generatedAlias0) -> product0_
[DEBUG] 2020-11-30 20:52:20.878 [http-nio-8080-exec-8] FromReferenceNode - Resolved : generatedAlias0 -> product0_.item_id
[DEBUG] 2020-11-30 20:52:20.880 [http-nio-8080-exec-8] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-11-30 20:52:20.883 [http-nio-8080-exec-8] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} product0_.item_id ) ( FromClause{level=1} product product0_ ) )
[DEBUG] 2020-11-30 20:52:20.925 [http-nio-8080-exec-8] JoinProcessor - Using FROM fragment [product product0_]
[DEBUG] 2020-11-30 20:52:20.925 [http-nio-8080-exec-8] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-11-30 20:52:20.925 [http-nio-8080-exec-8] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.item_id as item_id1_0_' {alias=generatedAlias0, className=edu.matc.entity.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=edu.matc.entity.Product}}

[DEBUG] 2020-11-30 20:52:20.925 [http-nio-8080-exec-8] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 20:52:20.941 [http-nio-8080-exec-8] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.Product as generatedAlias0
[DEBUG] 2020-11-30 20:52:20.941 [http-nio-8080-exec-8] QueryTranslatorImpl - SQL: select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_
[DEBUG] 2020-11-30 20:52:20.941 [http-nio-8080-exec-8] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-11-30 20:52:20.987 [http-nio-8080-exec-8] SQL - select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_
[DEBUG] 2020-11-30 20:52:21.052 [http-nio-8080-exec-8] Loader - Result set row: 0
[DEBUG] 2020-11-30 20:52:21.064 [http-nio-8080-exec-8] Loader - Result row: EntityKey[edu.matc.entity.Product#1]
[DEBUG] 2020-11-30 20:52:21.099 [http-nio-8080-exec-8] Loader - Result set row: 1
[DEBUG] 2020-11-30 20:52:21.099 [http-nio-8080-exec-8] Loader - Result row: EntityKey[edu.matc.entity.Product#2]
[DEBUG] 2020-11-30 20:52:21.099 [http-nio-8080-exec-8] Loader - Result set row: 2
[DEBUG] 2020-11-30 20:52:21.099 [http-nio-8080-exec-8] Loader - Result row: EntityKey[edu.matc.entity.Product#3]
[DEBUG] 2020-11-30 20:52:21.099 [http-nio-8080-exec-8] Loader - Result set row: 3
[DEBUG] 2020-11-30 20:52:21.099 [http-nio-8080-exec-8] Loader - Result row: EntityKey[edu.matc.entity.Product#4]
[DEBUG] 2020-11-30 20:52:21.100 [http-nio-8080-exec-8] Loader - Result set row: 4
[DEBUG] 2020-11-30 20:52:21.100 [http-nio-8080-exec-8] Loader - Result row: EntityKey[edu.matc.entity.Product#5]
[DEBUG] 2020-11-30 20:52:21.100 [http-nio-8080-exec-8] Loader - Result set row: 5
[DEBUG] 2020-11-30 20:52:21.100 [http-nio-8080-exec-8] Loader - Result row: EntityKey[edu.matc.entity.Product#6]
[DEBUG] 2020-11-30 20:52:21.100 [http-nio-8080-exec-8] Loader - Result set row: 6
[DEBUG] 2020-11-30 20:52:21.100 [http-nio-8080-exec-8] Loader - Result row: EntityKey[edu.matc.entity.Product#7]
[DEBUG] 2020-11-30 20:52:21.101 [http-nio-8080-exec-8] Loader - Result set row: 7
[DEBUG] 2020-11-30 20:52:21.101 [http-nio-8080-exec-8] Loader - Result row: EntityKey[edu.matc.entity.Product#8]
[DEBUG] 2020-11-30 20:52:21.101 [http-nio-8080-exec-8] Loader - Result set row: 8
[DEBUG] 2020-11-30 20:52:21.101 [http-nio-8080-exec-8] Loader - Result row: EntityKey[edu.matc.entity.Product#9]
[DEBUG] 2020-11-30 20:52:21.106 [http-nio-8080-exec-8] Loader - Result set row: 9
[DEBUG] 2020-11-30 20:52:21.108 [http-nio-8080-exec-8] Loader - Result row: EntityKey[edu.matc.entity.Product#10]
[DEBUG] 2020-11-30 20:52:21.109 [http-nio-8080-exec-8] Loader - Result set row: 10
[DEBUG] 2020-11-30 20:52:21.109 [http-nio-8080-exec-8] Loader - Result row: EntityKey[edu.matc.entity.Product#11]
[DEBUG] 2020-11-30 20:52:21.114 [http-nio-8080-exec-8] Loader - Result set row: 11
[DEBUG] 2020-11-30 20:52:21.114 [http-nio-8080-exec-8] Loader - Result row: EntityKey[edu.matc.entity.Product#12]
[DEBUG] 2020-11-30 20:52:21.121 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#1]
[DEBUG] 2020-11-30 20:52:21.122 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-30 20:52:21.122 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.123 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = 2020 Wooden Ornaments with white ribbon
[DEBUG] 2020-11-30 20:52:21.123 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.123 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `image` : value = 2020Ornaments.jpg
[DEBUG] 2020-11-30 20:52:21.123 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.123 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `price` : value = $5
[DEBUG] 2020-11-30 20:52:21.123 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.123 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `productionCost` : value = $1
[DEBUG] 2020-11-30 20:52:21.123 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.123 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `tags` : value = #ornaments
[DEBUG] 2020-11-30 20:52:21.123 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.123 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = 2020 Wooden Ornaments
[DEBUG] 2020-11-30 20:52:21.123 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.123 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:21.123 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.139 [http-nio-8080-exec-8] SQL - select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, products1_.user_id as user_id9_0_1_, products1_.item_id as item_id1_0_1_, products1_.item_id as item_id1_0_2_, products1_.customizable as customiz2_0_2_, products1_.description as descript3_0_2_, products1_.image as image4_0_2_, products1_.price as price5_0_2_, products1_.production_cost as producti6_0_2_, products1_.tags as tags7_0_2_, products1_.title as title8_0_2_, products1_.user_id as user_id9_0_2_, roles2_.user_id as user_id4_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.email as email2_1_4_, roles2_.role_name as role_nam3_1_4_, roles2_.user_id as user_id4_1_4_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id left outer join role roles2_ on user0_.user_id=roles2_.user_id where user0_.user_id=?
[DEBUG] 2020-11-30 20:52:21.154 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 20:52:21.156 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:21.159 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:21.184 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:21.189 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-11-30 20:52:21.189 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:21.189 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:21.189 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:21.190 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-11-30 20:52:21.191 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:21.191 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:21.191 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:21.191 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2020-11-30 20:52:21.191 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:21.191 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:21.193 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:21.193 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2020-11-30 20:52:21.196 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:21.196 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:21.197 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:21.197 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2020-11-30 20:52:21.197 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:21.197 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:21.198 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:21.198 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2020-11-30 20:52:21.199 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:21.199 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:21.200 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:21.201 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2020-11-30 20:52:21.201 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:21.201 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:21.201 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:21.201 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2020-11-30 20:52:21.202 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:21.204 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:21.205 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:21.206 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #9
[DEBUG] 2020-11-30 20:52:21.206 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:21.206 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:21.206 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:21.207 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #10
[DEBUG] 2020-11-30 20:52:21.207 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:21.207 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:21.207 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:21.207 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #11
[DEBUG] 2020-11-30 20:52:21.209 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:21.209 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:21.211 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:21.211 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-11-30 20:52:21.211 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `email` : value = esajdak@madisoncollege.edu
[DEBUG] 2020-11-30 20:52:21.211 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.211 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `firstName` : value = Elizabeth
[DEBUG] 2020-11-30 20:52:21.211 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.211 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `lastName` : value = Sajdak
[DEBUG] 2020-11-30 20:52:21.211 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.211 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-11-30 20:52:21.211 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.211 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `products` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 20:52:21.211 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`products`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.213 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 20:52:21.213 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.214 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-11-30 20:52:21.214 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Role#1]
[DEBUG] 2020-11-30 20:52:21.214 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `email` : value = esajdak@madisoncollege.edu
[DEBUG] 2020-11-30 20:52:21.214 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.214 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2020-11-30 20:52:21.214 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.214 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:21.214 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.214 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Role#1]
[DEBUG] 2020-11-30 20:52:21.214 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.products
[DEBUG] 2020-11-30 20:52:21.224 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:21.225 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.products
[DEBUG] 2020-11-30 20:52:21.225 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.roles
[DEBUG] 2020-11-30 20:52:21.225 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:21.225 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.roles
[DEBUG] 2020-11-30 20:52:21.226 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 20:52:21.226 [http-nio-8080-exec-8] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#1
[DEBUG] 2020-11-30 20:52:21.230 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#1]
[DEBUG] 2020-11-30 20:52:21.230 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#2]
[DEBUG] 2020-11-30 20:52:21.230 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-30 20:52:21.230 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.230 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Set of 3 holiday shot glasses perfect for showing your holiday spirit!
[DEBUG] 2020-11-30 20:52:21.230 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.230 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `image` : value = shotGlasses.jpg
[DEBUG] 2020-11-30 20:52:21.230 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.230 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `price` : value = $10
[DEBUG] 2020-11-30 20:52:21.230 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.230 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `productionCost` : value = $2
[DEBUG] 2020-11-30 20:52:21.230 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.230 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `tags` : value = #shotglasses
[DEBUG] 2020-11-30 20:52:21.231 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.231 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Holiday Shot Glasses
[DEBUG] 2020-11-30 20:52:21.231 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.231 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:21.231 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.231 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#2]
[DEBUG] 2020-11-30 20:52:21.231 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#3]
[DEBUG] 2020-11-30 20:52:21.231 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `customizable` : value = true
[DEBUG] 2020-11-30 20:52:21.231 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.231 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Custom Made Shirts
[DEBUG] 2020-11-30 20:52:21.231 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.231 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `image` : value = customShirts.jpg
[DEBUG] 2020-11-30 20:52:21.231 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `price` : value = $20
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `productionCost` : value = $8
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Custom Shirts
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#3]
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#4]
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Set of 6 scary movie character shot glasses
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `image` : value = halloweenShotGlasses.jpg
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `price` : value = $10
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.235 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `productionCost` : value = $4
[DEBUG] 2020-11-30 20:52:21.236 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.236 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:21.236 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.236 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Halloween Shot Glasses
[DEBUG] 2020-11-30 20:52:21.236 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.236 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:21.236 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.236 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#4]
[DEBUG] 2020-11-30 20:52:21.236 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#5]
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Here for the boos wine glass
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `image` : value = halloweenWineGlass.jpg
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `price` : value = $6
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `productionCost` : value = $1
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Halloween Wine Glass
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#5]
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#6]
[DEBUG] 2020-11-30 20:52:21.239 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-30 20:52:21.240 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.240 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Red and black koi fish shirt
[DEBUG] 2020-11-30 20:52:21.240 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.240 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `image` : value = koiShirt.jpg
[DEBUG] 2020-11-30 20:52:21.240 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.240 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `price` : value = $15
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `productionCost` : value = $5
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Koi Shirt
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#6]
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#7]
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `customizable` : value = true
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Custom name ornaments
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `image` : value = nameOrnaments.jpg
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `price` : value = $10
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `productionCost` : value = $2
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Custom Name Ornaments
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.244 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:21.245 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.245 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#7]
[DEBUG] 2020-11-30 20:52:21.245 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#8]
[DEBUG] 2020-11-30 20:52:21.245 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `customizable` : value = true
[DEBUG] 2020-11-30 20:52:21.245 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.245 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Your choice of potholder, you can pick the color as well.
[DEBUG] 2020-11-30 20:52:21.245 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.245 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `image` : value = potHolders.jpg
[DEBUG] 2020-11-30 20:52:21.245 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.260 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `price` : value = $8
[DEBUG] 2020-11-30 20:52:21.260 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.260 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `productionCost` : value = $2
[DEBUG] 2020-11-30 20:52:21.260 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.260 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:21.260 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.260 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Pot Holders
[DEBUG] 2020-11-30 20:52:21.260 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.260 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:21.260 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.261 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#8]
[DEBUG] 2020-11-30 20:52:21.261 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#9]
[DEBUG] 2020-11-30 20:52:21.261 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `customizable` : value = true
[DEBUG] 2020-11-30 20:52:21.261 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.261 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Custom santa buckets.
[DEBUG] 2020-11-30 20:52:21.261 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.261 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `image` : value = santaBuckets.jpg
[DEBUG] 2020-11-30 20:52:21.261 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.261 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `price` : value = $6
[DEBUG] 2020-11-30 20:52:21.261 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.261 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `productionCost` : value = $2
[DEBUG] 2020-11-30 20:52:21.261 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.261 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:21.261 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Custom Santa Buckets
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#9]
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#10]
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Set of 6 skull shot glasses
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `image` : value = skullShotGlasses.jpg
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `price` : value = $15
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `productionCost` : value = $4
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Skull Shot Glasses
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#10]
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#11]
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Holiday tree tile
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `image` : value = treeTile.jpg
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `price` : value = $12
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `productionCost` : value = $1
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.264 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Holiday Tree Tile
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#11]
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#12]
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `customizable` : value = true
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Wisconsin mug with a heart in Madison, can move the heart to any city
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `image` : value = wisconsinMug.jpg
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `price` : value = $8
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `productionCost` : value = $2
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `title` : value = Wisconsin Mug
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:21.265 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#12]
[DEBUG] 2020-11-30 20:52:21.270 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-11-30 20:52:25.676 [http-nio-8080-exec-4] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0
[DEBUG] 2020-11-30 20:52:25.686 [http-nio-8080-exec-4] SQL - select product0_.item_id as item_id1_0_, product0_.customizable as customiz2_0_, product0_.description as descript3_0_, product0_.image as image4_0_, product0_.price as price5_0_, product0_.production_cost as producti6_0_, product0_.tags as tags7_0_, product0_.title as title8_0_, product0_.user_id as user_id9_0_ from product product0_
[DEBUG] 2020-11-30 20:52:25.708 [http-nio-8080-exec-4] Loader - Result set row: 0
[DEBUG] 2020-11-30 20:52:25.713 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.matc.entity.Product#1]
[DEBUG] 2020-11-30 20:52:25.717 [http-nio-8080-exec-4] Loader - Result set row: 1
[DEBUG] 2020-11-30 20:52:25.721 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.matc.entity.Product#2]
[DEBUG] 2020-11-30 20:52:25.723 [http-nio-8080-exec-4] Loader - Result set row: 2
[DEBUG] 2020-11-30 20:52:25.723 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.matc.entity.Product#3]
[DEBUG] 2020-11-30 20:52:25.733 [http-nio-8080-exec-4] Loader - Result set row: 3
[DEBUG] 2020-11-30 20:52:25.733 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.matc.entity.Product#4]
[DEBUG] 2020-11-30 20:52:25.733 [http-nio-8080-exec-4] Loader - Result set row: 4
[DEBUG] 2020-11-30 20:52:25.744 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.matc.entity.Product#5]
[DEBUG] 2020-11-30 20:52:25.751 [http-nio-8080-exec-4] Loader - Result set row: 5
[DEBUG] 2020-11-30 20:52:25.755 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.matc.entity.Product#6]
[DEBUG] 2020-11-30 20:52:25.756 [http-nio-8080-exec-4] Loader - Result set row: 6
[DEBUG] 2020-11-30 20:52:25.765 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.matc.entity.Product#7]
[DEBUG] 2020-11-30 20:52:25.767 [http-nio-8080-exec-4] Loader - Result set row: 7
[DEBUG] 2020-11-30 20:52:25.767 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.matc.entity.Product#8]
[DEBUG] 2020-11-30 20:52:25.783 [http-nio-8080-exec-4] Loader - Result set row: 8
[DEBUG] 2020-11-30 20:52:25.784 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.matc.entity.Product#9]
[DEBUG] 2020-11-30 20:52:25.785 [http-nio-8080-exec-4] Loader - Result set row: 9
[DEBUG] 2020-11-30 20:52:25.787 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.matc.entity.Product#10]
[DEBUG] 2020-11-30 20:52:25.807 [http-nio-8080-exec-4] Loader - Result set row: 10
[DEBUG] 2020-11-30 20:52:25.807 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.matc.entity.Product#11]
[DEBUG] 2020-11-30 20:52:25.813 [http-nio-8080-exec-4] Loader - Result set row: 11
[DEBUG] 2020-11-30 20:52:25.813 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.matc.entity.Product#12]
[DEBUG] 2020-11-30 20:52:25.822 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#1]
[DEBUG] 2020-11-30 20:52:25.822 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-30 20:52:25.822 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:25.822 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = 2020 Wooden Ornaments with white ribbon
[DEBUG] 2020-11-30 20:52:25.825 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:25.825 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = 2020Ornaments.jpg
[DEBUG] 2020-11-30 20:52:25.825 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:25.825 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = $5
[DEBUG] 2020-11-30 20:52:25.825 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:25.825 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `productionCost` : value = $1
[DEBUG] 2020-11-30 20:52:25.825 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:25.825 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `tags` : value = #ornaments
[DEBUG] 2020-11-30 20:52:25.826 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:25.826 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = 2020 Wooden Ornaments
[DEBUG] 2020-11-30 20:52:25.826 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:25.826 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:25.828 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:25.829 [http-nio-8080-exec-4] SQL - select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, products1_.user_id as user_id9_0_1_, products1_.item_id as item_id1_0_1_, products1_.item_id as item_id1_0_2_, products1_.customizable as customiz2_0_2_, products1_.description as descript3_0_2_, products1_.image as image4_0_2_, products1_.price as price5_0_2_, products1_.production_cost as producti6_0_2_, products1_.tags as tags7_0_2_, products1_.title as title8_0_2_, products1_.user_id as user_id9_0_2_, roles2_.user_id as user_id4_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.email as email2_1_4_, roles2_.role_name as role_nam3_1_4_, roles2_.user_id as user_id4_1_4_ from user user0_ left outer join product products1_ on user0_.user_id=products1_.user_id left outer join role roles2_ on user0_.user_id=roles2_.user_id where user0_.user_id=?
[DEBUG] 2020-11-30 20:52:25.850 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-11-30 20:52:25.850 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:25.851 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:25.851 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:25.851 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2020-11-30 20:52:25.851 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:25.851 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:25.851 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:25.851 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2020-11-30 20:52:25.851 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:25.851 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:25.862 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:25.863 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2020-11-30 20:52:25.863 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:25.863 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:25.867 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:25.867 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2020-11-30 20:52:25.867 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:25.867 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:25.868 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:25.868 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2020-11-30 20:52:25.868 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:25.874 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:25.881 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:25.893 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2020-11-30 20:52:25.893 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:25.898 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:25.898 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:25.898 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2020-11-30 20:52:25.898 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:25.898 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:25.899 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:25.899 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2020-11-30 20:52:25.899 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:25.920 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:25.921 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:25.922 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #9
[DEBUG] 2020-11-30 20:52:25.922 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:25.942 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:25.942 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:25.967 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #10
[DEBUG] 2020-11-30 20:52:25.967 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:25.969 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:25.969 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:26.008 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #11
[DEBUG] 2020-11-30 20:52:26.009 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-11-30 20:52:26.009 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:26.012 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:26.027 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2020-11-30 20:52:26.028 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = esajdak@madisoncollege.edu
[DEBUG] 2020-11-30 20:52:26.028 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.029 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Elizabeth
[DEBUG] 2020-11-30 20:52:26.029 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.029 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Sajdak
[DEBUG] 2020-11-30 20:52:26.029 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.029 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-11-30 20:52:26.029 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.029 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `products` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 20:52:26.029 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`products`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.029 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-11-30 20:52:26.029 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.066 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2020-11-30 20:52:26.067 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Role#1]
[DEBUG] 2020-11-30 20:52:26.072 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = esajdak@madisoncollege.edu
[DEBUG] 2020-11-30 20:52:26.072 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.072 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roleName` : value = admin
[DEBUG] 2020-11-30 20:52:26.072 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roleName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.072 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:26.072 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.073 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Role#1]
[DEBUG] 2020-11-30 20:52:26.073 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.products
[DEBUG] 2020-11-30 20:52:26.087 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.products#1]
[DEBUG] 2020-11-30 20:52:26.087 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.products
[DEBUG] 2020-11-30 20:52:26.087 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: edu.matc.entity.User.roles
[DEBUG] 2020-11-30 20:52:26.087 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.matc.entity.User.roles#1]
[DEBUG] 2020-11-30 20:52:26.087 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: edu.matc.entity.User.roles
[DEBUG] 2020-11-30 20:52:26.088 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-11-30 20:52:26.088 [http-nio-8080-exec-4] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#1
[DEBUG] 2020-11-30 20:52:26.088 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#1]
[DEBUG] 2020-11-30 20:52:26.088 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#2]
[DEBUG] 2020-11-30 20:52:26.088 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-30 20:52:26.088 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.088 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Set of 3 holiday shot glasses perfect for showing your holiday spirit!
[DEBUG] 2020-11-30 20:52:26.088 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.088 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = shotGlasses.jpg
[DEBUG] 2020-11-30 20:52:26.088 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.088 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = $10
[DEBUG] 2020-11-30 20:52:26.088 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.088 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `productionCost` : value = $2
[DEBUG] 2020-11-30 20:52:26.103 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.103 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `tags` : value = #shotglasses
[DEBUG] 2020-11-30 20:52:26.103 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.103 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Holiday Shot Glasses
[DEBUG] 2020-11-30 20:52:26.103 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.103 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:26.103 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.104 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#2]
[DEBUG] 2020-11-30 20:52:26.104 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#3]
[DEBUG] 2020-11-30 20:52:26.104 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `customizable` : value = true
[DEBUG] 2020-11-30 20:52:26.104 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.104 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Custom Made Shirts
[DEBUG] 2020-11-30 20:52:26.104 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.111 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = customShirts.jpg
[DEBUG] 2020-11-30 20:52:26.111 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.111 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = $20
[DEBUG] 2020-11-30 20:52:26.111 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.111 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `productionCost` : value = $8
[DEBUG] 2020-11-30 20:52:26.112 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.118 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:26.118 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.118 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Custom Shirts
[DEBUG] 2020-11-30 20:52:26.118 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.118 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:26.118 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#3]
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#4]
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Set of 6 scary movie character shot glasses
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = halloweenShotGlasses.jpg
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = $10
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `productionCost` : value = $4
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Halloween Shot Glasses
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:26.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.165 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#4]
[DEBUG] 2020-11-30 20:52:26.165 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#5]
[DEBUG] 2020-11-30 20:52:26.165 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-30 20:52:26.165 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.165 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Here for the boos wine glass
[DEBUG] 2020-11-30 20:52:26.165 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.165 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = halloweenWineGlass.jpg
[DEBUG] 2020-11-30 20:52:26.165 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.165 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = $6
[DEBUG] 2020-11-30 20:52:26.165 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.166 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `productionCost` : value = $1
[DEBUG] 2020-11-30 20:52:26.166 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.166 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:26.166 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.166 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Halloween Wine Glass
[DEBUG] 2020-11-30 20:52:26.166 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.166 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:26.166 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.178 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#5]
[DEBUG] 2020-11-30 20:52:26.179 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#6]
[DEBUG] 2020-11-30 20:52:26.179 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Red and black koi fish shirt
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = koiShirt.jpg
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = $15
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `productionCost` : value = $5
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Koi Shirt
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#6]
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#7]
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `customizable` : value = true
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Custom name ornaments
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = nameOrnaments.jpg
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = $10
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `productionCost` : value = $2
[DEBUG] 2020-11-30 20:52:26.180 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Custom Name Ornaments
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#7]
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#8]
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `customizable` : value = true
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Your choice of potholder, you can pick the color as well.
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = potHolders.jpg
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = $8
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `productionCost` : value = $2
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Pot Holders
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#8]
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#9]
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `customizable` : value = true
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Custom santa buckets.
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = santaBuckets.jpg
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = $6
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `productionCost` : value = $2
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.181 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Custom Santa Buckets
[DEBUG] 2020-11-30 20:52:26.201 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.201 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:26.201 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.205 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#9]
[DEBUG] 2020-11-30 20:52:26.205 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#10]
[DEBUG] 2020-11-30 20:52:26.205 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-30 20:52:26.205 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.205 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Set of 6 skull shot glasses
[DEBUG] 2020-11-30 20:52:26.205 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.205 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = skullShotGlasses.jpg
[DEBUG] 2020-11-30 20:52:26.205 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.205 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = $15
[DEBUG] 2020-11-30 20:52:26.205 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.205 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `productionCost` : value = $4
[DEBUG] 2020-11-30 20:52:26.205 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.231 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:26.231 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.231 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Skull Shot Glasses
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#10]
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#11]
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `customizable` : value = false
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Holiday tree tile
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = treeTile.jpg
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = $12
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `productionCost` : value = $1
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.237 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Holiday Tree Tile
[DEBUG] 2020-11-30 20:52:26.238 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.239 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:26.239 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.239 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#11]
[DEBUG] 2020-11-30 20:52:26.239 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.Product#12]
[DEBUG] 2020-11-30 20:52:26.239 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `customizable` : value = true
[DEBUG] 2020-11-30 20:52:26.239 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`customizable`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.239 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Wisconsin mug with a heart in Madison, can move the heart to any city
[DEBUG] 2020-11-30 20:52:26.239 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.248 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = wisconsinMug.jpg
[DEBUG] 2020-11-30 20:52:26.248 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.248 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = $8
[DEBUG] 2020-11-30 20:52:26.252 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.252 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `productionCost` : value = $2
[DEBUG] 2020-11-30 20:52:26.252 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`productionCost`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.252 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `tags` : value = null
[DEBUG] 2020-11-30 20:52:26.253 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`tags`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.253 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `title` : value = Wisconsin Mug
[DEBUG] 2020-11-30 20:52:26.253 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`title`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.253 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-11-30 20:52:26.253 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-11-30 20:52:26.253 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.matc.entity.Product#12]
[DEBUG] 2020-11-30 20:52:26.260 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
