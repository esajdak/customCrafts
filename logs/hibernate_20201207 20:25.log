[DEBUG] 2020-12-07 20:24:54.621 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-12-07 20:24:54.670 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-12-07 20:24:54.714 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-12-07 20:24:55.283 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-12-07 20:24:55.299 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-12-07 20:24:56.066 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-12-07 20:24:56.067 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-12-07 20:24:56.085 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-12-07 20:24:56.714 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-12-07 20:24:56.767 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-12-07 20:24:56.776 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-12-07 20:24:56.849 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-12-07 20:24:56.895 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:24:56.895 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:24:56.895 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:24:56.896 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fb65013
[DEBUG] 2020-12-07 20:24:56.896 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1744a475
[DEBUG] 2020-12-07 20:24:56.897 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2eb917d0
[DEBUG] 2020-12-07 20:24:56.898 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:24:56.903 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:24:56.903 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:24:56.905 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:24:56.909 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:24:56.909 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:24:56.910 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:24:56.911 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:24:56.911 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:24:56.913 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:24:56.918 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:24:56.922 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:24:56.927 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:24:56.927 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:24:56.927 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:24:56.930 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:24:56.930 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:24:56.930 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:24:56.935 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:24:56.936 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:24:56.936 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:24:56.941 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3681037
[DEBUG] 2020-12-07 20:24:56.942 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3681037
[DEBUG] 2020-12-07 20:24:56.944 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f3e7344
[DEBUG] 2020-12-07 20:24:56.944 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f3e7344
[DEBUG] 2020-12-07 20:24:56.945 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@782bf610
[DEBUG] 2020-12-07 20:24:56.945 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@782bf610
[DEBUG] 2020-12-07 20:24:56.945 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ad9e63e
[DEBUG] 2020-12-07 20:24:56.946 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5524b72f
[DEBUG] 2020-12-07 20:24:56.954 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4e6f2bb5
[DEBUG] 2020-12-07 20:24:56.956 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4e6f2bb5
[DEBUG] 2020-12-07 20:24:56.957 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6cd166b8
[DEBUG] 2020-12-07 20:24:56.958 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6cd166b8
[DEBUG] 2020-12-07 20:24:56.976 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@706eab5d
[DEBUG] 2020-12-07 20:24:56.977 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@706eab5d
[DEBUG] 2020-12-07 20:24:56.981 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@61f39bb
[DEBUG] 2020-12-07 20:24:56.981 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@61f39bb
[DEBUG] 2020-12-07 20:24:56.983 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d654825
[DEBUG] 2020-12-07 20:24:56.983 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d654825
[DEBUG] 2020-12-07 20:24:56.985 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b0fc838
[DEBUG] 2020-12-07 20:24:56.985 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b0fc838
[DEBUG] 2020-12-07 20:24:56.989 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2954b5ea
[DEBUG] 2020-12-07 20:24:56.989 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2954b5ea
[DEBUG] 2020-12-07 20:24:56.993 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3ab6678b
[DEBUG] 2020-12-07 20:24:56.995 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3ab6678b
[DEBUG] 2020-12-07 20:24:56.999 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642505c7
[DEBUG] 2020-12-07 20:24:57.000 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642505c7
[DEBUG] 2020-12-07 20:24:57.003 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1abfe081
[DEBUG] 2020-12-07 20:24:57.004 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1abfe081
[DEBUG] 2020-12-07 20:24:57.006 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@77d680e6
[DEBUG] 2020-12-07 20:24:57.006 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77d680e6
[DEBUG] 2020-12-07 20:24:57.010 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:24:57.010 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:24:57.010 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:24:57.014 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5cb5bb88
[DEBUG] 2020-12-07 20:24:57.017 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:24:57.018 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:24:57.018 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:24:57.021 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2dd8239
[DEBUG] 2020-12-07 20:24:57.023 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3f92a84e
[DEBUG] 2020-12-07 20:24:57.023 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f92a84e
[DEBUG] 2020-12-07 20:24:57.027 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5fcfca62
[DEBUG] 2020-12-07 20:24:57.027 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fcfca62
[DEBUG] 2020-12-07 20:24:57.028 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5b051a5c
[DEBUG] 2020-12-07 20:24:57.028 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5b051a5c
[DEBUG] 2020-12-07 20:24:57.032 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@10641c09
[DEBUG] 2020-12-07 20:24:57.032 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10641c09
[DEBUG] 2020-12-07 20:24:57.036 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@764cba
[DEBUG] 2020-12-07 20:24:57.036 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@764cba
[DEBUG] 2020-12-07 20:24:57.037 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3872bc37
[DEBUG] 2020-12-07 20:24:57.038 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:24:57.039 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:24:57.039 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:24:57.039 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:24:57.048 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:24:57.049 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:24:57.053 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@70f822e
[DEBUG] 2020-12-07 20:24:57.054 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@17a703f5
[DEBUG] 2020-12-07 20:24:57.055 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:24:57.056 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:24:57.056 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:24:57.058 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:24:57.058 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:24:57.058 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:24:57.059 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3e1a3801
[DEBUG] 2020-12-07 20:24:57.059 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@222afc67
[DEBUG] 2020-12-07 20:24:57.065 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@670d4d38
[DEBUG] 2020-12-07 20:24:57.065 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@670d4d38
[DEBUG] 2020-12-07 20:24:57.066 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e060819
[DEBUG] 2020-12-07 20:24:57.067 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5633dafd
[DEBUG] 2020-12-07 20:24:57.067 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5633dafd
[DEBUG] 2020-12-07 20:24:57.073 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@d8d9199
[DEBUG] 2020-12-07 20:24:57.073 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@d8d9199
[DEBUG] 2020-12-07 20:24:57.073 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71ad3d8a
[DEBUG] 2020-12-07 20:24:57.076 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@13da7ab0
[DEBUG] 2020-12-07 20:24:57.079 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@81b5db0
[DEBUG] 2020-12-07 20:24:57.087 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7173ae5b
[DEBUG] 2020-12-07 20:24:57.090 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7173ae5b
[DEBUG] 2020-12-07 20:24:57.091 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4d192aef
[DEBUG] 2020-12-07 20:24:57.094 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1416cf9f
[DEBUG] 2020-12-07 20:24:57.094 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@84487f4
[DEBUG] 2020-12-07 20:24:57.094 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@bfc14b9
[DEBUG] 2020-12-07 20:24:57.094 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@fb6097b
[DEBUG] 2020-12-07 20:24:57.094 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2dfe5525
[DEBUG] 2020-12-07 20:24:57.094 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1290c49
[DEBUG] 2020-12-07 20:24:57.094 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6a9b9909
[DEBUG] 2020-12-07 20:24:57.165 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-12-07 20:24:57.166 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-12-07 20:24:57.167 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-07 20:24:57.168 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-07 20:24:57.169 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-12-07 20:24:57.174 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-12-07 20:24:57.174 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-12-07 20:24:57.180 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-07 20:24:57.181 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-12-07 20:24:57.182 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-12-07 20:24:57.183 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-12-07 20:24:57.185 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-12-07 20:24:57.186 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-07 20:24:57.187 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-12-07 20:24:57.202 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test?serverTimezone=UTC
[INFO ] 2020-12-07 20:24:57.202 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-12-07 20:24:57.202 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-12-07 20:24:57.684 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-12-07 20:24:58.004 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-12-07 20:24:58.013 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-12-07 20:24:58.013 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-12-07 20:24:58.145 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-12-07 20:24:58.182 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-12-07 20:24:58.274 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-12-07 20:24:58.373 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-12-07 20:24:58.384 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58a2b917] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48904d5a]
[DEBUG] 2020-12-07 20:24:58.529 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Product
[DEBUG] 2020-12-07 20:24:58.592 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:24:58.604 [main] EntityBinder - Import with entity name Product
[DEBUG] 2020-12-07 20:24:58.615 [main] EntityBinder - Bind entity edu.matc.entity.Product on table product
[DEBUG] 2020-12-07 20:24:58.678 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=item_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.687 [main] PropertyBinder - MetadataSourceProcessor property itemId with lazy=false
[DEBUG] 2020-12-07 20:24:58.689 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:itemId]
[DEBUG] 2020-12-07 20:24:58.696 [main] SimpleValueBinder - building SimpleValue for itemId
[DEBUG] 2020-12-07 20:24:58.701 [main] PropertyBinder - Building property itemId
[DEBUG] 2020-12-07 20:24:58.704 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(item_id)]), itemId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:24:58.710 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=customizable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.713 [main] PropertyBinder - MetadataSourceProcessor property customizable with lazy=false
[DEBUG] 2020-12-07 20:24:58.714 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:customizable]
[DEBUG] 2020-12-07 20:24:58.714 [main] SimpleValueBinder - building SimpleValue for customizable
[DEBUG] 2020-12-07 20:24:58.714 [main] PropertyBinder - Building property customizable
[DEBUG] 2020-12-07 20:24:58.722 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.722 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-12-07 20:24:58.722 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:description]
[DEBUG] 2020-12-07 20:24:58.723 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-12-07 20:24:58.723 [main] PropertyBinder - Building property description
[DEBUG] 2020-12-07 20:24:58.724 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.725 [main] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2020-12-07 20:24:58.725 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:image]
[DEBUG] 2020-12-07 20:24:58.725 [main] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2020-12-07 20:24:58.725 [main] PropertyBinder - Building property image
[DEBUG] 2020-12-07 20:24:58.732 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:24:58.734 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=orderItems, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.737 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.757 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.759 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=orderItems_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.760 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orderItems_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:24:58.761 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:24:58.763 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:24:58.768 [main] CollectionBinder - Collection role: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:24:58.777 [main] PropertyBinder - Building property orderItems
[DEBUG] 2020-12-07 20:24:58.777 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.778 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-12-07 20:24:58.778 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:price]
[DEBUG] 2020-12-07 20:24:58.778 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-12-07 20:24:58.778 [main] PropertyBinder - Building property price
[DEBUG] 2020-12-07 20:24:58.779 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=production_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.779 [main] PropertyBinder - MetadataSourceProcessor property productionCost with lazy=false
[DEBUG] 2020-12-07 20:24:58.779 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:productionCost]
[DEBUG] 2020-12-07 20:24:58.779 [main] SimpleValueBinder - building SimpleValue for productionCost
[DEBUG] 2020-12-07 20:24:58.779 [main] PropertyBinder - Building property productionCost
[DEBUG] 2020-12-07 20:24:58.780 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=tags, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.780 [main] PropertyBinder - MetadataSourceProcessor property tags with lazy=false
[DEBUG] 2020-12-07 20:24:58.780 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:tags]
[DEBUG] 2020-12-07 20:24:58.780 [main] SimpleValueBinder - building SimpleValue for tags
[DEBUG] 2020-12-07 20:24:58.780 [main] PropertyBinder - Building property tags
[DEBUG] 2020-12-07 20:24:58.781 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.781 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-12-07 20:24:58.783 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:title]
[DEBUG] 2020-12-07 20:24:58.783 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-12-07 20:24:58.783 [main] PropertyBinder - Building property title
[DEBUG] 2020-12-07 20:24:58.784 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-07 20:24:58.784 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.786 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-07 20:24:58.791 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-12-07 20:24:58.792 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:24:58.792 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-12-07 20:24:58.793 [main] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2020-12-07 20:24:58.807 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.807 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-12-07 20:24:58.807 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-12-07 20:24:58.807 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-12-07 20:24:58.807 [main] PropertyBinder - Building property userId
[DEBUG] 2020-12-07 20:24:58.808 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:24:58.808 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.808 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-07 20:24:58.808 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2020-12-07 20:24:58.808 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-07 20:24:58.808 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-07 20:24:58.808 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.808 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-12-07 20:24:58.808 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2020-12-07 20:24:58.808 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-12-07 20:24:58.808 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-12-07 20:24:58.808 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.809 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-12-07 20:24:58.809 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2020-12-07 20:24:58.809 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-12-07 20:24:58.809 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-12-07 20:24:58.809 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:58.812 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.812 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.812 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.812 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.813 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:24:58.813 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:58.813 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:58.813 [main] CollectionBinder - Collection role: edu.matc.entity.User.orders
[DEBUG] 2020-12-07 20:24:58.815 [main] PropertyBinder - Building property orders
[DEBUG] 2020-12-07 20:24:58.815 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.815 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-12-07 20:24:58.816 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2020-12-07 20:24:58.816 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-12-07 20:24:58.816 [main] PropertyBinder - Building property password
[DEBUG] 2020-12-07 20:24:58.816 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:58.816 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.816 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.817 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.819 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.820 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:24:58.825 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:58.826 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:58.827 [main] CollectionBinder - Collection role: edu.matc.entity.User.products
[DEBUG] 2020-12-07 20:24:58.827 [main] PropertyBinder - Building property products
[DEBUG] 2020-12-07 20:24:58.828 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:58.828 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.828 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.828 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.828 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.829 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:24:58.829 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:58.829 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:58.829 [main] CollectionBinder - Collection role: edu.matc.entity.User.roles
[DEBUG] 2020-12-07 20:24:58.829 [main] PropertyBinder - Building property roles
[DEBUG] 2020-12-07 20:24:58.829 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Role
[DEBUG] 2020-12-07 20:24:58.829 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:24:58.829 [main] EntityBinder - Import with entity name Role
[DEBUG] 2020-12-07 20:24:58.829 [main] EntityBinder - Bind entity edu.matc.entity.Role on table role
[DEBUG] 2020-12-07 20:24:58.830 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.830 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-07 20:24:58.830 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:id]
[DEBUG] 2020-12-07 20:24:58.830 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-07 20:24:58.830 [main] PropertyBinder - Building property id
[DEBUG] 2020-12-07 20:24:58.830 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:24:58.830 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.830 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-07 20:24:58.831 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:email]
[DEBUG] 2020-12-07 20:24:58.831 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-07 20:24:58.831 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-07 20:24:58.831 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.831 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-12-07 20:24:58.831 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:roleName]
[DEBUG] 2020-12-07 20:24:58.831 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-12-07 20:24:58.831 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-12-07 20:24:58.831 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-07 20:24:58.831 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:58.831 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-07 20:24:58.838 [main] SimpleValueBinder - Starting fillSimpleValue for itemId
[DEBUG] 2020-12-07 20:24:58.838 [main] SimpleValueBinder - Starting fillSimpleValue for customizable
[DEBUG] 2020-12-07 20:24:58.838 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-12-07 20:24:58.838 [main] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2020-12-07 20:24:58.838 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-12-07 20:24:58.838 [main] SimpleValueBinder - Starting fillSimpleValue for productionCost
[DEBUG] 2020-12-07 20:24:58.838 [main] SimpleValueBinder - Starting fillSimpleValue for tags
[DEBUG] 2020-12-07 20:24:58.838 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-12-07 20:24:58.838 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-12-07 20:24:58.838 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-07 20:24:58.838 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-12-07 20:24:58.838 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-12-07 20:24:58.838 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-12-07 20:24:58.838 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-07 20:24:58.839 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-07 20:24:58.839 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-12-07 20:24:58.847 [main] PrimaryKey - Forcing column [item_id] to be non-null as it is part of the primary key for table [product]
[DEBUG] 2020-12-07 20:24:58.849 [main] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-12-07 20:24:58.849 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-12-07 20:24:58.850 [main] CollectionSecondPass - Second pass for collection: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:24:58.850 [main] CollectionBinder - Binding a collection of element: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:24:59.010 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-12-07 20:24:59.010 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-12-07 20:24:59.010 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-12-07 20:24:59.023 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-12-07 20:24:59.023 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-12-07 20:24:59.028 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-12-07 20:24:59.101 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-12-07 20:24:59.102 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-12-07 20:24:59.102 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-12-07 20:24:59.102 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:24:59.102 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:24:59.103 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:24:59.103 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fb65013
[DEBUG] 2020-12-07 20:24:59.105 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1744a475
[DEBUG] 2020-12-07 20:24:59.105 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2eb917d0
[DEBUG] 2020-12-07 20:24:59.105 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:24:59.105 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:24:59.105 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:24:59.106 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:24:59.106 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:24:59.106 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:24:59.106 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:24:59.106 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:24:59.106 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:24:59.106 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:24:59.106 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:24:59.106 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:24:59.106 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:24:59.106 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:24:59.107 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:24:59.107 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:24:59.107 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:24:59.107 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:24:59.107 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:24:59.107 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:24:59.107 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:24:59.107 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3681037
[DEBUG] 2020-12-07 20:24:59.107 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3681037
[DEBUG] 2020-12-07 20:24:59.107 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f3e7344
[DEBUG] 2020-12-07 20:24:59.107 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f3e7344
[DEBUG] 2020-12-07 20:24:59.107 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@782bf610
[DEBUG] 2020-12-07 20:24:59.107 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@782bf610
[DEBUG] 2020-12-07 20:24:59.107 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ad9e63e
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5524b72f
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4e6f2bb5
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4e6f2bb5
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6cd166b8
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6cd166b8
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@706eab5d
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@706eab5d
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@61f39bb
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@61f39bb
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d654825
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d654825
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b0fc838
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b0fc838
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2954b5ea
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2954b5ea
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3ab6678b
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3ab6678b
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642505c7
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642505c7
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1abfe081
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1abfe081
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@77d680e6
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77d680e6
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:24:59.108 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:24:59.115 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:24:59.120 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5cb5bb88
[DEBUG] 2020-12-07 20:24:59.120 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:24:59.120 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:24:59.120 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:24:59.120 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2dd8239
[DEBUG] 2020-12-07 20:24:59.122 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3f92a84e
[DEBUG] 2020-12-07 20:24:59.123 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f92a84e
[DEBUG] 2020-12-07 20:24:59.123 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5fcfca62
[DEBUG] 2020-12-07 20:24:59.123 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fcfca62
[DEBUG] 2020-12-07 20:24:59.123 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5b051a5c
[DEBUG] 2020-12-07 20:24:59.123 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5b051a5c
[DEBUG] 2020-12-07 20:24:59.123 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@10641c09
[DEBUG] 2020-12-07 20:24:59.123 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10641c09
[DEBUG] 2020-12-07 20:24:59.123 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@764cba
[DEBUG] 2020-12-07 20:24:59.123 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@764cba
[DEBUG] 2020-12-07 20:24:59.123 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3872bc37
[DEBUG] 2020-12-07 20:24:59.123 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:24:59.123 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:24:59.125 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:24:59.125 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:24:59.125 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:24:59.125 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:24:59.125 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@70f822e
[DEBUG] 2020-12-07 20:24:59.125 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@17a703f5
[DEBUG] 2020-12-07 20:24:59.125 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:24:59.125 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:24:59.125 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:24:59.125 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:24:59.125 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:24:59.125 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:24:59.125 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3e1a3801
[DEBUG] 2020-12-07 20:24:59.126 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@222afc67
[DEBUG] 2020-12-07 20:24:59.126 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@670d4d38
[DEBUG] 2020-12-07 20:24:59.126 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@670d4d38
[DEBUG] 2020-12-07 20:24:59.126 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e060819
[DEBUG] 2020-12-07 20:24:59.126 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5633dafd
[DEBUG] 2020-12-07 20:24:59.126 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5633dafd
[DEBUG] 2020-12-07 20:24:59.126 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@d8d9199
[DEBUG] 2020-12-07 20:24:59.126 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@d8d9199
[DEBUG] 2020-12-07 20:24:59.126 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71ad3d8a
[DEBUG] 2020-12-07 20:24:59.126 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@13da7ab0
[DEBUG] 2020-12-07 20:24:59.126 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@81b5db0
[DEBUG] 2020-12-07 20:24:59.126 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7173ae5b
[DEBUG] 2020-12-07 20:24:59.126 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7173ae5b
[DEBUG] 2020-12-07 20:24:59.127 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3472947a
[DEBUG] 2020-12-07 20:24:59.127 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@69d3cf7e
[DEBUG] 2020-12-07 20:24:59.127 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a3ed300
[DEBUG] 2020-12-07 20:24:59.127 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1984212d
[DEBUG] 2020-12-07 20:24:59.127 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@39f5b723
[DEBUG] 2020-12-07 20:24:59.127 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4eaa375c
[DEBUG] 2020-12-07 20:24:59.127 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2404b5a
[DEBUG] 2020-12-07 20:24:59.127 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3af58f76
[DEBUG] 2020-12-07 20:24:59.132 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-12-07 20:24:59.134 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-12-07 20:24:59.134 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-07 20:24:59.134 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-07 20:24:59.135 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-12-07 20:24:59.135 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-12-07 20:24:59.135 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-12-07 20:24:59.135 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-07 20:24:59.135 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-12-07 20:24:59.135 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-12-07 20:24:59.135 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-12-07 20:24:59.135 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-12-07 20:24:59.135 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-07 20:24:59.135 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-12-07 20:24:59.137 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test?serverTimezone=UTC
[INFO ] 2020-12-07 20:24:59.137 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-12-07 20:24:59.137 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-12-07 20:24:59.204 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-12-07 20:24:59.339 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-12-07 20:24:59.339 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-12-07 20:24:59.339 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-12-07 20:24:59.339 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-12-07 20:24:59.340 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-12-07 20:24:59.340 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-12-07 20:24:59.368 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-12-07 20:24:59.386 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7c20cdd0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74606204]
[DEBUG] 2020-12-07 20:24:59.387 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Product
[DEBUG] 2020-12-07 20:24:59.387 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:24:59.387 [main] EntityBinder - Import with entity name Product
[DEBUG] 2020-12-07 20:24:59.387 [main] EntityBinder - Bind entity edu.matc.entity.Product on table product
[DEBUG] 2020-12-07 20:24:59.388 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=item_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.388 [main] PropertyBinder - MetadataSourceProcessor property itemId with lazy=false
[DEBUG] 2020-12-07 20:24:59.388 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:itemId]
[DEBUG] 2020-12-07 20:24:59.388 [main] SimpleValueBinder - building SimpleValue for itemId
[DEBUG] 2020-12-07 20:24:59.388 [main] PropertyBinder - Building property itemId
[DEBUG] 2020-12-07 20:24:59.388 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(item_id)]), itemId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:24:59.388 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=customizable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.388 [main] PropertyBinder - MetadataSourceProcessor property customizable with lazy=false
[DEBUG] 2020-12-07 20:24:59.388 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:customizable]
[DEBUG] 2020-12-07 20:24:59.389 [main] SimpleValueBinder - building SimpleValue for customizable
[DEBUG] 2020-12-07 20:24:59.389 [main] PropertyBinder - Building property customizable
[DEBUG] 2020-12-07 20:24:59.389 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.389 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-12-07 20:24:59.389 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:description]
[DEBUG] 2020-12-07 20:24:59.389 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-12-07 20:24:59.389 [main] PropertyBinder - Building property description
[DEBUG] 2020-12-07 20:24:59.389 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.398 [main] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2020-12-07 20:24:59.399 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:image]
[DEBUG] 2020-12-07 20:24:59.399 [main] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2020-12-07 20:24:59.399 [main] PropertyBinder - Building property image
[DEBUG] 2020-12-07 20:24:59.399 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:24:59.399 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=orderItems, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.399 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.399 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.399 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=orderItems_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.399 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orderItems_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:24:59.399 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:24:59.400 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:24:59.400 [main] CollectionBinder - Collection role: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:24:59.400 [main] PropertyBinder - Building property orderItems
[DEBUG] 2020-12-07 20:24:59.400 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.400 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-12-07 20:24:59.400 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:price]
[DEBUG] 2020-12-07 20:24:59.400 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-12-07 20:24:59.410 [main] PropertyBinder - Building property price
[DEBUG] 2020-12-07 20:24:59.410 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=production_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.410 [main] PropertyBinder - MetadataSourceProcessor property productionCost with lazy=false
[DEBUG] 2020-12-07 20:24:59.411 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:productionCost]
[DEBUG] 2020-12-07 20:24:59.411 [main] SimpleValueBinder - building SimpleValue for productionCost
[DEBUG] 2020-12-07 20:24:59.411 [main] PropertyBinder - Building property productionCost
[DEBUG] 2020-12-07 20:24:59.411 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=tags, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.411 [main] PropertyBinder - MetadataSourceProcessor property tags with lazy=false
[DEBUG] 2020-12-07 20:24:59.411 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:tags]
[DEBUG] 2020-12-07 20:24:59.411 [main] SimpleValueBinder - building SimpleValue for tags
[DEBUG] 2020-12-07 20:24:59.411 [main] PropertyBinder - Building property tags
[DEBUG] 2020-12-07 20:24:59.411 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.411 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-12-07 20:24:59.411 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:title]
[DEBUG] 2020-12-07 20:24:59.411 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-12-07 20:24:59.411 [main] PropertyBinder - Building property title
[DEBUG] 2020-12-07 20:24:59.411 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-07 20:24:59.411 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.412 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-07 20:24:59.412 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-12-07 20:24:59.412 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:24:59.412 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-12-07 20:24:59.412 [main] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2020-12-07 20:24:59.428 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.428 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-12-07 20:24:59.428 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-12-07 20:24:59.428 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-12-07 20:24:59.428 [main] PropertyBinder - Building property userId
[DEBUG] 2020-12-07 20:24:59.428 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:24:59.428 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.428 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-07 20:24:59.428 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2020-12-07 20:24:59.428 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-07 20:24:59.429 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-07 20:24:59.429 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.429 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-12-07 20:24:59.429 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2020-12-07 20:24:59.438 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-12-07 20:24:59.438 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-12-07 20:24:59.438 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.438 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-12-07 20:24:59.438 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2020-12-07 20:24:59.438 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-12-07 20:24:59.439 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-12-07 20:24:59.439 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:59.439 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.440 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.456 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.462 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.466 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:24:59.466 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:59.466 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:59.467 [main] CollectionBinder - Collection role: edu.matc.entity.User.orders
[DEBUG] 2020-12-07 20:24:59.467 [main] PropertyBinder - Building property orders
[DEBUG] 2020-12-07 20:24:59.467 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.467 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-12-07 20:24:59.467 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2020-12-07 20:24:59.467 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-12-07 20:24:59.467 [main] PropertyBinder - Building property password
[DEBUG] 2020-12-07 20:24:59.467 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:59.467 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.467 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.467 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.467 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.467 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:24:59.468 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:59.468 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:59.468 [main] CollectionBinder - Collection role: edu.matc.entity.User.products
[DEBUG] 2020-12-07 20:24:59.468 [main] PropertyBinder - Building property products
[DEBUG] 2020-12-07 20:24:59.468 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:59.468 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.468 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.468 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.468 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.468 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:24:59.468 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:59.468 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:24:59.468 [main] CollectionBinder - Collection role: edu.matc.entity.User.roles
[DEBUG] 2020-12-07 20:24:59.468 [main] PropertyBinder - Building property roles
[DEBUG] 2020-12-07 20:24:59.468 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Role
[DEBUG] 2020-12-07 20:24:59.468 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:24:59.469 [main] EntityBinder - Import with entity name Role
[DEBUG] 2020-12-07 20:24:59.469 [main] EntityBinder - Bind entity edu.matc.entity.Role on table role
[DEBUG] 2020-12-07 20:24:59.481 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.481 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-07 20:24:59.481 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:id]
[DEBUG] 2020-12-07 20:24:59.481 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-07 20:24:59.482 [main] PropertyBinder - Building property id
[DEBUG] 2020-12-07 20:24:59.482 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:24:59.482 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.482 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-07 20:24:59.482 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:email]
[DEBUG] 2020-12-07 20:24:59.482 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-07 20:24:59.482 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-07 20:24:59.482 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.482 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-12-07 20:24:59.482 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:roleName]
[DEBUG] 2020-12-07 20:24:59.482 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-12-07 20:24:59.482 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-12-07 20:24:59.482 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-07 20:24:59.482 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.482 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for itemId
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for customizable
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for productionCost
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for tags
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-07 20:24:59.483 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-07 20:24:59.484 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-12-07 20:24:59.488 [main] PrimaryKey - Forcing column [item_id] to be non-null as it is part of the primary key for table [product]
[DEBUG] 2020-12-07 20:24:59.489 [main] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-12-07 20:24:59.490 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-12-07 20:24:59.490 [main] CollectionSecondPass - Second pass for collection: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:24:59.490 [main] CollectionBinder - Binding a collection of element: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:24:59.610 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-12-07 20:24:59.610 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-12-07 20:24:59.610 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-12-07 20:24:59.626 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-12-07 20:24:59.627 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-12-07 20:24:59.631 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-12-07 20:24:59.716 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-12-07 20:24:59.717 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-12-07 20:24:59.717 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-12-07 20:24:59.718 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:24:59.718 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:24:59.718 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:24:59.718 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fb65013
[DEBUG] 2020-12-07 20:24:59.718 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1744a475
[DEBUG] 2020-12-07 20:24:59.718 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2eb917d0
[DEBUG] 2020-12-07 20:24:59.718 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:24:59.719 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:24:59.719 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:24:59.719 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:24:59.723 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3681037
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3681037
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f3e7344
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f3e7344
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@782bf610
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@782bf610
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ad9e63e
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5524b72f
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4e6f2bb5
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4e6f2bb5
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6cd166b8
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6cd166b8
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@706eab5d
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@706eab5d
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@61f39bb
[DEBUG] 2020-12-07 20:24:59.724 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@61f39bb
[DEBUG] 2020-12-07 20:24:59.728 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d654825
[DEBUG] 2020-12-07 20:24:59.728 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d654825
[DEBUG] 2020-12-07 20:24:59.728 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b0fc838
[DEBUG] 2020-12-07 20:24:59.728 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b0fc838
[DEBUG] 2020-12-07 20:24:59.728 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2954b5ea
[DEBUG] 2020-12-07 20:24:59.728 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2954b5ea
[DEBUG] 2020-12-07 20:24:59.728 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3ab6678b
[DEBUG] 2020-12-07 20:24:59.728 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3ab6678b
[DEBUG] 2020-12-07 20:24:59.728 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642505c7
[DEBUG] 2020-12-07 20:24:59.728 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642505c7
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1abfe081
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1abfe081
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@77d680e6
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77d680e6
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5cb5bb88
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2dd8239
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3f92a84e
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f92a84e
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5fcfca62
[DEBUG] 2020-12-07 20:24:59.729 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fcfca62
[DEBUG] 2020-12-07 20:24:59.732 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5b051a5c
[DEBUG] 2020-12-07 20:24:59.732 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5b051a5c
[DEBUG] 2020-12-07 20:24:59.732 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@10641c09
[DEBUG] 2020-12-07 20:24:59.732 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10641c09
[DEBUG] 2020-12-07 20:24:59.732 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@764cba
[DEBUG] 2020-12-07 20:24:59.732 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@764cba
[DEBUG] 2020-12-07 20:24:59.732 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3872bc37
[DEBUG] 2020-12-07 20:24:59.732 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:24:59.732 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:24:59.732 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:24:59.732 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:24:59.732 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:24:59.732 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@70f822e
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@17a703f5
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3e1a3801
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@222afc67
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@670d4d38
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@670d4d38
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e060819
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5633dafd
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5633dafd
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@d8d9199
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@d8d9199
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71ad3d8a
[DEBUG] 2020-12-07 20:24:59.733 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@13da7ab0
[DEBUG] 2020-12-07 20:24:59.735 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@81b5db0
[DEBUG] 2020-12-07 20:24:59.736 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7173ae5b
[DEBUG] 2020-12-07 20:24:59.736 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7173ae5b
[DEBUG] 2020-12-07 20:24:59.736 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@448b808a
[DEBUG] 2020-12-07 20:24:59.736 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7e62cfa3
[DEBUG] 2020-12-07 20:24:59.736 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46e190ed
[DEBUG] 2020-12-07 20:24:59.736 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383c3eb3
[DEBUG] 2020-12-07 20:24:59.736 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@20ab76ee
[DEBUG] 2020-12-07 20:24:59.736 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@485caa8f
[DEBUG] 2020-12-07 20:24:59.736 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2703d91
[DEBUG] 2020-12-07 20:24:59.736 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5be052ca
[DEBUG] 2020-12-07 20:24:59.739 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-12-07 20:24:59.739 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-12-07 20:24:59.740 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-07 20:24:59.740 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-07 20:24:59.740 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-12-07 20:24:59.740 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-12-07 20:24:59.740 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-12-07 20:24:59.740 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-07 20:24:59.740 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-12-07 20:24:59.740 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-12-07 20:24:59.740 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-12-07 20:24:59.740 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-12-07 20:24:59.740 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-07 20:24:59.740 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-12-07 20:24:59.740 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test?serverTimezone=UTC
[INFO ] 2020-12-07 20:24:59.740 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-12-07 20:24:59.740 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-12-07 20:24:59.797 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-12-07 20:24:59.925 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-12-07 20:24:59.925 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-12-07 20:24:59.925 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-12-07 20:24:59.925 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-12-07 20:24:59.925 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-12-07 20:24:59.926 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-12-07 20:24:59.973 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-12-07 20:24:59.982 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@65bb6275] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@64da6cbd]
[DEBUG] 2020-12-07 20:24:59.983 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Product
[DEBUG] 2020-12-07 20:24:59.983 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:24:59.983 [main] EntityBinder - Import with entity name Product
[DEBUG] 2020-12-07 20:24:59.983 [main] EntityBinder - Bind entity edu.matc.entity.Product on table product
[DEBUG] 2020-12-07 20:24:59.984 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=item_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.984 [main] PropertyBinder - MetadataSourceProcessor property itemId with lazy=false
[DEBUG] 2020-12-07 20:24:59.984 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:itemId]
[DEBUG] 2020-12-07 20:24:59.984 [main] SimpleValueBinder - building SimpleValue for itemId
[DEBUG] 2020-12-07 20:24:59.984 [main] PropertyBinder - Building property itemId
[DEBUG] 2020-12-07 20:24:59.984 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(item_id)]), itemId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:24:59.984 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=customizable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.984 [main] PropertyBinder - MetadataSourceProcessor property customizable with lazy=false
[DEBUG] 2020-12-07 20:24:59.984 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:customizable]
[DEBUG] 2020-12-07 20:24:59.984 [main] SimpleValueBinder - building SimpleValue for customizable
[DEBUG] 2020-12-07 20:24:59.984 [main] PropertyBinder - Building property customizable
[DEBUG] 2020-12-07 20:24:59.984 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.984 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-12-07 20:24:59.984 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:description]
[DEBUG] 2020-12-07 20:24:59.993 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-12-07 20:24:59.994 [main] PropertyBinder - Building property description
[DEBUG] 2020-12-07 20:24:59.994 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.994 [main] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2020-12-07 20:24:59.994 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:image]
[DEBUG] 2020-12-07 20:24:59.994 [main] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2020-12-07 20:24:59.994 [main] PropertyBinder - Building property image
[DEBUG] 2020-12-07 20:24:59.994 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:24:59.994 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=orderItems, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.994 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.994 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.994 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=orderItems_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.994 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orderItems_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:24:59.994 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:24:59.994 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:24:59.995 [main] CollectionBinder - Collection role: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:24:59.995 [main] PropertyBinder - Building property orderItems
[DEBUG] 2020-12-07 20:24:59.995 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.995 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-12-07 20:24:59.995 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:price]
[DEBUG] 2020-12-07 20:24:59.995 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-12-07 20:24:59.995 [main] PropertyBinder - Building property price
[DEBUG] 2020-12-07 20:24:59.995 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=production_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.995 [main] PropertyBinder - MetadataSourceProcessor property productionCost with lazy=false
[DEBUG] 2020-12-07 20:24:59.995 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:productionCost]
[DEBUG] 2020-12-07 20:24:59.996 [main] SimpleValueBinder - building SimpleValue for productionCost
[DEBUG] 2020-12-07 20:24:59.996 [main] PropertyBinder - Building property productionCost
[DEBUG] 2020-12-07 20:24:59.996 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=tags, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.996 [main] PropertyBinder - MetadataSourceProcessor property tags with lazy=false
[DEBUG] 2020-12-07 20:24:59.996 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:tags]
[DEBUG] 2020-12-07 20:24:59.996 [main] SimpleValueBinder - building SimpleValue for tags
[DEBUG] 2020-12-07 20:24:59.996 [main] PropertyBinder - Building property tags
[DEBUG] 2020-12-07 20:24:59.996 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.996 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-12-07 20:24:59.996 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:title]
[DEBUG] 2020-12-07 20:24:59.996 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-12-07 20:24:59.996 [main] PropertyBinder - Building property title
[DEBUG] 2020-12-07 20:24:59.996 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-07 20:24:59.996 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:24:59.996 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-07 20:24:59.996 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-12-07 20:25:00.017 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:25:00.018 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-12-07 20:25:00.018 [main] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2020-12-07 20:25:00.021 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.022 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-12-07 20:25:00.022 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-12-07 20:25:00.022 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-12-07 20:25:00.022 [main] PropertyBinder - Building property userId
[DEBUG] 2020-12-07 20:25:00.022 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:25:00.022 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.022 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-07 20:25:00.022 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2020-12-07 20:25:00.022 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-07 20:25:00.022 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-07 20:25:00.022 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.022 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-12-07 20:25:00.022 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2020-12-07 20:25:00.022 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-12-07 20:25:00.022 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-12-07 20:25:00.022 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.023 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-12-07 20:25:00.023 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2020-12-07 20:25:00.023 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-12-07 20:25:00.023 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-12-07 20:25:00.023 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.023 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.023 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.023 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.023 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.023 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:00.023 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.023 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.023 [main] CollectionBinder - Collection role: edu.matc.entity.User.orders
[DEBUG] 2020-12-07 20:25:00.023 [main] PropertyBinder - Building property orders
[DEBUG] 2020-12-07 20:25:00.023 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.023 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-12-07 20:25:00.023 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2020-12-07 20:25:00.023 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-12-07 20:25:00.024 [main] PropertyBinder - Building property password
[DEBUG] 2020-12-07 20:25:00.024 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.024 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.024 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.024 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.024 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.024 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:00.024 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.024 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.024 [main] CollectionBinder - Collection role: edu.matc.entity.User.products
[DEBUG] 2020-12-07 20:25:00.024 [main] PropertyBinder - Building property products
[DEBUG] 2020-12-07 20:25:00.024 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.024 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.024 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.024 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.025 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.025 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:00.025 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.025 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.025 [main] CollectionBinder - Collection role: edu.matc.entity.User.roles
[DEBUG] 2020-12-07 20:25:00.025 [main] PropertyBinder - Building property roles
[DEBUG] 2020-12-07 20:25:00.025 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Role
[DEBUG] 2020-12-07 20:25:00.025 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:25:00.025 [main] EntityBinder - Import with entity name Role
[DEBUG] 2020-12-07 20:25:00.025 [main] EntityBinder - Bind entity edu.matc.entity.Role on table role
[DEBUG] 2020-12-07 20:25:00.047 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.051 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-07 20:25:00.052 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:id]
[DEBUG] 2020-12-07 20:25:00.052 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-07 20:25:00.052 [main] PropertyBinder - Building property id
[DEBUG] 2020-12-07 20:25:00.052 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:25:00.052 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.052 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-07 20:25:00.053 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:email]
[DEBUG] 2020-12-07 20:25:00.053 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-07 20:25:00.053 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-07 20:25:00.053 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.053 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-12-07 20:25:00.053 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:roleName]
[DEBUG] 2020-12-07 20:25:00.053 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-12-07 20:25:00.053 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-12-07 20:25:00.053 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-07 20:25:00.053 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.065 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-07 20:25:00.066 [main] SimpleValueBinder - Starting fillSimpleValue for itemId
[DEBUG] 2020-12-07 20:25:00.066 [main] SimpleValueBinder - Starting fillSimpleValue for customizable
[DEBUG] 2020-12-07 20:25:00.066 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-12-07 20:25:00.069 [main] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2020-12-07 20:25:00.070 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-12-07 20:25:00.070 [main] SimpleValueBinder - Starting fillSimpleValue for productionCost
[DEBUG] 2020-12-07 20:25:00.070 [main] SimpleValueBinder - Starting fillSimpleValue for tags
[DEBUG] 2020-12-07 20:25:00.070 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-12-07 20:25:00.070 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-12-07 20:25:00.070 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-07 20:25:00.070 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-12-07 20:25:00.070 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-12-07 20:25:00.070 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-12-07 20:25:00.070 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-07 20:25:00.070 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-07 20:25:00.070 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-12-07 20:25:00.070 [main] PrimaryKey - Forcing column [item_id] to be non-null as it is part of the primary key for table [product]
[DEBUG] 2020-12-07 20:25:00.070 [main] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-12-07 20:25:00.070 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-12-07 20:25:00.070 [main] CollectionSecondPass - Second pass for collection: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:25:00.070 [main] CollectionBinder - Binding a collection of element: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:25:00.214 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-12-07 20:25:00.216 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-12-07 20:25:00.216 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-12-07 20:25:00.238 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-12-07 20:25:00.238 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-12-07 20:25:00.246 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-12-07 20:25:00.333 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-12-07 20:25:00.338 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-12-07 20:25:00.338 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fb65013
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1744a475
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2eb917d0
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:25:00.338 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3681037
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3681037
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f3e7344
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f3e7344
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@782bf610
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@782bf610
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ad9e63e
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5524b72f
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4e6f2bb5
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4e6f2bb5
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6cd166b8
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6cd166b8
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@706eab5d
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@706eab5d
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@61f39bb
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@61f39bb
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d654825
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d654825
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b0fc838
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b0fc838
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2954b5ea
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2954b5ea
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3ab6678b
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3ab6678b
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642505c7
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642505c7
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1abfe081
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1abfe081
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@77d680e6
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77d680e6
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5cb5bb88
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2dd8239
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3f92a84e
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f92a84e
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5fcfca62
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fcfca62
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5b051a5c
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5b051a5c
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@10641c09
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10641c09
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@764cba
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@764cba
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3872bc37
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:25:00.339 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:25:00.341 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:25:00.341 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:25:00.341 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@70f822e
[DEBUG] 2020-12-07 20:25:00.341 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@17a703f5
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3e1a3801
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@222afc67
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@670d4d38
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@670d4d38
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e060819
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5633dafd
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5633dafd
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@d8d9199
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@d8d9199
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71ad3d8a
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@13da7ab0
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@81b5db0
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7173ae5b
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7173ae5b
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f1266c6
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3913f206
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e8799f
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b353651
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@270d43a7
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1280682
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41ccb3b9
[DEBUG] 2020-12-07 20:25:00.343 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53d9826f
[DEBUG] 2020-12-07 20:25:00.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-12-07 20:25:00.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-12-07 20:25:00.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-07 20:25:00.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-07 20:25:00.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-12-07 20:25:00.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-12-07 20:25:00.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-12-07 20:25:00.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-07 20:25:00.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-12-07 20:25:00.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-12-07 20:25:00.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-12-07 20:25:00.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-12-07 20:25:00.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-07 20:25:00.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-12-07 20:25:00.349 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test?serverTimezone=UTC
[INFO ] 2020-12-07 20:25:00.349 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-12-07 20:25:00.349 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-12-07 20:25:00.398 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-12-07 20:25:00.549 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-12-07 20:25:00.549 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-12-07 20:25:00.549 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-12-07 20:25:00.550 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-12-07 20:25:00.550 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-12-07 20:25:00.550 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-12-07 20:25:00.565 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-12-07 20:25:00.571 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77d4ac52] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@29f38091]
[DEBUG] 2020-12-07 20:25:00.572 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Product
[DEBUG] 2020-12-07 20:25:00.572 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:25:00.572 [main] EntityBinder - Import with entity name Product
[DEBUG] 2020-12-07 20:25:00.572 [main] EntityBinder - Bind entity edu.matc.entity.Product on table product
[DEBUG] 2020-12-07 20:25:00.572 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=item_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.573 [main] PropertyBinder - MetadataSourceProcessor property itemId with lazy=false
[DEBUG] 2020-12-07 20:25:00.573 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:itemId]
[DEBUG] 2020-12-07 20:25:00.573 [main] SimpleValueBinder - building SimpleValue for itemId
[DEBUG] 2020-12-07 20:25:00.573 [main] PropertyBinder - Building property itemId
[DEBUG] 2020-12-07 20:25:00.573 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(item_id)]), itemId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:25:00.573 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=customizable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.573 [main] PropertyBinder - MetadataSourceProcessor property customizable with lazy=false
[DEBUG] 2020-12-07 20:25:00.573 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:customizable]
[DEBUG] 2020-12-07 20:25:00.573 [main] SimpleValueBinder - building SimpleValue for customizable
[DEBUG] 2020-12-07 20:25:00.573 [main] PropertyBinder - Building property customizable
[DEBUG] 2020-12-07 20:25:00.573 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.573 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-12-07 20:25:00.573 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:description]
[DEBUG] 2020-12-07 20:25:00.573 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-12-07 20:25:00.573 [main] PropertyBinder - Building property description
[DEBUG] 2020-12-07 20:25:00.573 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.573 [main] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2020-12-07 20:25:00.573 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:image]
[DEBUG] 2020-12-07 20:25:00.573 [main] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2020-12-07 20:25:00.573 [main] PropertyBinder - Building property image
[DEBUG] 2020-12-07 20:25:00.573 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:25:00.573 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=orderItems, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.573 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.573 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.590 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=orderItems_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.590 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orderItems_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:00.590 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:25:00.590 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:25:00.590 [main] CollectionBinder - Collection role: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:25:00.590 [main] PropertyBinder - Building property orderItems
[DEBUG] 2020-12-07 20:25:00.590 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.590 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-12-07 20:25:00.590 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:price]
[DEBUG] 2020-12-07 20:25:00.590 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-12-07 20:25:00.590 [main] PropertyBinder - Building property price
[DEBUG] 2020-12-07 20:25:00.596 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=production_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.596 [main] PropertyBinder - MetadataSourceProcessor property productionCost with lazy=false
[DEBUG] 2020-12-07 20:25:00.597 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:productionCost]
[DEBUG] 2020-12-07 20:25:00.597 [main] SimpleValueBinder - building SimpleValue for productionCost
[DEBUG] 2020-12-07 20:25:00.597 [main] PropertyBinder - Building property productionCost
[DEBUG] 2020-12-07 20:25:00.602 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=tags, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.602 [main] PropertyBinder - MetadataSourceProcessor property tags with lazy=false
[DEBUG] 2020-12-07 20:25:00.602 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:tags]
[DEBUG] 2020-12-07 20:25:00.602 [main] SimpleValueBinder - building SimpleValue for tags
[DEBUG] 2020-12-07 20:25:00.602 [main] PropertyBinder - Building property tags
[DEBUG] 2020-12-07 20:25:00.602 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.602 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-12-07 20:25:00.607 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:title]
[DEBUG] 2020-12-07 20:25:00.607 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-12-07 20:25:00.607 [main] PropertyBinder - Building property title
[DEBUG] 2020-12-07 20:25:00.607 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-07 20:25:00.607 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.609 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-07 20:25:00.613 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-12-07 20:25:00.613 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:25:00.613 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-12-07 20:25:00.613 [main] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2020-12-07 20:25:00.614 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.614 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-12-07 20:25:00.614 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-12-07 20:25:00.614 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-12-07 20:25:00.614 [main] PropertyBinder - Building property userId
[DEBUG] 2020-12-07 20:25:00.614 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:25:00.614 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.614 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-07 20:25:00.614 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2020-12-07 20:25:00.614 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-07 20:25:00.614 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-07 20:25:00.615 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.615 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-12-07 20:25:00.615 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2020-12-07 20:25:00.615 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-12-07 20:25:00.615 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-12-07 20:25:00.615 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.615 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-12-07 20:25:00.615 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2020-12-07 20:25:00.615 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-12-07 20:25:00.615 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-12-07 20:25:00.615 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.615 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.615 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.615 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.615 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.615 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:00.615 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.615 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.615 [main] CollectionBinder - Collection role: edu.matc.entity.User.orders
[DEBUG] 2020-12-07 20:25:00.615 [main] PropertyBinder - Building property orders
[DEBUG] 2020-12-07 20:25:00.615 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.615 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-12-07 20:25:00.615 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2020-12-07 20:25:00.615 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-12-07 20:25:00.616 [main] PropertyBinder - Building property password
[DEBUG] 2020-12-07 20:25:00.616 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.616 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.616 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.616 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.616 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.616 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:00.616 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.616 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.616 [main] CollectionBinder - Collection role: edu.matc.entity.User.products
[DEBUG] 2020-12-07 20:25:00.616 [main] PropertyBinder - Building property products
[DEBUG] 2020-12-07 20:25:00.616 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.630 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.630 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.630 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.630 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.630 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:00.630 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.630 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:00.630 [main] CollectionBinder - Collection role: edu.matc.entity.User.roles
[DEBUG] 2020-12-07 20:25:00.630 [main] PropertyBinder - Building property roles
[DEBUG] 2020-12-07 20:25:00.630 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Role
[DEBUG] 2020-12-07 20:25:00.630 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:25:00.630 [main] EntityBinder - Import with entity name Role
[DEBUG] 2020-12-07 20:25:00.630 [main] EntityBinder - Bind entity edu.matc.entity.Role on table role
[DEBUG] 2020-12-07 20:25:00.631 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.631 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-07 20:25:00.631 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:id]
[DEBUG] 2020-12-07 20:25:00.631 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-07 20:25:00.631 [main] PropertyBinder - Building property id
[DEBUG] 2020-12-07 20:25:00.631 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:25:00.631 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.631 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-07 20:25:00.631 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:email]
[DEBUG] 2020-12-07 20:25:00.631 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-07 20:25:00.631 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-07 20:25:00.631 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.631 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-12-07 20:25:00.631 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:roleName]
[DEBUG] 2020-12-07 20:25:00.631 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-12-07 20:25:00.631 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-12-07 20:25:00.632 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-07 20:25:00.632 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:00.632 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-07 20:25:00.646 [main] SimpleValueBinder - Starting fillSimpleValue for itemId
[DEBUG] 2020-12-07 20:25:00.646 [main] SimpleValueBinder - Starting fillSimpleValue for customizable
[DEBUG] 2020-12-07 20:25:00.647 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-12-07 20:25:00.647 [main] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2020-12-07 20:25:00.647 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-12-07 20:25:00.647 [main] SimpleValueBinder - Starting fillSimpleValue for productionCost
[DEBUG] 2020-12-07 20:25:00.647 [main] SimpleValueBinder - Starting fillSimpleValue for tags
[DEBUG] 2020-12-07 20:25:00.647 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-12-07 20:25:00.647 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-12-07 20:25:00.647 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-07 20:25:00.647 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-12-07 20:25:00.647 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-12-07 20:25:00.647 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-12-07 20:25:00.647 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-07 20:25:00.647 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-07 20:25:00.647 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-12-07 20:25:00.647 [main] PrimaryKey - Forcing column [item_id] to be non-null as it is part of the primary key for table [product]
[DEBUG] 2020-12-07 20:25:00.647 [main] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-12-07 20:25:00.647 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-12-07 20:25:00.647 [main] CollectionSecondPass - Second pass for collection: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:25:00.647 [main] CollectionBinder - Binding a collection of element: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:25:00.748 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-12-07 20:25:00.751 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-12-07 20:25:00.751 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-12-07 20:25:00.775 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-12-07 20:25:00.775 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-12-07 20:25:00.776 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-12-07 20:25:00.853 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-12-07 20:25:00.859 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-12-07 20:25:00.859 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fb65013
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1744a475
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2eb917d0
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3681037
[DEBUG] 2020-12-07 20:25:00.859 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3681037
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f3e7344
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f3e7344
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@782bf610
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@782bf610
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ad9e63e
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5524b72f
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4e6f2bb5
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4e6f2bb5
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6cd166b8
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6cd166b8
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@706eab5d
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@706eab5d
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@61f39bb
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@61f39bb
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d654825
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d654825
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b0fc838
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b0fc838
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2954b5ea
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2954b5ea
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3ab6678b
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3ab6678b
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642505c7
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642505c7
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1abfe081
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1abfe081
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@77d680e6
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77d680e6
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5cb5bb88
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2dd8239
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3f92a84e
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f92a84e
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5fcfca62
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fcfca62
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5b051a5c
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5b051a5c
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@10641c09
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10641c09
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@764cba
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@764cba
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3872bc37
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@70f822e
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@17a703f5
[DEBUG] 2020-12-07 20:25:00.860 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3e1a3801
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@222afc67
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@670d4d38
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@670d4d38
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e060819
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5633dafd
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5633dafd
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@d8d9199
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@d8d9199
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71ad3d8a
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@13da7ab0
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@81b5db0
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7173ae5b
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7173ae5b
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3fc7c734
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@f0a66bd
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@460b50df
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1cf336fd
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d0cac30
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@41ef1ea2
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5dfe23e8
[DEBUG] 2020-12-07 20:25:00.861 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@583fb274
[DEBUG] 2020-12-07 20:25:00.865 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-12-07 20:25:00.865 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-12-07 20:25:00.865 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-07 20:25:00.865 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-07 20:25:00.865 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-12-07 20:25:00.865 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-12-07 20:25:00.867 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-12-07 20:25:00.868 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-07 20:25:00.868 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-12-07 20:25:00.868 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-12-07 20:25:00.868 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-12-07 20:25:00.868 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-12-07 20:25:00.868 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-07 20:25:00.868 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-12-07 20:25:00.868 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test?serverTimezone=UTC
[INFO ] 2020-12-07 20:25:00.868 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-12-07 20:25:00.868 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-12-07 20:25:00.915 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-12-07 20:25:01.020 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-12-07 20:25:01.020 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-12-07 20:25:01.020 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-12-07 20:25:01.020 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-12-07 20:25:01.020 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-12-07 20:25:01.020 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-12-07 20:25:01.030 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-12-07 20:25:01.031 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1de0641b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@68b734a8]
[DEBUG] 2020-12-07 20:25:01.031 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Product
[DEBUG] 2020-12-07 20:25:01.038 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:25:01.038 [main] EntityBinder - Import with entity name Product
[DEBUG] 2020-12-07 20:25:01.038 [main] EntityBinder - Bind entity edu.matc.entity.Product on table product
[DEBUG] 2020-12-07 20:25:01.039 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=item_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.039 [main] PropertyBinder - MetadataSourceProcessor property itemId with lazy=false
[DEBUG] 2020-12-07 20:25:01.039 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:itemId]
[DEBUG] 2020-12-07 20:25:01.039 [main] SimpleValueBinder - building SimpleValue for itemId
[DEBUG] 2020-12-07 20:25:01.039 [main] PropertyBinder - Building property itemId
[DEBUG] 2020-12-07 20:25:01.039 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(item_id)]), itemId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:25:01.039 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=customizable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.039 [main] PropertyBinder - MetadataSourceProcessor property customizable with lazy=false
[DEBUG] 2020-12-07 20:25:01.039 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:customizable]
[DEBUG] 2020-12-07 20:25:01.039 [main] SimpleValueBinder - building SimpleValue for customizable
[DEBUG] 2020-12-07 20:25:01.039 [main] PropertyBinder - Building property customizable
[DEBUG] 2020-12-07 20:25:01.039 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.039 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-12-07 20:25:01.039 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:description]
[DEBUG] 2020-12-07 20:25:01.039 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-12-07 20:25:01.039 [main] PropertyBinder - Building property description
[DEBUG] 2020-12-07 20:25:01.039 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.039 [main] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2020-12-07 20:25:01.039 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:image]
[DEBUG] 2020-12-07 20:25:01.039 [main] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2020-12-07 20:25:01.039 [main] PropertyBinder - Building property image
[DEBUG] 2020-12-07 20:25:01.039 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:25:01.039 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=orderItems, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.039 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.040 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.040 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=orderItems_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.040 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orderItems_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:01.040 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:25:01.040 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:25:01.040 [main] CollectionBinder - Collection role: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:25:01.040 [main] PropertyBinder - Building property orderItems
[DEBUG] 2020-12-07 20:25:01.040 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.040 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-12-07 20:25:01.040 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:price]
[DEBUG] 2020-12-07 20:25:01.040 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-12-07 20:25:01.040 [main] PropertyBinder - Building property price
[DEBUG] 2020-12-07 20:25:01.040 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=production_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.040 [main] PropertyBinder - MetadataSourceProcessor property productionCost with lazy=false
[DEBUG] 2020-12-07 20:25:01.040 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:productionCost]
[DEBUG] 2020-12-07 20:25:01.040 [main] SimpleValueBinder - building SimpleValue for productionCost
[DEBUG] 2020-12-07 20:25:01.040 [main] PropertyBinder - Building property productionCost
[DEBUG] 2020-12-07 20:25:01.040 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=tags, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.040 [main] PropertyBinder - MetadataSourceProcessor property tags with lazy=false
[DEBUG] 2020-12-07 20:25:01.040 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:tags]
[DEBUG] 2020-12-07 20:25:01.040 [main] SimpleValueBinder - building SimpleValue for tags
[DEBUG] 2020-12-07 20:25:01.040 [main] PropertyBinder - Building property tags
[DEBUG] 2020-12-07 20:25:01.040 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.040 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-12-07 20:25:01.040 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:title]
[DEBUG] 2020-12-07 20:25:01.040 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-12-07 20:25:01.040 [main] PropertyBinder - Building property title
[DEBUG] 2020-12-07 20:25:01.040 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-07 20:25:01.041 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.041 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-07 20:25:01.041 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-12-07 20:25:01.041 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:25:01.041 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-12-07 20:25:01.070 [main] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2020-12-07 20:25:01.071 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.077 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-12-07 20:25:01.077 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-12-07 20:25:01.077 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-12-07 20:25:01.077 [main] PropertyBinder - Building property userId
[DEBUG] 2020-12-07 20:25:01.078 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:25:01.078 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.078 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-07 20:25:01.078 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2020-12-07 20:25:01.078 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-07 20:25:01.078 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-07 20:25:01.078 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.078 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-12-07 20:25:01.078 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2020-12-07 20:25:01.078 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-12-07 20:25:01.078 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-12-07 20:25:01.078 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.078 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-12-07 20:25:01.078 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2020-12-07 20:25:01.078 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-12-07 20:25:01.078 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-12-07 20:25:01.078 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.078 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.078 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.078 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.078 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.078 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:01.078 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.079 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.079 [main] CollectionBinder - Collection role: edu.matc.entity.User.orders
[DEBUG] 2020-12-07 20:25:01.079 [main] PropertyBinder - Building property orders
[DEBUG] 2020-12-07 20:25:01.079 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.079 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-12-07 20:25:01.079 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2020-12-07 20:25:01.079 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-12-07 20:25:01.079 [main] PropertyBinder - Building property password
[DEBUG] 2020-12-07 20:25:01.079 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.079 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.094 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.094 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.094 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.094 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:01.094 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.094 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.094 [main] CollectionBinder - Collection role: edu.matc.entity.User.products
[DEBUG] 2020-12-07 20:25:01.095 [main] PropertyBinder - Building property products
[DEBUG] 2020-12-07 20:25:01.095 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.095 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.095 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.095 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.103 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.103 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:01.103 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.103 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.103 [main] CollectionBinder - Collection role: edu.matc.entity.User.roles
[DEBUG] 2020-12-07 20:25:01.103 [main] PropertyBinder - Building property roles
[DEBUG] 2020-12-07 20:25:01.103 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Role
[DEBUG] 2020-12-07 20:25:01.104 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:25:01.104 [main] EntityBinder - Import with entity name Role
[DEBUG] 2020-12-07 20:25:01.105 [main] EntityBinder - Bind entity edu.matc.entity.Role on table role
[DEBUG] 2020-12-07 20:25:01.110 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.110 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-07 20:25:01.110 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:id]
[DEBUG] 2020-12-07 20:25:01.111 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-07 20:25:01.111 [main] PropertyBinder - Building property id
[DEBUG] 2020-12-07 20:25:01.111 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:25:01.111 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.111 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-07 20:25:01.111 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:email]
[DEBUG] 2020-12-07 20:25:01.111 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-07 20:25:01.111 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-07 20:25:01.111 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.111 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-12-07 20:25:01.111 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:roleName]
[DEBUG] 2020-12-07 20:25:01.111 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-12-07 20:25:01.111 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-12-07 20:25:01.111 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-07 20:25:01.111 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.111 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-07 20:25:01.127 [main] SimpleValueBinder - Starting fillSimpleValue for itemId
[DEBUG] 2020-12-07 20:25:01.127 [main] SimpleValueBinder - Starting fillSimpleValue for customizable
[DEBUG] 2020-12-07 20:25:01.130 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-12-07 20:25:01.131 [main] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2020-12-07 20:25:01.131 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-12-07 20:25:01.131 [main] SimpleValueBinder - Starting fillSimpleValue for productionCost
[DEBUG] 2020-12-07 20:25:01.131 [main] SimpleValueBinder - Starting fillSimpleValue for tags
[DEBUG] 2020-12-07 20:25:01.131 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-12-07 20:25:01.131 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-12-07 20:25:01.131 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-07 20:25:01.132 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-12-07 20:25:01.132 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-12-07 20:25:01.132 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-12-07 20:25:01.132 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-07 20:25:01.132 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-07 20:25:01.132 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-12-07 20:25:01.132 [main] PrimaryKey - Forcing column [item_id] to be non-null as it is part of the primary key for table [product]
[DEBUG] 2020-12-07 20:25:01.132 [main] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-12-07 20:25:01.132 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-12-07 20:25:01.132 [main] CollectionSecondPass - Second pass for collection: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:25:01.132 [main] CollectionBinder - Binding a collection of element: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:25:01.228 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-12-07 20:25:01.229 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-12-07 20:25:01.229 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-12-07 20:25:01.242 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-12-07 20:25:01.242 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-12-07 20:25:01.243 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-12-07 20:25:01.306 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-12-07 20:25:01.310 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-12-07 20:25:01.310 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-12-07 20:25:01.310 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:25:01.310 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:25:01.310 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:25:01.310 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fb65013
[DEBUG] 2020-12-07 20:25:01.310 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1744a475
[DEBUG] 2020-12-07 20:25:01.310 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2eb917d0
[DEBUG] 2020-12-07 20:25:01.310 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3681037
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3681037
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f3e7344
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f3e7344
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@782bf610
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@782bf610
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ad9e63e
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5524b72f
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4e6f2bb5
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4e6f2bb5
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6cd166b8
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6cd166b8
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@706eab5d
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@706eab5d
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@61f39bb
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@61f39bb
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d654825
[DEBUG] 2020-12-07 20:25:01.312 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d654825
[DEBUG] 2020-12-07 20:25:01.313 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b0fc838
[DEBUG] 2020-12-07 20:25:01.313 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b0fc838
[DEBUG] 2020-12-07 20:25:01.313 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2954b5ea
[DEBUG] 2020-12-07 20:25:01.313 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2954b5ea
[DEBUG] 2020-12-07 20:25:01.313 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3ab6678b
[DEBUG] 2020-12-07 20:25:01.313 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3ab6678b
[DEBUG] 2020-12-07 20:25:01.313 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642505c7
[DEBUG] 2020-12-07 20:25:01.313 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642505c7
[DEBUG] 2020-12-07 20:25:01.313 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1abfe081
[DEBUG] 2020-12-07 20:25:01.313 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1abfe081
[DEBUG] 2020-12-07 20:25:01.313 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@77d680e6
[DEBUG] 2020-12-07 20:25:01.313 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77d680e6
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5cb5bb88
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2dd8239
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3f92a84e
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f92a84e
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5fcfca62
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fcfca62
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5b051a5c
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5b051a5c
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@10641c09
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10641c09
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@764cba
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@764cba
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3872bc37
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@70f822e
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@17a703f5
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3e1a3801
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@222afc67
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@670d4d38
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@670d4d38
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e060819
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5633dafd
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5633dafd
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@d8d9199
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@d8d9199
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71ad3d8a
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@13da7ab0
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@81b5db0
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7173ae5b
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7173ae5b
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@67bd351e
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4cc7d00d
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@468e8565
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@91da29b
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7066363
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75b38c36
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47248a48
[DEBUG] 2020-12-07 20:25:01.316 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2349f14d
[DEBUG] 2020-12-07 20:25:01.321 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-12-07 20:25:01.321 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-12-07 20:25:01.321 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-07 20:25:01.321 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-07 20:25:01.321 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-12-07 20:25:01.321 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-12-07 20:25:01.321 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-12-07 20:25:01.321 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-07 20:25:01.321 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-12-07 20:25:01.322 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-12-07 20:25:01.322 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-12-07 20:25:01.322 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-12-07 20:25:01.322 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-07 20:25:01.322 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-12-07 20:25:01.322 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test?serverTimezone=UTC
[INFO ] 2020-12-07 20:25:01.322 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-12-07 20:25:01.322 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-12-07 20:25:01.393 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-12-07 20:25:01.524 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-12-07 20:25:01.524 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-12-07 20:25:01.524 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-12-07 20:25:01.524 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-12-07 20:25:01.525 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-12-07 20:25:01.525 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-12-07 20:25:01.543 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-12-07 20:25:01.543 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16c1519e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2a02e34b]
[DEBUG] 2020-12-07 20:25:01.544 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Product
[DEBUG] 2020-12-07 20:25:01.544 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:25:01.544 [main] EntityBinder - Import with entity name Product
[DEBUG] 2020-12-07 20:25:01.549 [main] EntityBinder - Bind entity edu.matc.entity.Product on table product
[DEBUG] 2020-12-07 20:25:01.550 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=item_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.550 [main] PropertyBinder - MetadataSourceProcessor property itemId with lazy=false
[DEBUG] 2020-12-07 20:25:01.550 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:itemId]
[DEBUG] 2020-12-07 20:25:01.550 [main] SimpleValueBinder - building SimpleValue for itemId
[DEBUG] 2020-12-07 20:25:01.550 [main] PropertyBinder - Building property itemId
[DEBUG] 2020-12-07 20:25:01.550 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(item_id)]), itemId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:25:01.550 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=customizable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.550 [main] PropertyBinder - MetadataSourceProcessor property customizable with lazy=false
[DEBUG] 2020-12-07 20:25:01.550 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:customizable]
[DEBUG] 2020-12-07 20:25:01.550 [main] SimpleValueBinder - building SimpleValue for customizable
[DEBUG] 2020-12-07 20:25:01.550 [main] PropertyBinder - Building property customizable
[DEBUG] 2020-12-07 20:25:01.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.551 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-12-07 20:25:01.551 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:description]
[DEBUG] 2020-12-07 20:25:01.551 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-12-07 20:25:01.551 [main] PropertyBinder - Building property description
[DEBUG] 2020-12-07 20:25:01.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.551 [main] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2020-12-07 20:25:01.551 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:image]
[DEBUG] 2020-12-07 20:25:01.551 [main] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2020-12-07 20:25:01.551 [main] PropertyBinder - Building property image
[DEBUG] 2020-12-07 20:25:01.551 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:25:01.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=orderItems, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=orderItems_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.551 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orderItems_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:01.551 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:25:01.551 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:25:01.551 [main] CollectionBinder - Collection role: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:25:01.551 [main] PropertyBinder - Building property orderItems
[DEBUG] 2020-12-07 20:25:01.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.551 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-12-07 20:25:01.551 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:price]
[DEBUG] 2020-12-07 20:25:01.551 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-12-07 20:25:01.551 [main] PropertyBinder - Building property price
[DEBUG] 2020-12-07 20:25:01.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=production_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.552 [main] PropertyBinder - MetadataSourceProcessor property productionCost with lazy=false
[DEBUG] 2020-12-07 20:25:01.552 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:productionCost]
[DEBUG] 2020-12-07 20:25:01.552 [main] SimpleValueBinder - building SimpleValue for productionCost
[DEBUG] 2020-12-07 20:25:01.552 [main] PropertyBinder - Building property productionCost
[DEBUG] 2020-12-07 20:25:01.552 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=tags, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.552 [main] PropertyBinder - MetadataSourceProcessor property tags with lazy=false
[DEBUG] 2020-12-07 20:25:01.569 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:tags]
[DEBUG] 2020-12-07 20:25:01.569 [main] SimpleValueBinder - building SimpleValue for tags
[DEBUG] 2020-12-07 20:25:01.569 [main] PropertyBinder - Building property tags
[DEBUG] 2020-12-07 20:25:01.569 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.569 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-12-07 20:25:01.569 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:title]
[DEBUG] 2020-12-07 20:25:01.569 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-12-07 20:25:01.569 [main] PropertyBinder - Building property title
[DEBUG] 2020-12-07 20:25:01.569 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-07 20:25:01.569 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.569 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-07 20:25:01.569 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-12-07 20:25:01.570 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:25:01.570 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-12-07 20:25:01.570 [main] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2020-12-07 20:25:01.583 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.583 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-12-07 20:25:01.583 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-12-07 20:25:01.583 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-12-07 20:25:01.583 [main] PropertyBinder - Building property userId
[DEBUG] 2020-12-07 20:25:01.583 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:25:01.583 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.583 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-07 20:25:01.583 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2020-12-07 20:25:01.583 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-07 20:25:01.584 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-07 20:25:01.584 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.584 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-12-07 20:25:01.584 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2020-12-07 20:25:01.584 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-12-07 20:25:01.584 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-12-07 20:25:01.584 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.584 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-12-07 20:25:01.584 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2020-12-07 20:25:01.584 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-12-07 20:25:01.584 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-12-07 20:25:01.584 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.584 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.584 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.584 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.584 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.584 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:01.584 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.584 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.584 [main] CollectionBinder - Collection role: edu.matc.entity.User.orders
[DEBUG] 2020-12-07 20:25:01.584 [main] PropertyBinder - Building property orders
[DEBUG] 2020-12-07 20:25:01.584 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.584 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-12-07 20:25:01.590 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2020-12-07 20:25:01.590 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-12-07 20:25:01.590 [main] PropertyBinder - Building property password
[DEBUG] 2020-12-07 20:25:01.590 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.590 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.590 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.590 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.591 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.591 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:01.591 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.591 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.591 [main] CollectionBinder - Collection role: edu.matc.entity.User.products
[DEBUG] 2020-12-07 20:25:01.591 [main] PropertyBinder - Building property products
[DEBUG] 2020-12-07 20:25:01.591 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.591 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.591 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.591 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.591 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.591 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:01.591 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.591 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:01.591 [main] CollectionBinder - Collection role: edu.matc.entity.User.roles
[DEBUG] 2020-12-07 20:25:01.591 [main] PropertyBinder - Building property roles
[DEBUG] 2020-12-07 20:25:01.591 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Role
[DEBUG] 2020-12-07 20:25:01.591 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:25:01.591 [main] EntityBinder - Import with entity name Role
[DEBUG] 2020-12-07 20:25:01.591 [main] EntityBinder - Bind entity edu.matc.entity.Role on table role
[DEBUG] 2020-12-07 20:25:01.608 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.608 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-07 20:25:01.608 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:id]
[DEBUG] 2020-12-07 20:25:01.608 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-07 20:25:01.608 [main] PropertyBinder - Building property id
[DEBUG] 2020-12-07 20:25:01.608 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:25:01.608 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.609 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-07 20:25:01.609 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:email]
[DEBUG] 2020-12-07 20:25:01.609 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-07 20:25:01.609 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-07 20:25:01.609 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.609 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-12-07 20:25:01.609 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:roleName]
[DEBUG] 2020-12-07 20:25:01.609 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-12-07 20:25:01.609 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-12-07 20:25:01.609 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-07 20:25:01.609 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:01.609 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for itemId
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for customizable
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for productionCost
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for tags
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-07 20:25:01.622 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-12-07 20:25:01.628 [main] PrimaryKey - Forcing column [item_id] to be non-null as it is part of the primary key for table [product]
[DEBUG] 2020-12-07 20:25:01.628 [main] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-12-07 20:25:01.628 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-12-07 20:25:01.628 [main] CollectionSecondPass - Second pass for collection: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:25:01.628 [main] CollectionBinder - Binding a collection of element: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:25:01.764 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-12-07 20:25:01.764 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-12-07 20:25:01.765 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-12-07 20:25:01.790 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-12-07 20:25:01.791 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-12-07 20:25:01.796 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-12-07 20:25:01.870 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-12-07 20:25:01.872 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-12-07 20:25:01.872 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51d9b06c
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fb65013
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1744a475
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2eb917d0
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d278b4d
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e530163
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@23706db8
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7bca6fac
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31d6f3fe
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@165e389b
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71f0b72e
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3681037
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3681037
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f3e7344
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f3e7344
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@782bf610
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@782bf610
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ad9e63e
[DEBUG] 2020-12-07 20:25:01.872 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5524b72f
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4e6f2bb5
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4e6f2bb5
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6cd166b8
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6cd166b8
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@706eab5d
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@706eab5d
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@61f39bb
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@61f39bb
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4d654825
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4d654825
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b0fc838
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b0fc838
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2954b5ea
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2954b5ea
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3ab6678b
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3ab6678b
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642505c7
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@642505c7
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1abfe081
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1abfe081
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@77d680e6
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77d680e6
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c1f6d57
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5cb5bb88
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20e3c449
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2dd8239
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3f92a84e
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f92a84e
[DEBUG] 2020-12-07 20:25:01.873 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5fcfca62
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fcfca62
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5b051a5c
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5b051a5c
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@10641c09
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10641c09
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@764cba
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@764cba
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3872bc37
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@11b455e5
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@64524dd
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@70f822e
[DEBUG] 2020-12-07 20:25:01.882 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@17a703f5
[DEBUG] 2020-12-07 20:25:01.883 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:25:01.883 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:25:01.883 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@65f2f9b0
[DEBUG] 2020-12-07 20:25:01.883 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:25:01.883 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:25:01.883 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@38fc5554
[DEBUG] 2020-12-07 20:25:01.883 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3e1a3801
[DEBUG] 2020-12-07 20:25:01.883 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@222afc67
[DEBUG] 2020-12-07 20:25:01.883 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@670d4d38
[DEBUG] 2020-12-07 20:25:01.883 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@670d4d38
[DEBUG] 2020-12-07 20:25:01.883 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e060819
[DEBUG] 2020-12-07 20:25:01.883 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5633dafd
[DEBUG] 2020-12-07 20:25:01.883 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5633dafd
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@d8d9199
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@d8d9199
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71ad3d8a
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@13da7ab0
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@81b5db0
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7173ae5b
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7173ae5b
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b862408
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ddee60f
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6e829e50
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4aa2877c
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@307e4c44
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a8a3ada
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@500051c5
[DEBUG] 2020-12-07 20:25:01.886 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ec7b5de
[DEBUG] 2020-12-07 20:25:01.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-12-07 20:25:01.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-12-07 20:25:01.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-07 20:25:01.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-07 20:25:01.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-12-07 20:25:01.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-12-07 20:25:01.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-12-07 20:25:01.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-07 20:25:01.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-12-07 20:25:01.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-12-07 20:25:01.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-12-07 20:25:01.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-12-07 20:25:01.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-07 20:25:01.892 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-12-07 20:25:01.892 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test?serverTimezone=UTC
[INFO ] 2020-12-07 20:25:01.892 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-12-07 20:25:01.892 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-12-07 20:25:01.985 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-12-07 20:25:02.094 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-12-07 20:25:02.095 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-12-07 20:25:02.095 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-12-07 20:25:02.095 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-12-07 20:25:02.096 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-12-07 20:25:02.097 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-12-07 20:25:02.115 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-12-07 20:25:02.115 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@31973858] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@65514add]
[DEBUG] 2020-12-07 20:25:02.116 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Product
[DEBUG] 2020-12-07 20:25:02.116 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:25:02.116 [main] EntityBinder - Import with entity name Product
[DEBUG] 2020-12-07 20:25:02.116 [main] EntityBinder - Bind entity edu.matc.entity.Product on table product
[DEBUG] 2020-12-07 20:25:02.116 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=item_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.124 [main] PropertyBinder - MetadataSourceProcessor property itemId with lazy=false
[DEBUG] 2020-12-07 20:25:02.124 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:itemId]
[DEBUG] 2020-12-07 20:25:02.124 [main] SimpleValueBinder - building SimpleValue for itemId
[DEBUG] 2020-12-07 20:25:02.124 [main] PropertyBinder - Building property itemId
[DEBUG] 2020-12-07 20:25:02.124 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(item_id)]), itemId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:25:02.125 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=customizable, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.125 [main] PropertyBinder - MetadataSourceProcessor property customizable with lazy=false
[DEBUG] 2020-12-07 20:25:02.125 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:customizable]
[DEBUG] 2020-12-07 20:25:02.125 [main] SimpleValueBinder - building SimpleValue for customizable
[DEBUG] 2020-12-07 20:25:02.125 [main] PropertyBinder - Building property customizable
[DEBUG] 2020-12-07 20:25:02.125 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.125 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-12-07 20:25:02.125 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:description]
[DEBUG] 2020-12-07 20:25:02.125 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-12-07 20:25:02.125 [main] PropertyBinder - Building property description
[DEBUG] 2020-12-07 20:25:02.125 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.125 [main] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2020-12-07 20:25:02.125 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:image]
[DEBUG] 2020-12-07 20:25:02.125 [main] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2020-12-07 20:25:02.125 [main] PropertyBinder - Building property image
[DEBUG] 2020-12-07 20:25:02.125 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:25:02.125 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=orderItems, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.125 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.134 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.134 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=orderItems_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.134 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orderItems_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:02.134 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:25:02.134 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='item_id'}
[DEBUG] 2020-12-07 20:25:02.134 [main] CollectionBinder - Collection role: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:25:02.134 [main] PropertyBinder - Building property orderItems
[DEBUG] 2020-12-07 20:25:02.134 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.134 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2020-12-07 20:25:02.134 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:price]
[DEBUG] 2020-12-07 20:25:02.134 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2020-12-07 20:25:02.134 [main] PropertyBinder - Building property price
[DEBUG] 2020-12-07 20:25:02.135 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=production_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.135 [main] PropertyBinder - MetadataSourceProcessor property productionCost with lazy=false
[DEBUG] 2020-12-07 20:25:02.135 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:productionCost]
[DEBUG] 2020-12-07 20:25:02.135 [main] SimpleValueBinder - building SimpleValue for productionCost
[DEBUG] 2020-12-07 20:25:02.135 [main] PropertyBinder - Building property productionCost
[DEBUG] 2020-12-07 20:25:02.135 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=tags, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.135 [main] PropertyBinder - MetadataSourceProcessor property tags with lazy=false
[DEBUG] 2020-12-07 20:25:02.135 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:tags]
[DEBUG] 2020-12-07 20:25:02.135 [main] SimpleValueBinder - building SimpleValue for tags
[DEBUG] 2020-12-07 20:25:02.135 [main] PropertyBinder - Building property tags
[DEBUG] 2020-12-07 20:25:02.135 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=title, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.135 [main] PropertyBinder - MetadataSourceProcessor property title with lazy=false
[DEBUG] 2020-12-07 20:25:02.135 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Product:title]
[DEBUG] 2020-12-07 20:25:02.147 [main] SimpleValueBinder - building SimpleValue for title
[DEBUG] 2020-12-07 20:25:02.147 [main] PropertyBinder - Building property title
[DEBUG] 2020-12-07 20:25:02.147 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-07 20:25:02.147 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.147 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-07 20:25:02.152 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2020-12-07 20:25:02.152 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:25:02.152 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-12-07 20:25:02.152 [main] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2020-12-07 20:25:02.157 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.157 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2020-12-07 20:25:02.157 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userId]
[DEBUG] 2020-12-07 20:25:02.157 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2020-12-07 20:25:02.157 [main] PropertyBinder - Building property userId
[DEBUG] 2020-12-07 20:25:02.157 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:25:02.157 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.157 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-07 20:25:02.157 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2020-12-07 20:25:02.158 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-07 20:25:02.158 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-07 20:25:02.158 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.158 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-12-07 20:25:02.158 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2020-12-07 20:25:02.158 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-12-07 20:25:02.158 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-12-07 20:25:02.158 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.158 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-12-07 20:25:02.158 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2020-12-07 20:25:02.158 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-12-07 20:25:02.158 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-12-07 20:25:02.158 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:02.158 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.158 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.158 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.158 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.158 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:02.158 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:02.158 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:02.158 [main] CollectionBinder - Collection role: edu.matc.entity.User.orders
[DEBUG] 2020-12-07 20:25:02.158 [main] PropertyBinder - Building property orders
[DEBUG] 2020-12-07 20:25:02.158 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.158 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-12-07 20:25:02.158 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2020-12-07 20:25:02.158 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-12-07 20:25:02.159 [main] PropertyBinder - Building property password
[DEBUG] 2020-12-07 20:25:02.159 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:02.159 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.159 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.159 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.159 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.159 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:02.159 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:02.167 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:02.167 [main] CollectionBinder - Collection role: edu.matc.entity.User.products
[DEBUG] 2020-12-07 20:25:02.167 [main] PropertyBinder - Building property products
[DEBUG] 2020-12-07 20:25:02.167 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:02.167 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.168 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.168 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.168 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.181 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-07 20:25:02.181 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:02.181 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-07 20:25:02.181 [main] CollectionBinder - Collection role: edu.matc.entity.User.roles
[DEBUG] 2020-12-07 20:25:02.181 [main] PropertyBinder - Building property roles
[DEBUG] 2020-12-07 20:25:02.181 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Role
[DEBUG] 2020-12-07 20:25:02.182 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-07 20:25:02.182 [main] EntityBinder - Import with entity name Role
[DEBUG] 2020-12-07 20:25:02.182 [main] EntityBinder - Bind entity edu.matc.entity.Role on table role
[DEBUG] 2020-12-07 20:25:02.188 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.189 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-07 20:25:02.196 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:id]
[DEBUG] 2020-12-07 20:25:02.196 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-07 20:25:02.197 [main] PropertyBinder - Building property id
[DEBUG] 2020-12-07 20:25:02.197 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-07 20:25:02.197 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.197 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-12-07 20:25:02.197 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:email]
[DEBUG] 2020-12-07 20:25:02.198 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-12-07 20:25:02.198 [main] PropertyBinder - Building property email
[DEBUG] 2020-12-07 20:25:02.198 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.198 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2020-12-07 20:25:02.198 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Role:roleName]
[DEBUG] 2020-12-07 20:25:02.198 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2020-12-07 20:25:02.198 [main] PropertyBinder - Building property roleName
[DEBUG] 2020-12-07 20:25:02.198 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-07 20:25:02.198 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-07 20:25:02.198 [main] PropertyBinder - Building property user
[DEBUG] 2020-12-07 20:25:02.198 [main] SimpleValueBinder - Starting fillSimpleValue for itemId
[DEBUG] 2020-12-07 20:25:02.198 [main] SimpleValueBinder - Starting fillSimpleValue for customizable
[DEBUG] 2020-12-07 20:25:02.198 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-12-07 20:25:02.198 [main] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2020-12-07 20:25:02.199 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2020-12-07 20:25:02.199 [main] SimpleValueBinder - Starting fillSimpleValue for productionCost
[DEBUG] 2020-12-07 20:25:02.199 [main] SimpleValueBinder - Starting fillSimpleValue for tags
[DEBUG] 2020-12-07 20:25:02.199 [main] SimpleValueBinder - Starting fillSimpleValue for title
[DEBUG] 2020-12-07 20:25:02.199 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2020-12-07 20:25:02.199 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-07 20:25:02.199 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-12-07 20:25:02.199 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-12-07 20:25:02.199 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-12-07 20:25:02.199 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-07 20:25:02.199 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-12-07 20:25:02.199 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2020-12-07 20:25:02.208 [main] PrimaryKey - Forcing column [item_id] to be non-null as it is part of the primary key for table [product]
[DEBUG] 2020-12-07 20:25:02.208 [main] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-12-07 20:25:02.212 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-12-07 20:25:02.212 [main] CollectionSecondPass - Second pass for collection: edu.matc.entity.Product.orderItems
[DEBUG] 2020-12-07 20:25:02.212 [main] CollectionBinder - Binding a collection of element: edu.matc.entity.Product.orderItems
